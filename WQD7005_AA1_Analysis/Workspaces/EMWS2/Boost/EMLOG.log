*------------------------------------------------------------*
User:                xavie
Date:                January 07, 2024
Time:                02:03:07
Site:                12601940
Platform:            W32_8HOME
Maintenance Release: 9.04.01M3P062415
EM Version:          14.1
* 
*------------------------------------------------------------*
* Training Log
Date:                January 07, 2024
Time:                02:03:03
*------------------------------------------------------------*
14715  proc freq data=EMWS2.Boost_VariableSet noprint;
14716  table ROLE*LEVEL/out=WORK.BoostMETA;
14717  run;
 
NOTE: There were 17 observations read from the data set EMWS2.BOOST_VARIABLESET.
NOTE: The data set WORK.BOOSTMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
14718  proc print data=WORK.BoostMETA label noobs;
14719  var ROLE LEVEL COUNT;
14720  label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
14721  title9 ' ';
14722  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
14723  run;
 
NOTE: There were 4 observations read from the data set WORK.BOOSTMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
14724  title10;
 
14725  %let EMNORLEN = %DMNORLEN;
EMWS2.Part_TRAIN EMWS2.Part_TRAIN
EMWS2.Part_TRAIN EMWS2.Part_TRAIN EMWS2 Part_TRAIN
EMWS2.Part_TRAIN EMWS2.Part_TRAIN
EMWS2.Part_TRAIN EMWS2.Part_TRAIN EMWS2 Part_TRAIN
>>>>>>>>>>>>>> TARGET(   USE='Y'
                         REPORT='N'
                         NAME='Churn'
                         ROLE='TARGET'
                         LEVEL='NOMINAL'
                         ORDER=''
                         CREATOR=''
                         FORMATTYPE='CATEGORY'
                         FAMILY=''
                         LOWERLIMIT=.
                         UPPERLIMIT=.
                         DISTRIBUTION=''
                         COMMENT=''
                         PRICE=.
                         TYPE='C'
                         LABEL=''
                         FORMAT='$5.'
                         INFORMAT='$5.'
                         INDEX='N'
                         INDEXTYPE='NONE'
                         LENGTH=5
                      )[11265]
PERFORMANCE  DETAILS
WORK.EM_DMDB WORK.EM_DMDB
WORK.EM_DMDB WORK.EM_DMDB WORK EM_DMDB
14810  data WORK.Boost_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
14811  length ORDER $20;
14812  label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
14813     "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
14814  set EMWS2.BOOST_CHURN_DM( where=(_TYPE_="TARGET"));
14815  NumLevels=2;
14816  select(upcase(ORDER));
14817  when('DESC') ORDER = 'Descending';
14818  when('ASC') ORDER = 'Ascending';
14819  when('FMTDESC') ORDER = 'Formatted Descending';
14820  when('FMTASC') ORDER = 'Formatted Ascending';
14821  otherwise ORDER = 'Descending';
14822  end;
14823  output;
14824  run;
 
NOTE: There were 1 observations read from the data set EMWS2.BOOST_CHURN_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.BOOST_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
14825  title9 ' ';
14826  proc print data=WORK.Boost_EVENT noobs label;
14827  var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
14828  title9 ' ';
14829  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
14830  run;
 
NOTE: There were 1 observations read from the data set WORK.BOOST_EVENT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
14831  title10;
 
"No decisions defined for target "Churn"."
14832  proc print data = EMWS2.Boost_Churn_DM noobs label;
14833  var _type_ variable label;
14834  where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
14835  label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
14836  title9 ' ';
14837  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
14838  run;
 
NOTE: There were 7 observations read from the data set EMWS2.BOOST_CHURN_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
14839  title10;
 
14840  %let EMEXCEPTIONSTRING=;
15291  *------------------------------------------------------------*;
15292  * Boost: Generation of macros and macro variables;
15293  * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
15294  *------------------------------------------------------------*;
 
15295  %let EMEXCEPTIONSTRING=;
15296  *------------------------------------------------------------*;
15297  * TRAIN: Boost;
15298  *------------------------------------------------------------*;
15299  %let EM_ACTION = TRAIN;
15300  %let syscc = 0;
15301  %macro main;
15302
15303    filename temp catalog 'sashelp.emmodl.boost_macros.source';
15304    %include temp;
15305    filename temp;
15306
15307    %setProperties;
15308
15309    %if %upcase(&EM_ACTION) = CREATE %then %do;
15310      filename temp catalog 'sashelp.emmodl.boost_create.source';
15311      %include temp;
15312      filename temp;
15313
15314      %create;
15315    %end;
15316
15317     %else
15318     %if %upcase(&EM_ACTION) = TRAIN %then %do;
15319
15320         filename temp catalog 'sashelp.emmodl.boost_train.source';
15321         %include temp;
15322         filename temp;
15323         %train;
15324     %end;
15325
15326    %else
15327    %if %upcase(&EM_ACTION) = SCORE %then %do;
15328      filename temp catalog 'sashelp.emmodl.boost_score.source';
15329      %include temp;
15330      filename temp;
15331
15332      %score;
15333
15334    %end;
15335
15336    %else
15337    %if %upcase(&EM_ACTION) = REPORT %then %do;
15338
15339         filename temp catalog 'sashelp.emmodl.boost_report.source';
15340         %include temp;
15341         filename temp;
15342
15343         %report;
15344     %end;
15345
15346     %doendm:
15347  %mend main;
15348
15349  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_MACROS.SOURCE.
15350 +
15351 +%macro SetProperties;
15352 +
15353 +     /* boost options */
15354 +     %em_checkmacro(name=EM_PROPERTY_ITERATIONS,   value=50, global=Y);
15355 +     %em_checkmacro(name=EM_PROPERTY_TRAINPROPORTION,   value=60, global=Y);
15356 +     %em_checkmacro(name=EM_PROPERTY_CATEGORICALBINS, value=30, global=Y);
15357 +     %em_checkmacro(name=EM_PROPERTY_INTERVALBINS, value=100, global=Y);
15358 +     %em_checkmacro(name=EM_PROPERTY_HUBER, value=NO, global=Y);
15359 +     %em_checkmacro(name=EM_PROPERTY_SEED,   value=12345, global=Y);
15360 +     %em_checkmacro(name=EM_PROPERTY_SHRINKAGE,   value=0.1, global=Y);
15361 +     %em_checkmacro(name=EM_PROPERTY_LEAFFRACTION,   value=0.1, global=Y);
15362 +     %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,   value=., global=Y);
15363 +     %em_checkmacro(name=EM_PROPERTY_NODESIZE,   value=20000, global=Y);
15364 +     %em_checkmacro(name=EM_PROPERTY_SUBSERIES,   value=BEST, global=Y);
15365 +     %em_checkmacro(name=EM_PROPERTY_ITERATIONNUM,   value=1, global=Y);
15366 +
15367 +     %em_checkmacro(name=EM_PROPERTY_PRECISION,    value=0, global=Y);
15368 +     %em_checkmacro(name=EM_PROPERTY_MISSING,      value=USEINSEARCH, global=Y);
15369 +     %em_checkmacro(name=EM_PROPERTY_MINCATSIZE, value=5, global=Y);
15370 +     %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,  value=2, global=Y);
15371 +     %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,   value=2, global=Y);
15372 +     %em_checkmacro(name=EM_PROPERTY_REUSEVAR,   value=1, global=Y);
15373 +     %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,   value=5000, global=Y);
15374 +     %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,   value=DISK, global=Y);
15375 +
15376 +     %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE, value=PROFIT, global=Y);
15377 +     %em_checkmacro(name=EM_PROPERTY_MEASURE, value=PROFIT, global=Y);
15378 +     %em_checkmacro(name=EM_PROPERTY_NSURRS, value=0, global=Y);
15379 +     %em_checkmacro(name=EM_PROPERTY_VARSELECTION, value=Y, global=Y);
15380 +
15381 +     %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE, value=N, global=Y);
15382 +     %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP, value=5, global=Y);
15383 +     %em_checkmacro(name=EM_PROPERTY_NUMPAIRIMP, value=0, global=Y);
15384 +
15385 +%mend SetProperties;
15386 +
15387 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_TRAIN.SOURCE.
15389 +%macro train;
15391 +   filename temp catalog 'sashelp.emmodl.boost_trainmacros.source';
15392 +   %include temp;
15393 +   filename temp;
15395 +   %if &EM_IMPORT_DATA eq %then %do;
15396 +       %let EMEXCEPTIONSTRING = exception.server.IMPORT.NOTRAIN,1;
15397 +       %put &em_codebar;
15398 +       %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_nodeTrainRawData_note, NOQUOTE));
15399 +       %put &errormsg;
15400 +       %put &em_codebar;
15401 +       %goto doendm;
15402 +   %end;
15403 +   %else
15404 +       %let EMEXCEPTIONSTRING =;
15406 +   %if  &EM_NUM_TARGET ne 1 %then %do;
15407 +        %let EMEXCEPTIONSTRING = exception.server.USE1TARGET;
15408 +        %put &em_codebar;
15409 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.use01target_err, NOQUOTE));
15410 +        %put &errormsg;
15411 +        %put &em_codebar;
15412 +        %goto doendm;
15413 +   %end;
15415 +   %let target_level = %EM_TARGET_LEVEL;
15416 +   %let target_var = %EM_TARGET;
15418 +   %if ("&target_Level" ne "INTERVAL") %then %do;
15419 +       %em_boost_makeDMDB(indata=&EM_IMPORT_DATA, target=&target_Var,
15420 +                             nLevel=_nTargetLevel);
15421 +   %end;
15423 +   /* check actual num of target levels */
15424 +   %if (&target_Level eq BINARY) %then %do;
15425 +      %if &_nTargetLevel  > 2 %then %do;
15426 +        %let EMEXCEPTIONSTRING = exception.server.METADATA.WRONGTARGETLEVEL,&target_Var;
15427 +        %put &em_codebar;
15428 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.wrongtargetlevel, NOQUOTE));
15429 +        %put &errormsg;
15430 +        %put &em_codebar;
15431 +        %goto doendm;
15432 +      %end;
15433 +   %end;
15435 +   %if  (&EM_NUM_INTERVAL_INPUT < 1) and (&EM_NUM_BINARY_INPUT < 1) and (&EM_NUM_ORDINAL_INPUT < 1)
15436 +        and (&EM_NUM_NOMINAL_INPUT < 1) %then %do;
15437 +        %let EMEXCEPTIONSTRING = exception.server.USEATLEAST1INPUTREJECT;
15438 +        %put &em_codebar;
15439 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_noInput_note, NOQUOTE));
15440 +        %put &errormsg;
15441 +        %put &em_codebar;
15442 +        %goto doendm;
15443 +   %end;
15445 +   /* Initialize property macro variables */
15446 +   %SetProperties;
15448 +   /* data sets */
15449 +   %EM_GETNAME(key=MODEL, type=DATA);
15450 +   %EM_GETNAME(key=IMPORTANCE, type=DATA);
15451 +   %EM_GETNAME(key=SUBFIT, type=DATA);
15452 +   %EM_GETNAME(key=EMOUTFIT, type=DATA);
15454 +   /* files
15455 +   %EM_GETNAME(key=BINNINGCODE, type=FILE, extension=sas);*/
15457 +   /* retrieve target information */
15458 +   %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='TARGET'))));
15460 +   %let vn_event =%sysfunc(varnum(&dsid, EVENT));
15461 +   %let vn_target_type = %sysfunc(varnum(&dsid, TYPE));
15462 +   %let vn_target_format = %sysfunc(varnum(&dsid, FORMAT));
15463 +   %let vn_target_level  = %sysfunc(varnum(&dsid, LEVEL));
15464 +   %do %while(^ %sysfunc(fetch(&dsid)));
15465 +      %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &vn_event)));
15466 +      %let Target_Event = %nrbquote(%sysfunc(tranwrd(&temp, %str(%"),"")));
15467 +      %let Target_Type =  %sysfunc(getvarc(&dsid, &vn_target_type));
15468 +      %let Target_Format = %sysfunc(getvarc(&dsid, &vn_target_format));
15469 +      %let Target_Level = %sysfunc(getvarc(&dsid, &vn_target_level));
15470 +   %end;
15471 +   %let dsid = %sysfunc(close(&dsid));
15473 +   /* if target level is ORDINAL, throw run time exception -- proc boost does not support ordinal target */
15474 +   %if &Target_Level eq ORDINAL %then %do;
15475 +        %let EMEXCEPTIONSTRING = exception.server.METADATA.INVALIDORDINALTARGET;
15476 +        %put &em_codebar;
15477 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_invalidordinaltarget_note, NOQUOTE));
15478 +        %put &errormsg;
15479 +        %put &em_codebar;
15480 +        %goto doendm;
15481 +   %end;
15483 +   /* if subSeries=ITERATIONS and iterationNum not specified, exception should be thrown */
15484 +   %if ((&EM_PROPERTY_SUBSERIES eq ITERATIONS) and (&EM_PROPERTY_ITERATIONNUM eq . )) %then %do;
15485 +        %let EMEXCEPTIONSTRING = exception.server.EMTOOL.BOOST.NOITERATIONNUM;
15486 +        %put &em_codebar;
15487 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_noiterationnum_note, NOQUOTE));
15488 +        %put &errormsg;
15489 +        %put &em_codebar;
15490 +        %goto doendm;
15491 +   %end;
15493 +   %runBoostProcedure;
15496 +   %doendm:
15497 +%mend train;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_TRAINMACROS.SOURCE.
15498 +%Macro em_boost_makeDMDB(indata=, target=,  nLevel= );
15499 +  %global &nLevel;
15501 +  %let targetLevel=;
15502 +  data _null_;
15503 +     length orderString $64;
15504 +     set &em_data_variableset end=eof;
15505 +     where NAME="&target";
15506 +     select(order);
15507 +            when('')        order ='DESC';
15508 +            when('FMTASC')  order='ASCFMT';
15509 +            when('FMTDESC') order='DESFMT';
15510 +            otherwise;
15511 +     end;
15512 +     if eof then do;
15513 +        call symput("targetOrder", trim(order));
15514 +        call symput("targetLevel", trim(Level));
15515 +     end;
15516 +  run;
15518 +  %if "&targetLevel" ne "INTERVAL" %then %do;
15519 +  proc dmdb batch data=&indata dmdbCat=_BoostDMDB
15520 +    classout=_tmp_dmdbout;
15521 +    class &target(&targetOrder);
15522 +    target &target;
15523 +  run;
15524 +  data _tmp_dmdbout;
15525 +    set _tmp_dmdbout;
15526 +    if strip(TYPE) = 'N' and  strip(LEVEL) = '.' then delete;
15527 +    if strip(TYPE) = 'C' and  strip(LEVEL) = '' then delete;
15528 +  run;
15529 +  data _null_;
15530 +    %let dsid = %sysfunc(open(work._tmp_dmdbout));
15531 +    %let _obs = %sysfunc(attrn(&dsid, NOBS));
15532 +    %let dsid = %sysfunc(close(&dsid));
15533 +     call symput("&nLevel", put(&_obs, Best12.));
15534 +  run;
15536 +  proc datasets lib=work nolist;
15537 +     delete _tmp_dmdbout;
15538 +  run;
15539 +  quit;
15540 +  %end;
15542 +%Mend em_boost_makeDMDB;
15544 +%macro runBoostProcedure;
15546 +  proc sql;
15547 +    reset noprint;
15548 +    select count(*) into :nobs from &EM_IMPORT_DATA;
15549 +  quit;
15551 +  %let arborkluge= "work._BoostDMDB";
15552 +  proc arbor proc=treeboost data=&EM_IMPORT_DATA
15554 +    %if &EM_PROPERTY_ITERATIONS ne %then %do;
15555 +      iterations = &EM_PROPERTY_ITERATIONS
15556 +    %end;
15558 +    %if &EM_PROPERTY_TRAINPROPORTION ne %then %do;
15559 +       %let tprop = %sysevalf(&EM_PROPERTY_TRAINPROPORTION / 100);
15560 +       trainproportion = &tprop
15561 +    %end;
15563 +    %if &EM_PROPERTY_SEED ne %then %do;
15564 +       seed = &EM_PROPERTY_SEED
15565 +    %end;
15567 +    %if &EM_PROPERTY_SHRINKAGE ne %then %do;
15568 +       shrinkage = &EM_PROPERTY_SHRINKAGE
15569 +    %end;
15571 +    %if &EM_PROPERTY_LEAFFRACTION ne %then %do;
15572 +      leaffraction = &EM_PROPERTY_LEAFFRACTION
15573 +    %end;
15575 +    %let splitsize = &EM_PROPERTY_SPLITSIZE;
15576 +    %if &splitsize ge &nobs %then %do;
15577 +       %let splitsize= .;
15578 +    %end;
15579 +    %if &splitsize ne . %then %do;
15580 +      splitsize = &splitsize
15581 +    %end;
15583 +    %if &EM_PROPERTY_MINCATSIZE ne %then %do;
15584 +      mincatsize = &EM_PROPERTY_MINCATSIZE
15585 +    %end;
15587 +    %if &EM_PROPERTY_MAXBRANCH ne %then %do;
15588 +       maxbranch = &EM_PROPERTY_MAXBRANCH
15589 +    %end;
15591 +    %if &EM_PROPERTY_MAXDEPTH ne %then %do;
15592 +       maxdepth = &EM_PROPERTY_MAXDEPTH
15593 +    %end;
15595 +    %let nsurrs = ;
15596 +    %if &EM_PROPERTY_NSURRS ne %then %do;
15597 +      %let numInputs = %sysevalf(&EM_NUM_BINARY_INPUT + &EM_NUM_ORDINAL_INPUT + &EM_NUM_INTERVAL_INPUT + &EM_NUM_NOMINAL_INPUT);
15598 +      %let nsurrs = %sysevalf(%sysfunc(min(&EM_PROPERTY_NSURRS, (&numInputs -1 ))));
15599 +      maxsurrs = &nsurrs
15600 +    %end;
15602 +    %if &EM_PROPERTY_MISSING ne %then %do;
15603 +      Missing = &EM_PROPERTY_MISSING
15604 +    %end;
15606 +    %if &EM_PROPERTY_REUSEVAR ne %then %do;
15607 +      reusevar = &EM_PROPERTY_REUSEVAR
15608 +    %end;
15609 +/*
15610 +    %if &EM_PROPERTY_PRECISION ne %then %do;
15611 +      intervaldecimals=&EM_PROPERTY_PRECISION
15612 +    %end;
15613 +*/
15614 +    %if &EM_PROPERTY_EXHAUSTIVE ne %then %do;
15615 +      Exhaustive = &EM_PROPERTY_EXHAUSTIVE
15616 +    %end;
15618 +    %if &Target_Event ne %then %do;
15619 +      Event="&Target_Event"
15620 +    %end;
15622 +    %if &EM_PROPERTY_CATEGORICALBINS ne %then %do;
15623 +      CategoricalBins = &EM_PROPERTY_CATEGORICALBINS
15624 +    %end;
15626 +    %if &EM_PROPERTY_INTERVALBINS ne %then %do;
15627 +      IntervalBins = &EM_PROPERTY_INTERVALBINS
15628 +    %end;
15630 +    %if &TARGET_LEVEL eq INTERVAL %then %do;
15631 +      %if &EM_PROPERTY_HUBER ne %then %do;
15632 +        Huber=&EM_PROPERTY_HUBER
15633 +      %end;
15634 +    %end;
15635 +    ;
15637 +    %if %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED ne %then %do;
15638 +      input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED/ level = interval;
15639 +    %end;
15641 +    %if %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED ne  %then %do;
15642 +      input %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_NOMINAL_INPUT %EM_NOMINAL_REJECTED / level = nominal;
15643 +    %end;
15645 +    %if %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED ne %then %do;
15646 +      input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED/ level = ordinal;
15647 +    %end;
15649 +    %if %EM_FREQ ne %then %do;
15650 +       freq %EM_FREQ;
15651 +    %end;
15653 +    target %EM_TARGET / level = &TARGET_LEVEL;
15655 +    &EM_DEC_STATEMENT;
15657 +    %if &EM_PROPERTY_PERFORMANCE ne %then %do;
15658 +      performance  workdatalocation = &EM_PROPERTY_PERFORMANCE
15659 +    %end;
15660 +    %if &EM_PROPERTY_NODESIZE ne %then %do;
15661 +       nodesize = &EM_PROPERTY_NODESIZE
15662 +    %end;
15663 +    ;
15664 +    save model=&EM_USER_MODEL;
15665 +  run;
15666 +  quit;
15667 +  %em_checkerror();
15669 +%mend runBoostProcedure;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: Variable orderString is uninitialized.
NOTE: There were 1 observations read from the data set EMWS2.BOOST_VARIABLESET.
      WHERE NAME='Churn';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Records processed = 3939   Memory used = 511K.
NOTE: There were 3939 observations read from the data set EMWS2.PART_TRAIN.
NOTE: The data set WORK._TMP_DMDBOUT has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK._TMP_DMDBOUT.
NOTE: The data set WORK._TMP_DMDBOUT has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK._TMP_DMDBOUT (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: 1653839 kilobytes of physical memory.
NOTE: Will use 3939 out of 3939 training cases.
NOTE: Using memory pool with 130523136 bytes.
NOTE: Passed training data 250 times.
NOTE: Current TREEBOOST model contains 50 trees.
NOTE: Training used 900552 bytes of work memory.
NOTE: The data set EMWS2.BOOST_MODEL has 5613 observations and 4 variables.
 
 
NOTE: There were 3939 observations read from the data set EMWS2.PART_TRAIN.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.91 seconds
      cpu time            0.89 seconds
 
 
 
15672  %let SYSCC = 0;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
15673  *------------------------------------------------------------*;
15674  * End TRAIN: Boost;
15675  *------------------------------------------------------------*;
15676
 
15677  *------------------------------------------------------------*;
15678  * Close any missing semi colons;
15679  *------------------------------------------------------------*;
15680  ;
15681  ;
15682  ;
15683  ;
15684  quit;
15685  *------------------------------------------------------------*;
15686  * Close any unbalanced quotes;
15687  *------------------------------------------------------------*;
15688  /*; *"; *'; */
15689  ;
15690  run;
15691  quit;
15692  /* Reset EM Options */
15693  options formchar="|----|+|---+=|-/\<>*";
15694  options nocenter ls=256 ps=10000;
15695  goptions reset=all device=GIF NODISPLAY;
 
*------------------------------------------------------------*
* Score Log
Date:                January 07, 2024
Time:                02:03:05
*------------------------------------------------------------*
15797  %let EMEXCEPTIONSTRING=;
15798  *------------------------------------------------------------*;
15799  * SCORE: Boost;
15800  *------------------------------------------------------------*;
15801  %let EM_ACTION = SCORE;
15802  %let syscc = 0;
15803  %macro main;
15804
15805    filename temp catalog 'sashelp.emmodl.boost_macros.source';
15806    %include temp;
15807    filename temp;
15808
15809    %setProperties;
15810
15811    %if %upcase(&EM_ACTION) = CREATE %then %do;
15812      filename temp catalog 'sashelp.emmodl.boost_create.source';
15813      %include temp;
15814      filename temp;
15815
15816      %create;
15817    %end;
15818
15819     %else
15820     %if %upcase(&EM_ACTION) = TRAIN %then %do;
15821
15822         filename temp catalog 'sashelp.emmodl.boost_train.source';
15823         %include temp;
15824         filename temp;
15825         %train;
15826     %end;
15827
15828    %else
15829    %if %upcase(&EM_ACTION) = SCORE %then %do;
15830      filename temp catalog 'sashelp.emmodl.boost_score.source';
15831      %include temp;
15832      filename temp;
15833
15834      %score;
15835
15836    %end;
15837
15838    %else
15839    %if %upcase(&EM_ACTION) = REPORT %then %do;
15840
15841         filename temp catalog 'sashelp.emmodl.boost_report.source';
15842         %include temp;
15843         filename temp;
15844
15845         %report;
15846     %end;
15847
15848     %doendm:
15849  %mend main;
15850
15851  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_MACROS.SOURCE.
15852 +
15853 +%macro SetProperties;
15854 +
15855 +     /* boost options */
15856 +     %em_checkmacro(name=EM_PROPERTY_ITERATIONS,   value=50, global=Y);
15857 +     %em_checkmacro(name=EM_PROPERTY_TRAINPROPORTION,   value=60, global=Y);
15858 +     %em_checkmacro(name=EM_PROPERTY_CATEGORICALBINS, value=30, global=Y);
15859 +     %em_checkmacro(name=EM_PROPERTY_INTERVALBINS, value=100, global=Y);
15860 +     %em_checkmacro(name=EM_PROPERTY_HUBER, value=NO, global=Y);
15861 +     %em_checkmacro(name=EM_PROPERTY_SEED,   value=12345, global=Y);
15862 +     %em_checkmacro(name=EM_PROPERTY_SHRINKAGE,   value=0.1, global=Y);
15863 +     %em_checkmacro(name=EM_PROPERTY_LEAFFRACTION,   value=0.1, global=Y);
15864 +     %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,   value=., global=Y);
15865 +     %em_checkmacro(name=EM_PROPERTY_NODESIZE,   value=20000, global=Y);
15866 +     %em_checkmacro(name=EM_PROPERTY_SUBSERIES,   value=BEST, global=Y);
15867 +     %em_checkmacro(name=EM_PROPERTY_ITERATIONNUM,   value=1, global=Y);
15868 +
15869 +     %em_checkmacro(name=EM_PROPERTY_PRECISION,    value=0, global=Y);
15870 +     %em_checkmacro(name=EM_PROPERTY_MISSING,      value=USEINSEARCH, global=Y);
15871 +     %em_checkmacro(name=EM_PROPERTY_MINCATSIZE, value=5, global=Y);
15872 +     %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,  value=2, global=Y);
15873 +     %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,   value=2, global=Y);
15874 +     %em_checkmacro(name=EM_PROPERTY_REUSEVAR,   value=1, global=Y);
15875 +     %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,   value=5000, global=Y);
15876 +     %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,   value=DISK, global=Y);
15877 +
15878 +     %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE, value=PROFIT, global=Y);
15879 +     %em_checkmacro(name=EM_PROPERTY_MEASURE, value=PROFIT, global=Y);
15880 +     %em_checkmacro(name=EM_PROPERTY_NSURRS, value=0, global=Y);
15881 +     %em_checkmacro(name=EM_PROPERTY_VARSELECTION, value=Y, global=Y);
15882 +
15883 +     %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE, value=N, global=Y);
15884 +     %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP, value=5, global=Y);
15885 +     %em_checkmacro(name=EM_PROPERTY_NUMPAIRIMP, value=0, global=Y);
15886 +
15887 +%mend SetProperties;
15888 +
15889 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_SCORE.SOURCE.
15891 +%global ntrees ni nclasses;
15892 +%macro selectSubseries;
15894 +  %let arborkluge= "work._BoostDMDB";
15895 +  %if ^%sysfunc(cexist(work._BoostDMDB)) %then %do;
15896 +      filename temp catalog 'sashelp.emmodl.boost_trainmacros.source';
15897 +      %include temp;
15898 +      filename temp;
15900 +     %let target_var = %EM_TARGET;
15901 +     %em_boost_makeDMDB(indata=&EM_IMPORT_DATA, target=&target_Var, nLevel=_nTargetLevel);
15902 +  %end;
15904 +    %EM_GETNAME(key=MODEL, type=DATA);
15905 +    %EM_GETNAME(key=IMPORTANCE, type=DATA);
15906 +    proc arbor proc=treeboost data=&EM_IMPORT_DATA inmodel=&EM_USER_MODEL;
15908 +    %if &EM_PROPERTY_SUBSERIES ne %then %do;
15909 +      subseries
15910 +      %if &EM_PROPERTY_SUBSERIES eq ITERATIONS %then %do;
15911 +         &EM_PROPERTY_SUBSERIES = &EM_PROPERTY_ITERATIONNUM
15912 +      %end;
15913 +      %else %do;
15914 +         &EM_PROPERTY_SUBSERIES
15915 +      %end;
15916 +    %end;
15917 +    ;
15919 +    makemacro nimportant=ni nclasses=nclasses
15920 +    %if &EM_PROPERTY_SUBSERIES eq BEST %then %do;
15921 +       nitsase=nitsase nitsmisc=nitsmisc nitsprofit=nitsprofit
15922 +    %end;
15923 +    ;
15925 +    %if &EM_PROPERTY_ASSESSMEASURE ne %then %do;
15926 +      assess
15927 +      %if &EM_IMPORT_VALIDATE ne %then %do;
15928 +        Validata=&EM_IMPORT_VALIDATE
15929 +      %end;
15930 +      %else %do;
15931 +        NoValidata
15932 +      %end;
15934 +      %if &EM_PROPERTY_ASSESSMEASURE eq PROFIT %then %do;
15935 +         %if %sysfunc(exist(&EM_DEC_DECMETA, DATA)) eq 0 %then %do;
15936 +           %if %upcase(&Target_Level) eq INTERVAL %then %do;
15937 +             %let EM_PROPERTY_MEASURE = ASE;
15938 +           %end;
15939 +           %else %do;
15940 +             %let EM_PROPERTY_MEASURE= MISC;
15941 +           %end;
15942 +           %let note = %sysfunc(sasmsg(sashelp.dmine, profitlossmatrix_note, NOQUOTE));
15943 +           %put &note;
15944 +           %let note = %sysfunc(sasmsg(sashelp.dmine, assessmearerest_note, NOQUOTE));
15945 +           %put &note;
15946 +         %end;
15947 +         %else %do;
15948 +            %let dsid = %sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
15949 +            %if &dsid eq %then %do;
15950 +               %if %upcase(&Target_Level) eq INTERVAL %then %do;
15951 +                  %let EM_PROPERTY_MEASURE = ASE;
15952 +               %end;
15953 +               %else %do;
15954 +                  %let EM_PROPERTY_MEASURE = MISC;
15955 +               %end;
15956 +               %let note = %sysfunc(sasmsg(sashelp.dmine, profitlossmatrix_note, NOQUOTE));
15957 +               %put &note;
15958 +               %let note = %sysfunc(sasmsg(sashelp.dmine, assessmeasurereset_note, NOQUOTE));
15959 +               %put &note;
15960 +            %end;
15961 +            %else %do;
15962 +               %let firstobs = %sysfunc(fetchobs(&dsid, 1));
15963 +               %let usenum   = %sysfunc(VARNUM(&dsid, USE));
15964 +               %let use      = %sysfunc(getvarc(&dsid, &usenum));
15966 +               %if &use eq N %then %do;
15967 +                 %if %upcase(&Target_Level) eq INTERVAL %then %do;
15968 +                    %let EM_PROPERTY_MEASURE = ASE;
15969 +                 %end;
15970 +                 %else %do;
15971 +                    %let EM_PROPERTY_MEASURE = MISC;
15972 +                 %end;
15973 +                 %let note = %sysfunc(sasmsg(sashelp.dmine, profitlossmatrix_note, NOQUOTE));
15974 +                 %put &note;
15975 +                 %let note = %sysfunc(sasmsg(sashelp.dmine, assessmeasurereset_note, NOQUOTE));
15976 +                 %put &note;
15978 +               %end;
15979 +               %else %do;
15980 +                 %let EM_PROPERTY_MEASURE = PROFIT;
15981 +               %end;
15982 +            %end;
15983 +            %if &dsid ne %then %let dsid = %sysfunc(close(&dsid));
15984 +         %end;
15985 +      %end;
15986 +      %else %if &EM_PROPERTY_ASSESSMEASURE eq MISC %then %do;
15987 +         %if %upcase(&Target_Level) eq INTERVAL %then %do;
15988 +           %let EM_PROPERTY_MEASURE = ASE;
15989 +         %end;
15990 +         %else %do;
15991 +           %let EM_PROPERTY_MEASURE = MISC;
15992 +         %end;
15993 +      %end;
15994 +      %else %if &EM_PROPERTY_ASSESSMEASURE eq ASE %then %do;
15995 +         %let EM_PROPERTY_MEASURE = ASE;
15996 +      %end;
15998 +      measure = &EM_PROPERTY_MEASURE
16000 +      ;
16001 +    %end;
16003 +    %let lookupString = ;
16004 +    %if ^%symexist(EM_OPTION) %then
16005 +        %let EM_OPTION=;
16007 +    %if %sysfunc(index(%upcase(&EM_DEBUG), I18N)) or %sysfunc(index(%upcase(&EM_OPTION), I18N)) %then %do;
16008 +           %let lookupString = LOOKUP=SELECT;
16009 +    %end;
16011 +    code file="&EM_FILE_EMFLOWSCORECODE" res group=&emloopid &lookupString;
16012 +    code file="&EM_FILE_EMPUBLISHSCORECODE" nores group=&emloopid &lookupString;
16014 +    save fit=SUBFIT importance=&EM_USER_IMPORTANCE model=&EM_USER_MODEL;
16016 +    score data=&EM_IMPORT_DATA out=fds(keep= p_:) outfit=work.fit_train role=TRAIN;
16017 +    %if &EM_IMPORT_VALIDATE ne %then %do;
16018 +      score data=&EM_IMPORT_VALIDATE out=_NULL_ outfit=work.fit_valid role=VALID;
16019 +    %end;
16020 +    %if &EM_IMPORT_TEST ne %then %do;
16021 +      score data=&EM_IMPORT_TEST out=_NULL_ outfit=work.fit_test role=TEST;
16022 +    %end;
16024 +    run;
16025 +    quit;
16027 +    %if %sysfunc(cexist(work._BoostDMDB)) %then %do;
16028 +        /* Delete DMDB catalog */
16029 +        proc datasets lib=work nolist;
16030 +           delete _BoostDMDB / mt=cat;
16031 +        run;
16032 +    %end;
16036 +    /* set ntrees macro to selected iteration based on subseries property */
16037 +    %if &EM_PROPERTY_SUBSERIES eq ITERATIONS %then %do;
16038 +      %let ntrees = &EM_PROPERTY_ITERATIONNUM;
16039 +    %end;
16040 +    %else %if &EM_PROPERTY_SUBSERIES eq LONGEST %then %do;
16041 +      %let ntrees = &EM_PROPERTY_ITERATIONS;
16042 +    %end;
16043 +    %else %if &EM_PROPERTY_SUBSERIES eq BEST %then %do;
16044 +       %if &EM_PROPERTY_MEASURE eq ASE %then %let ntrees=&NITSASE;
16045 +       %else %if &EM_PROPERTY_MEASURE eq MISC %then %let ntrees=&NITSMISC;
16046 +       %else %let ntrees=&NITSPROFIT;
16047 +    %end;
16048 +%mend selectSubseries;
16050 +%macro createSubFit;
16052 +  %EM_GETNAME(key=SUBFIT, type=DATA);
16053 +   data &EM_USER_SUBFIT;
16054 +     length datarole $8;
16055 +     set SUBFIT;
16056 +     datarole = "TRAIN";
16057 +     label  _MISC_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_misclassrate_title, noquote))"
16058 +            _MAX_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_maxabserror_vlabel, noquote))"
16059 +            _SSE_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_sumsqerror_vlabel, noquote))"
16060 +            _ASE_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgsquareerror_title, noquote))"
16061 +            _RASE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_rootavgsqerror_vlabel, noquote))"
16062 +            _APROF_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgprofit_vlabel, noquote))"
16063 +            _PROF_   = "%sysfunc(sasmsg(sashelp.dmine, assmt_profitt_vlabel, noquote))"
16064 +            _PASE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgsqerrprior_vlabel, noquote))"
16065 +            _PMISC_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_missprior_vlabel, noquote))"
16066 +            _NLEAVES_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nleaves_vlabel, noquote))"
16067 +            _ITERATION_="%sysfunc(sasmsg(sashelp.dmine, rpt_iter_vlabel , noquote))"
16068 +            _NW_ = "%sysfunc(sasmsg(sashelp.dmine,  rpt_nleaves_vlabel , noquote))"
16069 +            datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel  , noquote))";
16070 +     keep _ITERATION_ _NW_ _MISC_ _MAX_ _SSE_ _ASE_ _RASE_ _NLEAVES_ datarole
16071 +          %if &EM_DEC_DECDATA ne %then %do;
16072 +            _APROF_ _PROF_ _PASE_ _PMISC_
16073 +          %end;
16074 +          ;
16075 +   run;
16077 +   %if &EM_IMPORT_VALIDATE ne %then %do;
16078 +      data tempvalid;
16079 +        length datarole $8;
16080 +        set SUBFIT;
16081 +        rename  _VMISC_ = _MISC_
16082 +                _VMAX_  = _MAX_
16083 +                _VSSE_ = _SSE_
16084 +                _VASE_ = _ASE_
16085 +                _VRASE_ = _RASE_
16086 +                %if &EM_DEC_DECDATA ne %then %do;
16087 +                  _VAPROF_ = _APROF_
16088 +                  _VPROF_  = _PROF_
16089 +                  _VPASE_  = _PASE_
16090 +                  _VPMISC_ = _PMISC_
16091 +                %end;
16092 +                ;
16093 +        datarole = "VALID";
16094 +         label  _VMISC_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_misclassrate_title, noquote))"
16095 +                _VMAX_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_maxabserror_vlabel, noquote))"
16096 +                _VSSE_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_sumsqerror_vlabel, noquote))"
16097 +                _VASE_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgsquareerror_title, noquote))"
16098 +                _VRASE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_rootavgsqerror_vlabel, noquote))"
16099 +                _VAPROF_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgprofit_vlabel, noquote))"
16100 +                _VPROF_   = "%sysfunc(sasmsg(sashelp.dmine, assmt_profitt_vlabel, noquote))"
16101 +                _VPASE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgsqerrprior_vlabel, noquote))"
16102 +                _VPMISC_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_missprior_vlabel, noquote))"
16103 +                _NLEAVES_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nleaves_vlabel, noquote))"
16104 +                datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, noquote))";
16105 +        keep _ITERATION_ _NW_ _VMISC_ _VMAX_ _VSSE_ _VASE_ _VRASE_ _NLEAVES_ datarole
16106 +             %if &EM_DEC_DECDATA ne %then %do;
16107 +                _VAPROF_ _VPROF_ _VPASE_ _VPMISC_
16108 +             %end;
16109 +             ;
16110 +      run;
16112 +      data &EM_USER_SUBFIT;
16113 +        set &EM_USER_SUBFIT tempvalid;
16114 +      run;
16116 +      proc datasets library=work nolist;
16117 +        delete tempvalid;
16118 +      run;
16119 +   %end;
16121 +   proc datasets library=work nolist;
16122 +     delete subfit;
16123 +   run;
16125 +%mend createSubFit;
16127 +%macro createFitStatistics;
16129 +  %EM_GETNAME(key=EMOUTFIT, type=DATA);
16130 +   data &EM_USER_EMOUTFIT;
16131 +     length target $32;
16132 +     merge work.fit_train
16133 +     %if &EM_IMPORT_VALIDATE ne %then %do;
16134 +       work.fit_valid
16135 +     %end;
16136 +     %if &EM_IMPORT_TEST ne %then %do;
16137 +       work.fit_test
16138 +     %end;
16139 +     ;
16140 +     target = "%EM_TARGET";
16141 +     drop _NW_;
16142 +   run;
16144 +   %if &EM_IMPORT_VALIDATE ne %then %do;
16145 +     proc datasets library=work nolist;
16146 +       delete fit_valid;
16147 +     run;
16148 +   %end;
16149 +   %if &EM_IMPORT_TEST ne %then %do;
16150 +     proc datasets library=work nolist;
16151 +       delete fit_test;
16152 +     run;
16153 +   %end;
16156 +%mend createFitStatistics;
16158 +%macro generatePartialDependencyTable(iteration= ,ds1=, var=);
16160 +  %EM_GETNAME(key=PARTIALDEPENDENCY, type=DATA);
16162 +  %if &iteration eq 1 %then %do;
16163 +    data &EM_USER_PARTIALDEPENDENCY;
16164 +    run;
16165 +  %end;
16167 +  %let partialvar = partial&iteration;
16168 +  data &EM_USER_PARTIALDEPENDENCY;
16169 +    merge &EM_USER_PARTIALDEPENDENCY &ds1(rename=(P_BAD1=&partialvar) keep=P_BAD1 &var);
16170 +    label &partialvar = "%sysfunc(sasmsg(sashelp.dmine, rpt_partialdep_vlabel, noquote, &var))";
16171 +  run;
16173 +%mend generatePartialDependencyTable;
16175 +%macro merge_imp_h (iactds=, impds= );
16176 +   %if &ni gt 0 %then %do;
16177 +    data _imp;
16178 +       set &impds.;
16179 +       _obs_ = _n_;
16180 +    run;
16181 +    proc sort data=_imp;
16182 +       by name;
16183 +    run;
16184 +    proc sort data= &iactds.;
16185 +       by name;
16186 +    run;
16187 +    data &impds;
16188 +       merge _imp &iactds;
16189 +       by name;
16190 +    run;
16191 +    proc sort data=&impds;
16192 +       by _obs_;
16193 +    run;
16194 +    data &impds;
16195 +       set &impds;
16196 +       drop _obs_;
16197 +    run;
16198 +    quit;
16199 +    %end;
16200 +%mend;
16202 +***************************************************************************
16203 +** MACROS FOR DISCOVERING INTERACTION OF INPUTS IN ARBORETUM MODELS
16204 +**
16205 +** AUTHOR:    saspgn
16206 +** REVISED:    1 MAY 2007
16207 +**
16208 +** REFERENCE: Jerome H. Friedman and Bogdan E. Popescu
16209 +**                  Predictive Models via Rule Ensembles
16210 +**                  28 Feb 2005
16211 +***************************************************************************;
16213 +%macro compute_iact_h(data=, model=, outds=);
16215 +/*** NOTE: this macro was modified to also calculation 1 way partial dependency values as well ****/
16217 +***************************************************************************
16218 +** MACRO:     COMPUTE_IACT_H
16219 +** PURPOSE:   ESTIMATE INTERACTION OF INPUT TO ANY OTHER INPUTS IN MODEL
16220 +** AUTHOR:    saspgn
16221 +** DATE:      30 APR 2007
16222 +**
16223 +** ARGUMENTS: DATA=  data with which to evaluate interaction.
16224 +**                   Typically training data.
16225 +**            MODEL= Model data set from SAVE MODEL= option
16226 +**                   of PROC ARBORETUM  (or SPLIT, FOREST, TREEBOOST)
16227 +**            OUTDS= output data set from this macro.
16228 +**                   Contains two variables:
16229 +**                   NAME   containing name of input variable
16230 +**                   H      containing the H statistic for interaction.
16231 +**
16232 +** DETAILS:   In Predictive Models via Rule Ensembles the authors
16233 +**            define statistic Hj that will be greater than 0 to
16234 +**            the extant that input variable j interacts with some
16235 +**            other variable (section 8.1, equation 45 ).
16236 +**            Macro COMPUTE_IACT_H computes Hj for all variables
16237 +**            used as a primary splitting rule in the model.
16238 +**            The computation of interactions is time consuming.
16239 +**            The user might therefore consult Hj before selecting
16240 +**            which interactions to compute.
16241 +**
16242 +** REFERENCE: Jerome H. Friedman and Bogdan E. Popescu
16243 +**                  Predictive Models via Rule Ensembles
16244 +**                  28 Feb 2005
16245 +**                  http://www.stat-stanford.edu/~jhf
16246 +**************************************************************************;
16248 +    %do v=1 %to &ni;
16249 +        proc arbor proc=treeboost inmodel=&model;
16250 +            makemacro importantid=&v  var=var;
16251 +            partialdep data=&data out=vds(keep= p_: &var) var= (&var);
16252 +            partialdep data=&data out=eds(keep= p_:) exceptvar= (&var);
16253 +        quit;
16255 +        %let predvar=;
16256 +        %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='PREDICTED'))));
16257 +        %let varnum =%sysfunc(varnum(&dsid, VARIABLE));
16258 +        %do %while(^ %sysfunc(fetch(&dsid)));
16259 +           %let variable = %sysfunc(getvarc(&dsid, &varnum));
16260 +           %let predvar = &predvar &variable;
16261 +        %end;
16262 +        %let dsid = %sysfunc(close(&dsid));
16264 +        data fds;  set fds;  keep &predvar; run;
16265 +        data vds;  set vds;  keep &predvar; run;
16266 +        data eds;  set eds;  keep &predvar; run;
16269 +        %compute_iact_sub(ds1=fds, ds2=vds, ds3=eds, nc=&nclasses, outds=h);
16271 +        /* generates table same size as training data -- too large to plot; removing for now
16272 +        %generatePartialDependencyTable(iteration=&v, ds1=vds, var=&var); */
16274 +        data h;
16275 +             set h;
16276 +             length name $ 32;
16277 +             name = "&var";
16278 +        run;
16279 +        data &outds;
16280 +          set
16281 +              %if &v ne 1 %then %do;
16282 +                  &outds
16283 +              %end;
16284 +               h;
16285 +        run;
16287 +    %end;
16288 +%mend;
16290 +%macro compute_iact_sub(ds1=, ds2=, ds3=, nc=, outds=);
16292 +        %if &nc eq 0 %then %do;
16293 +             data ads; set &ds1; array r p_:; keep a; a = r(1); run;
16294 +             data bds; set &ds2; array r p_:; keep b; b = r(1); run;
16295 +             data cds; set &ds3; array r p_:; keep c; c = r(1); run;
16296 +             data mds; merge ads bds cds;         run;
16298 +             proc stdize data= mds method=mean out=sds;
16299 +                  var a b c;
16300 +             run;
16302 +             data &outds;
16303 +                 retain ss 0  sf 0;
16304 +                 set sds end=the_end;
16305 +                 keep H;
16307 +                 s = a - b - c;
16308 +                 ss = ss + s*s;
16309 +                 sf = sf + a * a;
16311 +                 if the_end ne 0 then do;
16312 +                    H = ss/sf;
16313 +                    output;
16314 +                 end;
16315 +             run;
16316 +        %end;
16318 +        %else %do;  * categorical response. nclasses > 0 ;
16319 +            data ads;
16320 +                 set &ds1;
16321 +                 array r{*} p_:;
16322 +                 keep a:;
16323 +                 %do j = 1 %to &nclasses;
16324 +                     a&j = r(&j);
16325 +                 %end;
16326 +              run;
16327 +              data bds;
16328 +                 set &ds2;
16329 +                 array r{*} p_:;
16330 +                 keep b:;
16331 +                 %do j = 1 %to &nclasses;
16332 +                     b&j = r(&j);
16333 +                 %end;
16334 +              run;
16335 +              data cds;
16336 +                 set &ds3;
16337 +                 array r{*} p_:;
16338 +                 keep c:;
16339 +                 %do j = 1 %to &nclasses;
16340 +                     c&j = r(&j);
16341 +                 %end;
16342 +              run;
16344 +              data mds;
16345 +                   merge ads bds cds;
16346 +              run;
16347 +              proc stdize data=mds method=mean out=sds;
16348 +                   var a: b: c:;
16349 +              run;
16351 +             data &outds;
16352 +                 retain ss 0  sf 0;
16353 +                 set sds end=the_end;
16354 +                 array ra a:;
16355 +                 array rb b:;
16356 +                 array rc c:;
16357 +                 keep H;
16359 +                 do j = 1 to dim(ra);
16360 +                    s = ra(j) - rb(j) - rc(j);
16361 +                    ss = ss + s*s;
16362 +                    sf = sf + ra(j) * ra(j);
16363 +                 end;
16365 +                 if the_end ne 0 then do;
16366 +                    H = ss/sf;
16367 +                    output;
16368 +                 end;
16369 +            run;
16370 +        %end;
16371 +%mend;
16373 +%macro score;
16375 +   /* retrieve target information */
16376 +   %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='TARGET'))));
16378 +   %let vn_event =%sysfunc(varnum(&dsid, EVENT));
16379 +   %let vn_target_type = %sysfunc(varnum(&dsid, TYPE));
16380 +   %let vn_target_format = %sysfunc(varnum(&dsid, FORMAT));
16381 +   %let vn_target_level  = %sysfunc(varnum(&dsid, LEVEL));
16382 +   %do %while(^ %sysfunc(fetch(&dsid)));
16383 +      %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &vn_event)));
16384 +      %let Target_Event = %nrbquote(%sysfunc(tranwrd(&temp, %str(%"),"")));
16385 +      %let Target_Type =  %sysfunc(getvarc(&dsid, &vn_target_type));
16386 +      %let Target_Format = %sysfunc(getvarc(&dsid, &vn_target_format));
16387 +      %let Target_Level = %sysfunc(getvarc(&dsid, &vn_target_level));
16388 +   %end;
16389 +   %let dsid = %sysfunc(close(&dsid));
16391 +   /* if subSeries=ITERATIONS and iterationNum not specified, exception should be thrown */
16392 +   %if ((&EM_PROPERTY_SUBSERIES eq ITERATIONS) and (&EM_PROPERTY_ITERATIONNUM eq . )) %then %do;
16393 +        %let EMEXCEPTIONSTRING = exception.server.EMTOOL.BOOST.NOITERATIONNUM;
16394 +        %put &em_codebar;
16395 +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_noiterationnum_note, NOQUOTE));
16396 +        %put &errormsg;
16397 +        %put &em_codebar;
16398 +        %goto doendm;
16399 +   %end;
16401 +   /* score based on selected subseries */
16402 +   %selectSubseries;
16404 +   /* detect variables that have interaction with other input variables in model;    */
16405 +   /* also used to calculate 1 way partial dependency statistics                     */
16406 +   %if %symexist(EM_PROPERTY_CREATEHSTAT) %then %do;
16407 +     %if &EM_PROPERTY_CREATEHSTAT eq Y %then %do;
16408 +       %compute_iact_h(data=&EM_IMPORT_DATA, model=&EM_USER_MODEL, outds=iact);
16409 +     %end;
16410 +   %end;
16412 +   /* determine whether priors were used during modelling */
16413 +   %let usePriors = N;
16414 +   data _null_;
16415 +     set &EM_DEC_DECMETA(where=(_TYPE_='DECPRIOR'));
16416 +     call symput('usePriors', strip(USE));
16417 +   run;
16419 +   /* update scorecode with code to calculated unadjusted residual variables if priors were detected */
16420 +   %if &usePriors eq Y %then %do;
16421 +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
16422 +      %include temp;
16423 +      filename temp;
16425 +      %EM_GETNAME(key=ADJUSTEDRESIDUALS, type=FILE, extension=sas);
16426 +      filename adjref "&EM_USER_ADJUSTEDRESIDUALS";
16427 +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
16429 +      /* append adjusted residual code to already populated flowscorecode */
16430 +      filename temp catalog 'sashelp.emutil.em_copyfile.source';
16431 +      %include temp;
16432 +      filename temp;
16434 +      filename fref "&EM_FILE_EMFLOWSCORECODE";
16435 +      %em_copyfile(infref=adjref, outfref=fref, append=Y);
16436 +      filename adjref;
16437 +      filenmae fref;
16439 +   %end;
16441 +   /* set all Q variables created by proc arbor to have a role of ASSESS */
16442 +   %let numLevels = 0;
16443 +   data _null_;
16444 +     set &EM_DEC_DECMETA end=eof;
16445 +     where _TYPE_ ='RESIDUAL';
16446 +     call symput('res_vars'!!strip(put(_N_,BEST.)),   strip(Variable));
16447 +     if eof then
16448 +       call symput('numLevels', strip(put(_N_,BEST.)));
16449 +   run;
16451 +   %do i=1 %to &numLevels;
16452 +     %let qvar = &&res_vars&i;
16453 +     %let qvar = %substr(&qvar,2);
16454 +     %let qvar = Q&qvar;
16455 +     %em_metachange(name=&qvar, role=ASSESS);
16456 +   %end;
16458 +   /* merge H Statistic into the outimportance dataset */
16459 +   %EM_GETNAME(key=IMPORTANCE, type=DATA);
16460 +   %if %symexist(EM_PROPERTY_CREATEHSTAT) %then %do;
16461 +     %if &EM_PROPERTY_CREATEHSTAT eq Y %then %do;
16462 +       %merge_imp_h(iactds=iact, impds=&EM_USER_IMPORTANCE);
16463 +     %end;
16464 +   %end;
16466 +   /* add labels to importance table */
16467 +   data &EM_USER_IMPORTANCE;
16468 +     set &EM_USER_IMPORTANCE;
16469 +     label  NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
16470 +            LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
16471 +            NRULES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
16472 +            IMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
16473 +            %if %symexist(EM_PROPERTY_CREATEHSTAT) %then %do;
16474 +              %if &EM_PROPERTY_CREATEHSTAT eq Y %then %do;
16475 +                H = "%sysfunc(sasmsg(sashelp.dmine, rpt_h_vlabel, noquote))"
16476 +              %end;
16477 +            %end;
16478 +            %if &EM_IMPORT_VALIDATE ne %then %do;
16479 +              VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
16480 +              RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
16481 +            %end;
16482 +            %let nsurrs = ;
16483 +            %if &EM_PROPERTY_NSURRS ne %then %do;
16484 +              %let numInputs = %sysevalf(&EM_NUM_BINARY_INPUT + &EM_NUM_ORDINAL_INPUT + &EM_NUM_INTERVAL_INPUT + &EM_NUM_NOMINAL_INPUT);
16485 +              %let nsurrs = %sysevalf(%sysfunc(min(&EM_PROPERTY_NSURRS, (&numInputs -1 ))));
16486 +              %if &nsurrs gt 0 %then %do;
16487 +                 NSURROGATES =  "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))";
16488 +              %end;
16489 +            %end;
16490 +            ;
16491 +   run;
16493 +   /* print outimportance dataset to output window */
16494 +   %let title10 = %sysfunc(sasmsg(sashelp.dmine, rpt_variableImportance_title, NOQUOTE));
16495 +   %if &EM_PROPERTY_NSURRS gt 0 %then %do;
16496 +     title10 "&title10";
16498 +     %if &ni gt 0 %then %do;
16499 +       proc print data=&EM_USER_IMPORTANCE (where=((nrules>0) OR (nsurrogates > 0)
16500 +       %if %symexist(EM_PROPERTY_CREATEHSTAT) %then %do;
16501 +         %if &EM_PROPERTY_CREATEHSTAT eq Y %then %do;
16502 +         OR (H ne .)
16503 +         %end;
16504 +       %end;
16505 +       ));
16506 +     %end;
16507 +     %else %do;
16508 +       proc print data=&EM_USER_IMPORTANCE (where=((nrules>0) OR (nsurrogates > 0)));
16509 +     %end;
16510 +     run;
16511 +     title10;
16512 +   %end;
16513 +   %else %do;
16514 +     title10 "&title10";
16515 +     %if &ni gt 0 %then %do;
16516 +       proc print data=&EM_USER_IMPORTANCE (where=((nrules>0)
16517 +      %if %symexist(EM_PROPERTY_CREATEHSTAT) %then %do;
16518 +         %if &EM_PROPERTY_CREATEHSTAT eq Y %then %do;
16519 +           OR (H ne .)
16520 +         %end;
16521 +      %end;
16522 +      ));
16523 +     %end;
16524 +     %else %do;
16525 +       proc print data=&EM_USER_IMPORTANCE (where=((nrules>0)));
16526 +     %end;
16527 +     run;
16528 +     title10;
16529 +   %end;
16531 +   /* generate EM_USER_SUBFIT dataset to plot train and validation data across iterations*/
16532 +   %createSubFit;
16534 +   /* generate fit statistics for train, valid and test datasets */
16535 +   %createFitStatistics;
16537 +   /* refresh exports */
16538 +    /* variable selection based on importance values */
16539 +    %if &EM_PROPERTY_VARSELECTION eq Y %then %do;
16540 +      %let dsid = %sysfunc(open(&EM_USER_IMPORTANCE));
16541 +      %if &dsid %then %do;
16542 +        %let obs= %sysfunc(fetch(&dsid));
16543 +        %let imp_num = %sysfunc(VARNUM(&dsid, IMPORTANCE));
16544 +        %let var_num = %sysfunc(VARNUM(&dsid, NAME));
16545 +        %let nobs = %sysfunc(ATTRN(&dsid, NOBS));
16547 +        %if ((&imp_num ne 0 ) AND (&var_num ne 0)) %then %do;
16548 +          %do %while(&obs=0);
16549 +             %let nobs = %eval(&nobs-1);
16550 +             %let imp_value = %sysfunc(getvarn(&dsid, &imp_num));
16551 +             %let varname = %upcase(%sysfunc(getvarc(&dsid, &var_num)));
16553 +             %if &imp_value lt 0.05 %then %do;
16554 +               %em_metachange(name=&varname, role=REJECTED);
16555 +             %end;
16556 +             %else %do;
16557 +               %em_metachange(name=&varname, role=INPUT);
16558 +             %end;
16559 +             %let obs= %sysfunc(fetch(&dsid));
16560 +          %end;
16561 +        %end;
16562 +      %end;
16563 +      %if &dsid %then %let dsid= %sysfunc(close(&dsid));
16564 +    %end;
16566 +   /* build reports dependent on subseries selection */
16567 +   %EM_REPORT(key=SUBFIT, viewtype=LINEPLOT, block=MODEL, view=1, X=_ITERATION_, Y=_ASE_, group=dataRole, autodisplay=Y, xref=&ntrees, DESCRIPTION=SUBFIT);
16568 +   %EM_REPORT(VIEW=1, Y=_NW_, xref=&ntrees);
16569 +   %EM_REPORT(VIEW=1, Y=_MISC_, xref=&ntrees);
16570 +   %EM_REPORT(VIEW=1, Y=_MAX_, xref=&ntrees);
16571 +   %EM_REPORT(VIEW=1, Y=_SSE_, xref=&ntrees);
16572 +   %EM_REPORT(VIEW=1, Y=_ASE_, xref=&ntrees);
16573 +   %EM_REPORT(VIEW=1, Y=_RASE_, xref=&ntrees);
16574 +   %EM_REPORT(VIEW=1, Y=_APROF_, xref=&ntrees);
16575 +   %EM_REPORT(VIEW=1, Y=_PROF_, xref=&ntrees);
16576 +   %EM_REPORT(VIEW=1, Y=_PASE_, xref=&ntrees);
16577 +   %EM_REPORT(VIEW=1, Y=_PMISC_, xref=&ntrees);
16579 +   /* build importance table including H statistics for display */
16580 +   %EM_REPORT(key=IMPORTANCE, viewtype=DATA, block=MODEL, DESCRIPTION=IMPORTANCE, AUTODISPLAY=Y);
16582 +   %doendm:
16583 +%mend score;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: 1653839 kilobytes of physical memory.
NOTE: Will use 3939 out of 3939 training cases.
NOTE: Using memory pool with 130228224 bytes.
NOTE: Passed training data 250 times.
NOTE: Current TREEBOOST model contains 50 trees.
NOTE: Training used 900552 bytes of work memory.
NOTE: Current TREEBOOST model contains 33 trees.
NOTE: Created macro variable NCLASSES equal to 2.
NOTE: Created macro variable NI equal to 10.
NOTE: Created macro variable NITSASE equal to 50.
NOTE: Created macro variable NITSMISC equal to 33.
NOTE: Created macro variable NITSPROFIT equal to 0.
A profit/loss matrix must be defined for AssessMeasure=PROFIT/LOSS
The value for Assessment Measure has been reset to DECISION.
NOTE: Current TREEBOOST model contains 50 trees.
NOTE: External file D:\Study\WQD7005 Data Mining\_final\AA1\WQD7005_AA1_Analysis\Workspaces\EMWS2\Boost\EMFLOWSCORE.sas opened.
NOTE: External file D:\Study\WQD7005 Data Mining\_final\AA1\WQD7005_AA1_Analysis\Workspaces\EMWS2\Boost\EMPUBLISHSCORE.sas opened.
NOTE: The data set WORK.SUBFIT has 50 observations and 19 variables.
NOTE: The data set EMWS2.BOOST_IMPORTANCE has 14 observations and 6 variables.
NOTE: The data set EMWS2.BOOST_MODEL has 6166 observations and 4 variables.
NOTE: The data set WORK.FIT_TRAIN has 1 observations and 10 variables.
NOTE: The data set WORK.FDS has 3939 observations and 2 variables.
NOTE: The data set WORK.FIT_VALID has 1 observations and 8 variables.
 
 
NOTE: There were 3939 observations read from the data set EMWS2.PART_TRAIN.
NOTE: The data set WORK._NAMEDAT has 2 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.50 seconds
      cpu time            0.46 seconds
 
 
 
NOTE: Deleting WORK._BOOSTDMDB (memtype=CATALOG).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set EMWS2.BOOST_CHURN_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set EMWS2.BOOST_CHURN_DM.
      WHERE _TYPE_='RESIDUAL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 14 observations read from the data set EMWS2.BOOST_IMPORTANCE.
NOTE: The data set EMWS2.BOOST_IMPORTANCE has 14 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 11 observations read from the data set EMWS2.BOOST_IMPORTANCE.
      WHERE nrules>0;
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Variable _APROF_ is uninitialized.
NOTE: Variable _PROF_ is uninitialized.
NOTE: Variable _PASE_ is uninitialized.
NOTE: Variable _PMISC_ is uninitialized.
NOTE: Variable _NLEAVES_ is uninitialized.
WARNING: The variable _NLEAVES_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _APROF_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _PROF_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _PASE_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _PMISC_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 50 observations read from the data set WORK.SUBFIT.
NOTE: The data set EMWS2.BOOST_SUBFIT has 50 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Variable _VAPROF_ is uninitialized.
NOTE: Variable _VPROF_ is uninitialized.
NOTE: Variable _VPASE_ is uninitialized.
NOTE: Variable _VPMISC_ is uninitialized.
NOTE: Variable _NLEAVES_ is uninitialized.
WARNING: The variable _NLEAVES_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _VAPROF_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _VPROF_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _VPASE_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _VPMISC_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _VAPROF_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _VPROF_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _VPASE_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _VPMISC_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 50 observations read from the data set WORK.SUBFIT.
NOTE: The data set WORK.TEMPVALID has 50 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 50 observations read from the data set EMWS2.BOOST_SUBFIT.
NOTE: There were 50 observations read from the data set WORK.TEMPVALID.
NOTE: The data set EMWS2.BOOST_SUBFIT has 100 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.TEMPVALID (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: Deleting WORK.SUBFIT (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 1 observations read from the data set WORK.FIT_TRAIN.
NOTE: There were 1 observations read from the data set WORK.FIT_VALID.
NOTE: The data set EMWS2.BOOST_EMOUTFIT has 1 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: Deleting WORK.FIT_VALID (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 5 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 6 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 7 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 8 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 9 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 10 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 10 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 11 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 12 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 13 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 13 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 14 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 14 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 15 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 15 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 16 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: The data set WORK.EM_USER_REPORT has 133 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 133 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 266 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 266 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 399 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 399 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 532 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
 
NOTE: There were 532 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 665 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 665 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 798 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 798 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 931 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 931 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 1064 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 1064 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 1197 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 1197 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 1330 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 1330 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 1463 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
 
NOTE: There were 1463 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 1595 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
16584  *------------------------------------------------------------*;
16585  * End SCORE: Boost;
16586  *------------------------------------------------------------*;
16587
 
16588  proc sort data=WORK.EM_METACHANGE;
16589  by key uname;
16590  run;
 
NOTE: There were 16 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 16 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
16591  filename x "D:\Study\WQD7005 Data Mining\_final\AA1\WQD7005_AA1_Analysis\Workspaces\EMWS2\Boost\CDELTA_TRAIN.sas";
16592  data _null_;
16593  file x;
16594  put 'if upcase(NAME) = "CITYTIER" then do;';
16595  put 'ROLE = "INPUT";';
16596  put 'end;';
16597  put 'else ';
16598  put 'if upcase(NAME) = "COMPLAIN" then do;';
16599  put 'ROLE = "INPUT";';
16600  put 'end;';
16601  put 'else ';
16602  put 'if upcase(NAME) = "COUPONUSED" then do;';
16603  put 'ROLE = "REJECTED";';
16604  put 'end;';
16605  put 'else ';
16606  put 'if upcase(NAME) = "DAYSINCELASTORDER" then do;';
16607  put 'ROLE = "INPUT";';
16608  put 'end;';
16609  put 'else ';
16610  put 'if upcase(NAME) = "GENDER" then do;';
16611  put 'ROLE = "REJECTED";';
16612  put 'end;';
16613  put 'else ';
16614  put 'if upcase(NAME) = "HOURSPENDONAPP" then do;';
16615  put 'ROLE = "REJECTED";';
16616  put 'end;';
16617  put 'else ';
16618  put 'if upcase(NAME) = "MARITALSTATUS" then do;';
16619  put 'ROLE = "INPUT";';
16620  put 'end;';
16621  put 'else ';
16622  put 'if upcase(NAME) = "ORDERAMOUNTHIKEFROMLASTYEAR" then do;';
16623  put 'ROLE = "INPUT";';
16624  put 'end;';
16625  put 'else ';
16626  put 'if upcase(NAME) = "ORDERCOUNT" then do;';
16627  put 'ROLE = "INPUT";';
16628  put 'end;';
16629  put 'else ';
16630  put 'if upcase(NAME) = "PREFEREDORDERCAT" then do;';
16631  put 'ROLE = "INPUT";';
16632  put 'end;';
16633  put 'else ';
16634  put 'if upcase(NAME) = "PREFERREDLOGINDEVICE" then do;';
16635  put 'ROLE = "INPUT";';
16636  put 'end;';
16637  put 'else ';
16638  put 'if upcase(NAME) = "PREFERREDPAYMENTMODE" then do;';
16639  put 'ROLE = "INPUT";';
16640  put 'end;';
16641  put 'else ';
16642  put 'if upcase(NAME) = "Q_CHURNFALSE" then do;';
16643  put 'ROLE = "ASSESS";';
16644  put 'end;';
16645  put 'else ';
16646  put 'if upcase(NAME) = "Q_CHURNTRUE" then do;';
16647  put 'ROLE = "ASSESS";';
16648  put 'end;';
16649  put 'else ';
16650  put 'if upcase(NAME) = "SATISFACTIONSCORE" then do;';
16651  put 'ROLE = "INPUT";';
16652  put 'end;';
16653  put 'else ';
16654  put 'if upcase(NAME) = "TENURE" then do;';
16655  put 'ROLE = "INPUT";';
16656  put 'end;';
16657  run;
 
NOTE: The file X is:
      Filename=D:\Study\WQD7005 Data Mining\_final\AA1\WQD7005_AA1_Analysis\Workspaces\EMWS2\Boost\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=07Jan2024:02:03:05,
      Create Time=07Jan2024:02:01:33
 
NOTE: 63 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
16658  filename x;
NOTE: Fileref X has been deassigned.
 
16659  filename emflow "D:\Study\WQD7005 Data Mining\_final\AA1\WQD7005_AA1_Analysis\Workspaces\EMWS2\Boost\EMFLOWSCORE.sas";
16660  *------------------------------------------------------------*;
16661  * Boost: Scoring DATA data;
16662  *------------------------------------------------------------*;
16663  data EMWS2.Boost_TRAIN
16664  / view=EMWS2.Boost_TRAIN
16665  ;
16666  set EMWS2.Part_TRAIN
16667  ;
16668  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file D:\Study\WQD7005 Data Mining\_final\AA1\WQD7005_AA1_Analysis\Workspaces\EMWS2\Boost\EMFLOWSCORE.sas.
16669 +****************************************************************;
16670 +******             DECISION TREE SCORING CODE             ******;
16671 +****************************************************************;
16672 +
16673 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
16674 +LENGTH F_Churn  $    5;
16675 +LENGTH I_Churn  $    5;
16676 +LENGTH U_Churn  $    5;
16677 +LENGTH _WARN_  $    4;
16678 +
16679 +******              LABELS FOR NEW VARIABLES              ******;
16680 +label P_Churntrue = 'Predicted: Churn=true' ;
16681 +      P_Churntrue  = 0;
16682 +label P_Churnfalse = 'Predicted: Churn=false' ;
16683 +      P_Churnfalse  = 0;
16684 +label Q_Churntrue = 'Unadjusted P: Churn=true' ;
16685 +      Q_Churntrue  = 0;
16686 +label Q_Churnfalse = 'Unadjusted P: Churn=false' ;
16687 +      Q_Churnfalse  = 0;
16688 +label R_Churntrue = 'Residual: Churn=true' ;
16689 +label R_Churnfalse = 'Residual: Churn=false' ;
16690 +label F_Churn = 'From: Churn' ;
16691 +label I_Churn = 'Into: Churn' ;
16692 +label U_Churn = 'Unnormalized Into: Churn' ;
16693 +label _WARN_ = 'Warnings' ;
16694 +
16695 +
16696 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
16697 +LENGTH _ARBFMT_5 $      5; DROP _ARBFMT_5;
16698 +_ARBFMT_5 = ' '; /* Initialize to avoid warning. */
16699 +LENGTH _ARBFMT_18 $     18; DROP _ARBFMT_18;
16700 +_ARBFMT_18 = ' '; /* Initialize to avoid warning. */
16701 +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
16702 +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
16703 +LENGTH _ARBFMT_11 $     11; DROP _ARBFMT_11;
16704 +_ARBFMT_11 = ' '; /* Initialize to avoid warning. */
16705 +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
16706 +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
16707 +
16708 +
16709 +_ARBFMT_5 = PUT( Churn , $5.);
16710 + %DMNORMCP( _ARBFMT_5, F_Churn );
16711 +
16712 + DROP _ARB_F_;
16713 + DROP _ARB_BADF_;
16714 +     _ARB_F_ = 0.7988017274;
16715 +     _ARB_BADF_ = 0;
16716 +******             ASSIGN OBSERVATION TO NODE             ******;
16717 + DROP _ARB_P_;
16718 + _ARB_P_ = 0;
16719 + DROP _ARB_PPATH_; _ARB_PPATH_ = 1;
16720 +
16721 +********** LEAF     1  NODE   256 ***************;
16722 +IF _ARB_BADF_ EQ 0 THEN DO;
16723 +
16724 +   DROP _BRANCH_;
16725 +  _BRANCH_ = -1;
16726 +    IF  NOT MISSING(Tenure ) AND
16727 +    Tenure  <                  1.5 THEN DO;
16728 +     _BRANCH_ =    1;
16729 +    END;
16730 +
16731 +  IF _BRANCH_ GT 0 THEN DO;
16732 +     _ARB_F_ + -0.119933732;
16733 +    END;
16734 +  END;
16735 +
16736 +********** LEAF     2  NODE   258 ***************;
16737 +IF _ARB_BADF_ EQ 0 THEN DO;
16738 +
16739 +  _BRANCH_ = -1;
16740 +    IF  NOT MISSING(Tenure ) AND
16741 +                     1.5 <= Tenure  THEN DO;
16742 +     _BRANCH_ =    2;
16743 +    END;
16744 +  IF _BRANCH_ LT 0 THEN DO;
16745 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
16746 +  END;
16747 +  IF _BRANCH_ GT 0 THEN DO;
16748 +
16749 +    _BRANCH_ = -1;
16750 +    _ARBFMT_5 = PUT( Complain , $5.);
16751 +     %DMNORMIP( _ARBFMT_5);
16752 +      IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
16753 +       _BRANCH_ =    1;
16754 +      END;
16755 +
16756 +    IF _BRANCH_ GT 0 THEN DO;
16757 +       _ARB_F_ + 0.0036035617;
16758 +      END;
16759 +    END;
16760 +  END;
16761 +
16762 +********** LEAF     3  NODE   259 ***************;
16763 +IF _ARB_BADF_ EQ 0 THEN DO;
16764 +
16765 +  _BRANCH_ = -1;
16766 +    IF  NOT MISSING(Tenure ) AND
16767 +                     1.5 <= Tenure  THEN DO;
16768 +     _BRANCH_ =    2;
16769 +    END;
16770 +  IF _BRANCH_ LT 0 THEN DO;
16771 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
16772 +  END;
16773 +  IF _BRANCH_ GT 0 THEN DO;
16774 +
16775 +    _BRANCH_ = -1;
16776 +    _ARBFMT_5 = PUT( Complain , $5.);
16777 +     %DMNORMIP( _ARBFMT_5);
16778 +      IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
16779 +       _BRANCH_ =    2;
16780 +      END;
16781 +    IF _BRANCH_ LT 0 THEN DO;
16782 +       IF MISSING( Complain  ) THEN _BRANCH_ = 2;
16783 +      ELSE IF _ARBFMT_5 NOTIN (
16784 +        'TRUE' ,'FALSE'
16785 +         ) THEN _BRANCH_ = 2;
16786 +    END;
16787 +    IF _BRANCH_ GT 0 THEN DO;
16788 +       _ARB_F_ + 0.0404882867;
16789 +      END;
16790 +    END;
16791 +  END;
16792 +
16793 +********** LEAF     4  NODE   261 ***************;
16794 +IF _ARB_BADF_ EQ 0 THEN DO;
16795 +
16796 +  _BRANCH_ = -1;
16797 +    IF  NOT MISSING(Tenure ) AND
16798 +    Tenure  <                  1.5 THEN DO;
16799 +     _BRANCH_ =    1;
16800 +    END;
16801 +
16802 +  IF _BRANCH_ GT 0 THEN DO;
16803 +     _ARB_F_ + -0.092280488;
16804 +    END;
16805 +  END;
16806 +
16807 +********** LEAF     5  NODE   263 ***************;
16808 +IF _ARB_BADF_ EQ 0 THEN DO;
16809 +
16810 +  _BRANCH_ = -1;
16811 +    IF  NOT MISSING(Tenure ) AND
16812 +                     1.5 <= Tenure  THEN DO;
16813 +     _BRANCH_ =    2;
16814 +    END;
16815 +  IF _BRANCH_ LT 0 THEN DO;
16816 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
16817 +  END;
16818 +  IF _BRANCH_ GT 0 THEN DO;
16819 +
16820 +    _BRANCH_ = -1;
16821 +    _ARBFMT_5 = PUT( Complain , $5.);
16822 +     %DMNORMIP( _ARBFMT_5);
16823 +      IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
16824 +       _BRANCH_ =    1;
16825 +      END;
16826 +
16827 +    IF _BRANCH_ GT 0 THEN DO;
16828 +       _ARB_F_ + -0.006025827;
16829 +      END;
16830 +    END;
16831 +  END;
16832 +
16833 +********** LEAF     6  NODE   264 ***************;
16834 +IF _ARB_BADF_ EQ 0 THEN DO;
16835 +
16836 +  _BRANCH_ = -1;
16837 +    IF  NOT MISSING(Tenure ) AND
16838 +                     1.5 <= Tenure  THEN DO;
16839 +     _BRANCH_ =    2;
16840 +    END;
16841 +  IF _BRANCH_ LT 0 THEN DO;
16842 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
16843 +  END;
16844 +  IF _BRANCH_ GT 0 THEN DO;
16845 +
16846 +    _BRANCH_ = -1;
16847 +    _ARBFMT_5 = PUT( Complain , $5.);
16848 +     %DMNORMIP( _ARBFMT_5);
16849 +      IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
16850 +       _BRANCH_ =    2;
16851 +      END;
16852 +    IF _BRANCH_ LT 0 THEN DO;
16853 +       IF MISSING( Complain  ) THEN _BRANCH_ = 2;
16854 +      ELSE IF _ARBFMT_5 NOTIN (
16855 +        'TRUE' ,'FALSE'
16856 +         ) THEN _BRANCH_ = 2;
16857 +    END;
16858 +    IF _BRANCH_ GT 0 THEN DO;
16859 +       _ARB_F_ + 0.0440462477;
16860 +      END;
16861 +    END;
16862 +  END;
16863 +
16864 +********** LEAF     7  NODE   266 ***************;
16865 +IF _ARB_BADF_ EQ 0 THEN DO;
16866 +
16867 +  _BRANCH_ = -1;
16868 +    IF  NOT MISSING(Tenure ) AND
16869 +    Tenure  <                  1.5 THEN DO;
16870 +     _BRANCH_ =    1;
16871 +    END;
16872 +
16873 +  IF _BRANCH_ GT 0 THEN DO;
16874 +     _ARB_F_ + -0.068444301;
16875 +    END;
16876 +  END;
16877 +
16878 +********** LEAF     8  NODE   268 ***************;
16879 +IF _ARB_BADF_ EQ 0 THEN DO;
16880 +
16881 +  _BRANCH_ = -1;
16882 +    IF  NOT MISSING(Tenure ) AND
16883 +                     1.5 <= Tenure  THEN DO;
16884 +     _BRANCH_ =    2;
16885 +    END;
16886 +  IF _BRANCH_ LT 0 THEN DO;
16887 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
16888 +  END;
16889 +  IF _BRANCH_ GT 0 THEN DO;
16890 +
16891 +    _BRANCH_ = -1;
16892 +    _ARBFMT_5 = PUT( Complain , $5.);
16893 +     %DMNORMIP( _ARBFMT_5);
16894 +      IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
16895 +       _BRANCH_ =    1;
16896 +      END;
16897 +
16898 +    IF _BRANCH_ GT 0 THEN DO;
16899 +       _ARB_F_ + -0.001024987;
16900 +      END;
16901 +    END;
16902 +  END;
16903 +
16904 +********** LEAF     9  NODE   269 ***************;
16905 +IF _ARB_BADF_ EQ 0 THEN DO;
16906 +
16907 +  _BRANCH_ = -1;
16908 +    IF  NOT MISSING(Tenure ) AND
16909 +                     1.5 <= Tenure  THEN DO;
16910 +     _BRANCH_ =    2;
16911 +    END;
16912 +  IF _BRANCH_ LT 0 THEN DO;
16913 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
16914 +  END;
16915 +  IF _BRANCH_ GT 0 THEN DO;
16916 +
16917 +    _BRANCH_ = -1;
16918 +    _ARBFMT_5 = PUT( Complain , $5.);
16919 +     %DMNORMIP( _ARBFMT_5);
16920 +      IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
16921 +       _BRANCH_ =    2;
16922 +      END;
16923 +    IF _BRANCH_ LT 0 THEN DO;
16924 +       IF MISSING( Complain  ) THEN _BRANCH_ = 2;
16925 +      ELSE IF _ARBFMT_5 NOTIN (
16926 +        'TRUE' ,'FALSE'
16927 +         ) THEN _BRANCH_ = 2;
16928 +    END;
16929 +    IF _BRANCH_ GT 0 THEN DO;
16930 +       _ARB_F_ + 0.0394159711;
16931 +      END;
16932 +    END;
16933 +  END;
16934 +
16935 +********** LEAF    10  NODE   271 ***************;
16936 +IF _ARB_BADF_ EQ 0 THEN DO;
16937 +
16938 +  _BRANCH_ = -1;
16939 +    IF  NOT MISSING(Tenure ) AND
16940 +    Tenure  <                  1.5 THEN DO;
16941 +     _BRANCH_ =    1;
16942 +    END;
16943 +
16944 +  IF _BRANCH_ GT 0 THEN DO;
16945 +     _ARB_F_ + -0.059799081;
16946 +    END;
16947 +  END;
16948 +
16949 +********** LEAF    11  NODE   273 ***************;
16950 +IF _ARB_BADF_ EQ 0 THEN DO;
16951 +
16952 +  _BRANCH_ = -1;
16953 +    IF  NOT MISSING(Tenure ) AND
16954 +                     1.5 <= Tenure  THEN DO;
16955 +     _BRANCH_ =    2;
16956 +    END;
16957 +  IF _BRANCH_ LT 0 THEN DO;
16958 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
16959 +  END;
16960 +  IF _BRANCH_ GT 0 THEN DO;
16961 +
16962 +    _BRANCH_ = -1;
16963 +    _ARBFMT_5 = PUT( Complain , $5.);
16964 +     %DMNORMIP( _ARBFMT_5);
16965 +      IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
16966 +       _BRANCH_ =    1;
16967 +      END;
16968 +
16969 +    IF _BRANCH_ GT 0 THEN DO;
16970 +       _ARB_F_ + -0.002555132;
16971 +      END;
16972 +    END;
16973 +  END;
16974 +
16975 +********** LEAF    12  NODE   274 ***************;
16976 +IF _ARB_BADF_ EQ 0 THEN DO;
16977 +
16978 +  _BRANCH_ = -1;
16979 +    IF  NOT MISSING(Tenure ) AND
16980 +                     1.5 <= Tenure  THEN DO;
16981 +     _BRANCH_ =    2;
16982 +    END;
16983 +  IF _BRANCH_ LT 0 THEN DO;
16984 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
16985 +  END;
16986 +  IF _BRANCH_ GT 0 THEN DO;
16987 +
16988 +    _BRANCH_ = -1;
16989 +    _ARBFMT_5 = PUT( Complain , $5.);
16990 +     %DMNORMIP( _ARBFMT_5);
16991 +      IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
16992 +       _BRANCH_ =    2;
16993 +      END;
16994 +    IF _BRANCH_ LT 0 THEN DO;
16995 +       IF MISSING( Complain  ) THEN _BRANCH_ = 2;
16996 +      ELSE IF _ARBFMT_5 NOTIN (
16997 +        'TRUE' ,'FALSE'
16998 +         ) THEN _BRANCH_ = 2;
16999 +    END;
17000 +    IF _BRANCH_ GT 0 THEN DO;
17001 +       _ARB_F_ + 0.0376555997;
17002 +      END;
17003 +    END;
17004 +  END;
17005 +
17006 +********** LEAF    13  NODE   276 ***************;
17007 +IF _ARB_BADF_ EQ 0 THEN DO;
17008 +
17009 +  _BRANCH_ = -1;
17010 +    IF  NOT MISSING(Tenure ) AND
17011 +    Tenure  <                  1.5 THEN DO;
17012 +     _BRANCH_ =    1;
17013 +    END;
17014 +
17015 +  IF _BRANCH_ GT 0 THEN DO;
17016 +     _ARB_F_ + -0.054989083;
17017 +    END;
17018 +  END;
17019 +
17020 +********** LEAF    14  NODE   278 ***************;
17021 +IF _ARB_BADF_ EQ 0 THEN DO;
17022 +
17023 +  _BRANCH_ = -1;
17024 +    IF  NOT MISSING(Tenure ) AND
17025 +                     1.5 <= Tenure  THEN DO;
17026 +     _BRANCH_ =    2;
17027 +    END;
17028 +  IF _BRANCH_ LT 0 THEN DO;
17029 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
17030 +  END;
17031 +  IF _BRANCH_ GT 0 THEN DO;
17032 +
17033 +    _BRANCH_ = -1;
17034 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
17035 +     %DMNORMIP( _ARBFMT_18);
17036 +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ) THEN DO;
17037 +       _BRANCH_ =    1;
17038 +      END;
17039 +    IF _BRANCH_ LT 0 THEN DO;
17040 +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
17041 +      ELSE IF _ARBFMT_18 NOTIN (
17042 +        'LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'MOBILE' ,'FASHION' ,
17043 +        'MOBILE PHONE'
17044 +         ) THEN _BRANCH_ = 1;
17045 +    END;
17046 +    IF _BRANCH_ GT 0 THEN DO;
17047 +       _ARB_F_ + 0.0430161806;
17048 +      END;
17049 +    END;
17050 +  END;
17051 +
17052 +********** LEAF    15  NODE   279 ***************;
17053 +IF _ARB_BADF_ EQ 0 THEN DO;
17054 +
17055 +  _BRANCH_ = -1;
17056 +    IF  NOT MISSING(Tenure ) AND
17057 +                     1.5 <= Tenure  THEN DO;
17058 +     _BRANCH_ =    2;
17059 +    END;
17060 +  IF _BRANCH_ LT 0 THEN DO;
17061 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
17062 +  END;
17063 +  IF _BRANCH_ GT 0 THEN DO;
17064 +
17065 +    _BRANCH_ = -1;
17066 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
17067 +     %DMNORMIP( _ARBFMT_18);
17068 +      IF _ARBFMT_18 IN ('MOBILE' ,'FASHION' ,'MOBILE PHONE' ) THEN DO;
17069 +       _BRANCH_ =    2;
17070 +      END;
17071 +
17072 +    IF _BRANCH_ GT 0 THEN DO;
17073 +       _ARB_F_ + 0.0063298996;
17074 +      END;
17075 +    END;
17076 +  END;
17077 +
17078 +********** LEAF    16  NODE   281 ***************;
17079 +IF _ARB_BADF_ EQ 0 THEN DO;
17080 +
17081 +  _BRANCH_ = -1;
17082 +    IF  NOT MISSING(Tenure ) AND
17083 +    Tenure  <                  1.5 THEN DO;
17084 +     _BRANCH_ =    1;
17085 +    END;
17086 +
17087 +  IF _BRANCH_ GT 0 THEN DO;
17088 +     _ARB_F_ + -0.046985403;
17089 +    END;
17090 +  END;
17091 +
17092 +********** LEAF    17  NODE   283 ***************;
17093 +IF _ARB_BADF_ EQ 0 THEN DO;
17094 +
17095 +  _BRANCH_ = -1;
17096 +    IF  NOT MISSING(Tenure ) AND
17097 +                     1.5 <= Tenure  THEN DO;
17098 +     _BRANCH_ =    2;
17099 +    END;
17100 +  IF _BRANCH_ LT 0 THEN DO;
17101 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
17102 +  END;
17103 +  IF _BRANCH_ GT 0 THEN DO;
17104 +
17105 +    _BRANCH_ = -1;
17106 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
17107 +     %DMNORMIP( _ARBFMT_18);
17108 +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'FASHION' )
17109 +       THEN DO;
17110 +       _BRANCH_ =    1;
17111 +      END;
17112 +    IF _BRANCH_ LT 0 THEN DO;
17113 +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
17114 +      ELSE IF _ARBFMT_18 NOTIN (
17115 +        'LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'FASHION' ,'MOBILE' ,
17116 +        'MOBILE PHONE'
17117 +         ) THEN _BRANCH_ = 1;
17118 +    END;
17119 +    IF _BRANCH_ GT 0 THEN DO;
17120 +       _ARB_F_ + 0.0355588451;
17121 +      END;
17122 +    END;
17123 +  END;
17124 +
17125 +********** LEAF    18  NODE   284 ***************;
17126 +IF _ARB_BADF_ EQ 0 THEN DO;
17127 +
17128 +  _BRANCH_ = -1;
17129 +    IF  NOT MISSING(Tenure ) AND
17130 +                     1.5 <= Tenure  THEN DO;
17131 +     _BRANCH_ =    2;
17132 +    END;
17133 +  IF _BRANCH_ LT 0 THEN DO;
17134 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
17135 +  END;
17136 +  IF _BRANCH_ GT 0 THEN DO;
17137 +
17138 +    _BRANCH_ = -1;
17139 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
17140 +     %DMNORMIP( _ARBFMT_18);
17141 +      IF _ARBFMT_18 IN ('MOBILE' ,'MOBILE PHONE' ) THEN DO;
17142 +       _BRANCH_ =    2;
17143 +      END;
17144 +
17145 +    IF _BRANCH_ GT 0 THEN DO;
17146 +       _ARB_F_ + -0.001678246;
17147 +      END;
17148 +    END;
17149 +  END;
17150 +
17151 +********** LEAF    19  NODE   286 ***************;
17152 +IF _ARB_BADF_ EQ 0 THEN DO;
17153 +
17154 +  _BRANCH_ = -1;
17155 +    IF  NOT MISSING(Tenure ) AND
17156 +    Tenure  <                  1.5 THEN DO;
17157 +     _BRANCH_ =    1;
17158 +    END;
17159 +
17160 +  IF _BRANCH_ GT 0 THEN DO;
17161 +     _ARB_F_ + -0.035192821;
17162 +    END;
17163 +  END;
17164 +
17165 +********** LEAF    20  NODE   288 ***************;
17166 +IF _ARB_BADF_ EQ 0 THEN DO;
17167 +
17168 +  _BRANCH_ = -1;
17169 +    IF  NOT MISSING(Tenure ) AND
17170 +                     1.5 <= Tenure  THEN DO;
17171 +     _BRANCH_ =    2;
17172 +    END;
17173 +  IF _BRANCH_ LT 0 THEN DO;
17174 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
17175 +  END;
17176 +  IF _BRANCH_ GT 0 THEN DO;
17177 +
17178 +    _BRANCH_ = -1;
17179 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
17180 +     %DMNORMIP( _ARBFMT_18);
17181 +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ) THEN DO;
17182 +       _BRANCH_ =    1;
17183 +      END;
17184 +    IF _BRANCH_ LT 0 THEN DO;
17185 +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
17186 +      ELSE IF _ARBFMT_18 NOTIN (
17187 +        'LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'MOBILE' ,'FASHION' ,
17188 +        'MOBILE PHONE'
17189 +         ) THEN _BRANCH_ = 1;
17190 +    END;
17191 +    IF _BRANCH_ GT 0 THEN DO;
17192 +       _ARB_F_ + 0.0404496109;
17193 +      END;
17194 +    END;
17195 +  END;
17196 +
17197 +********** LEAF    21  NODE   289 ***************;
17198 +IF _ARB_BADF_ EQ 0 THEN DO;
17199 +
17200 +  _BRANCH_ = -1;
17201 +    IF  NOT MISSING(Tenure ) AND
17202 +                     1.5 <= Tenure  THEN DO;
17203 +     _BRANCH_ =    2;
17204 +    END;
17205 +  IF _BRANCH_ LT 0 THEN DO;
17206 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
17207 +  END;
17208 +  IF _BRANCH_ GT 0 THEN DO;
17209 +
17210 +    _BRANCH_ = -1;
17211 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
17212 +     %DMNORMIP( _ARBFMT_18);
17213 +      IF _ARBFMT_18 IN ('MOBILE' ,'FASHION' ,'MOBILE PHONE' ) THEN DO;
17214 +       _BRANCH_ =    2;
17215 +      END;
17216 +
17217 +    IF _BRANCH_ GT 0 THEN DO;
17218 +       _ARB_F_ + 0.0018539455;
17219 +      END;
17220 +    END;
17221 +  END;
17222 +
17223 +********** LEAF    22  NODE   291 ***************;
17224 +IF _ARB_BADF_ EQ 0 THEN DO;
17225 +
17226 +  _BRANCH_ = -1;
17227 +    IF  NOT MISSING(Tenure ) AND
17228 +    Tenure  <                  1.5 THEN DO;
17229 +     _BRANCH_ =    1;
17230 +    END;
17231 +
17232 +  IF _BRANCH_ GT 0 THEN DO;
17233 +     _ARB_F_ + -0.035257824;
17234 +    END;
17235 +  END;
17236 +
17237 +********** LEAF    23  NODE   293 ***************;
17238 +IF _ARB_BADF_ EQ 0 THEN DO;
17239 +
17240 +  _BRANCH_ = -1;
17241 +    IF  NOT MISSING(Tenure ) AND
17242 +                     1.5 <= Tenure  THEN DO;
17243 +     _BRANCH_ =    2;
17244 +    END;
17245 +  IF _BRANCH_ LT 0 THEN DO;
17246 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
17247 +  END;
17248 +  IF _BRANCH_ GT 0 THEN DO;
17249 +
17250 +    _BRANCH_ = -1;
17251 +      IF  NOT MISSING(Tenure ) AND
17252 +      Tenure  <                 10.5 THEN DO;
17253 +       _BRANCH_ =    1;
17254 +      END;
17255 +
17256 +    IF _BRANCH_ GT 0 THEN DO;
17257 +       _ARB_F_ + 0.0051009536;
17258 +      END;
17259 +    END;
17260 +  END;
17261 +
17262 +********** LEAF    24  NODE   294 ***************;
17263 +IF _ARB_BADF_ EQ 0 THEN DO;
17264 +
17265 +  _BRANCH_ = -1;
17266 +    IF  NOT MISSING(Tenure ) AND
17267 +                     1.5 <= Tenure  THEN DO;
17268 +     _BRANCH_ =    2;
17269 +    END;
17270 +  IF _BRANCH_ LT 0 THEN DO;
17271 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
17272 +  END;
17273 +  IF _BRANCH_ GT 0 THEN DO;
17274 +
17275 +    _BRANCH_ = -1;
17276 +      IF  NOT MISSING(Tenure ) AND
17277 +                      10.5 <= Tenure  THEN DO;
17278 +       _BRANCH_ =    2;
17279 +      END;
17280 +    IF _BRANCH_ LT 0 THEN DO;
17281 +       IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
17282 +    END;
17283 +    IF _BRANCH_ GT 0 THEN DO;
17284 +       _ARB_F_ + 0.0350603616;
17285 +      END;
17286 +    END;
17287 +  END;
17288 +
17289 +********** LEAF    25  NODE   296 ***************;
17290 +IF _ARB_BADF_ EQ 0 THEN DO;
17291 +
17292 +  _BRANCH_ = -1;
17293 +    IF  NOT MISSING(Tenure ) AND
17294 +    Tenure  <                  1.5 THEN DO;
17295 +     _BRANCH_ =    1;
17296 +    END;
17297 +
17298 +  IF _BRANCH_ GT 0 THEN DO;
17299 +     _ARB_F_ + -0.028895511;
17300 +    END;
17301 +  END;
17302 +
17303 +********** LEAF    26  NODE   298 ***************;
17304 +IF _ARB_BADF_ EQ 0 THEN DO;
17305 +
17306 +  _BRANCH_ = -1;
17307 +    IF  NOT MISSING(Tenure ) AND
17308 +                     1.5 <= Tenure  THEN DO;
17309 +     _BRANCH_ =    2;
17310 +    END;
17311 +  IF _BRANCH_ LT 0 THEN DO;
17312 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
17313 +  END;
17314 +  IF _BRANCH_ GT 0 THEN DO;
17315 +
17316 +    _BRANCH_ = -1;
17317 +    _ARBFMT_5 = PUT( Complain , $5.);
17318 +     %DMNORMIP( _ARBFMT_5);
17319 +      IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
17320 +       _BRANCH_ =    1;
17321 +      END;
17322 +
17323 +    IF _BRANCH_ GT 0 THEN DO;
17324 +       _ARB_F_ + -0.008298032;
17325 +      END;
17326 +    END;
17327 +  END;
17328 +
17329 +********** LEAF    27  NODE   299 ***************;
17330 +IF _ARB_BADF_ EQ 0 THEN DO;
17331 +
17332 +  _BRANCH_ = -1;
17333 +    IF  NOT MISSING(Tenure ) AND
17334 +                     1.5 <= Tenure  THEN DO;
17335 +     _BRANCH_ =    2;
17336 +    END;
17337 +  IF _BRANCH_ LT 0 THEN DO;
17338 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
17339 +  END;
17340 +  IF _BRANCH_ GT 0 THEN DO;
17341 +
17342 +    _BRANCH_ = -1;
17343 +    _ARBFMT_5 = PUT( Complain , $5.);
17344 +     %DMNORMIP( _ARBFMT_5);
17345 +      IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
17346 +       _BRANCH_ =    2;
17347 +      END;
17348 +    IF _BRANCH_ LT 0 THEN DO;
17349 +       IF MISSING( Complain  ) THEN _BRANCH_ = 2;
17350 +      ELSE IF _ARBFMT_5 NOTIN (
17351 +        'TRUE' ,'FALSE'
17352 +         ) THEN _BRANCH_ = 2;
17353 +    END;
17354 +    IF _BRANCH_ GT 0 THEN DO;
17355 +       _ARB_F_ + 0.0313118102;
17356 +      END;
17357 +    END;
17358 +  END;
17359 +
17360 +********** LEAF    28  NODE   301 ***************;
17361 +IF _ARB_BADF_ EQ 0 THEN DO;
17362 +
17363 +  _BRANCH_ = -1;
17364 +    IF  NOT MISSING(Tenure ) AND
17365 +    Tenure  <                  1.5 THEN DO;
17366 +     _BRANCH_ =    1;
17367 +    END;
17368 +
17369 +  IF _BRANCH_ GT 0 THEN DO;
17370 +     _ARB_F_ + -0.027862184;
17371 +    END;
17372 +  END;
17373 +
17374 +********** LEAF    29  NODE   303 ***************;
17375 +IF _ARB_BADF_ EQ 0 THEN DO;
17376 +
17377 +  _BRANCH_ = -1;
17378 +    IF  NOT MISSING(Tenure ) AND
17379 +                     1.5 <= Tenure  THEN DO;
17380 +     _BRANCH_ =    2;
17381 +    END;
17382 +  IF _BRANCH_ LT 0 THEN DO;
17383 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
17384 +  END;
17385 +  IF _BRANCH_ GT 0 THEN DO;
17386 +
17387 +    _BRANCH_ = -1;
17388 +    _ARBFMT_5 = PUT( Complain , $5.);
17389 +     %DMNORMIP( _ARBFMT_5);
17390 +      IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
17391 +       _BRANCH_ =    1;
17392 +      END;
17393 +
17394 +    IF _BRANCH_ GT 0 THEN DO;
17395 +       _ARB_F_ + -0.001567694;
17396 +      END;
17397 +    END;
17398 +  END;
17399 +
17400 +********** LEAF    30  NODE   304 ***************;
17401 +IF _ARB_BADF_ EQ 0 THEN DO;
17402 +
17403 +  _BRANCH_ = -1;
17404 +    IF  NOT MISSING(Tenure ) AND
17405 +                     1.5 <= Tenure  THEN DO;
17406 +     _BRANCH_ =    2;
17407 +    END;
17408 +  IF _BRANCH_ LT 0 THEN DO;
17409 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
17410 +  END;
17411 +  IF _BRANCH_ GT 0 THEN DO;
17412 +
17413 +    _BRANCH_ = -1;
17414 +    _ARBFMT_5 = PUT( Complain , $5.);
17415 +     %DMNORMIP( _ARBFMT_5);
17416 +      IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
17417 +       _BRANCH_ =    2;
17418 +      END;
17419 +    IF _BRANCH_ LT 0 THEN DO;
17420 +       IF MISSING( Complain  ) THEN _BRANCH_ = 2;
17421 +      ELSE IF _ARBFMT_5 NOTIN (
17422 +        'TRUE' ,'FALSE'
17423 +         ) THEN _BRANCH_ = 2;
17424 +    END;
17425 +    IF _BRANCH_ GT 0 THEN DO;
17426 +       _ARB_F_ + 0.0315789523;
17427 +      END;
17428 +    END;
17429 +  END;
17430 +
17431 +********** LEAF    31  NODE   306 ***************;
17432 +IF _ARB_BADF_ EQ 0 THEN DO;
17433 +
17434 +  _BRANCH_ = -1;
17435 +  _ARBFMT_5 = PUT( Complain , $5.);
17436 +   %DMNORMIP( _ARBFMT_5);
17437 +    IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
17438 +     _BRANCH_ =    1;
17439 +    END;
17440 +
17441 +  IF _BRANCH_ GT 0 THEN DO;
17442 +     _ARB_F_ + -0.029209977;
17443 +    END;
17444 +  END;
17445 +
17446 +********** LEAF    32  NODE   308 ***************;
17447 +IF _ARB_BADF_ EQ 0 THEN DO;
17448 +
17449 +  _BRANCH_ = -1;
17450 +  _ARBFMT_5 = PUT( Complain , $5.);
17451 +   %DMNORMIP( _ARBFMT_5);
17452 +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
17453 +     _BRANCH_ =    2;
17454 +    END;
17455 +  IF _BRANCH_ LT 0 THEN DO;
17456 +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
17457 +    ELSE IF _ARBFMT_5 NOTIN (
17458 +      'TRUE' ,'FALSE'
17459 +       ) THEN _BRANCH_ = 2;
17460 +  END;
17461 +  IF _BRANCH_ GT 0 THEN DO;
17462 +
17463 +    _BRANCH_ = -1;
17464 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
17465 +     %DMNORMIP( _ARBFMT_18);
17466 +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'MOBILE' )
17467 +       THEN DO;
17468 +       _BRANCH_ =    1;
17469 +      END;
17470 +    IF _BRANCH_ LT 0 THEN DO;
17471 +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
17472 +      ELSE IF _ARBFMT_18 NOTIN (
17473 +        'LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'MOBILE' ,'FASHION' ,
17474 +        'MOBILE PHONE'
17475 +         ) THEN _BRANCH_ = 1;
17476 +    END;
17477 +    IF _BRANCH_ GT 0 THEN DO;
17478 +       _ARB_F_ + 0.0273800928;
17479 +      END;
17480 +    END;
17481 +  END;
17482 +
17483 +********** LEAF    33  NODE   309 ***************;
17484 +IF _ARB_BADF_ EQ 0 THEN DO;
17485 +
17486 +  _BRANCH_ = -1;
17487 +  _ARBFMT_5 = PUT( Complain , $5.);
17488 +   %DMNORMIP( _ARBFMT_5);
17489 +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
17490 +     _BRANCH_ =    2;
17491 +    END;
17492 +  IF _BRANCH_ LT 0 THEN DO;
17493 +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
17494 +    ELSE IF _ARBFMT_5 NOTIN (
17495 +      'TRUE' ,'FALSE'
17496 +       ) THEN _BRANCH_ = 2;
17497 +  END;
17498 +  IF _BRANCH_ GT 0 THEN DO;
17499 +
17500 +    _BRANCH_ = -1;
17501 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
17502 +     %DMNORMIP( _ARBFMT_18);
17503 +      IF _ARBFMT_18 IN ('FASHION' ,'MOBILE PHONE' ) THEN DO;
17504 +       _BRANCH_ =    2;
17505 +      END;
17506 +
17507 +    IF _BRANCH_ GT 0 THEN DO;
17508 +       _ARB_F_ + 0.0010330507;
17509 +      END;
17510 +    END;
17511 +  END;
17512 +
17513 +********** LEAF    34  NODE   311 ***************;
17514 +IF _ARB_BADF_ EQ 0 THEN DO;
17515 +
17516 +  _BRANCH_ = -1;
17517 +  _ARBFMT_5 = PUT( Complain , $5.);
17518 +   %DMNORMIP( _ARBFMT_5);
17519 +    IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
17520 +     _BRANCH_ =    1;
17521 +    END;
17522 +
17523 +  IF _BRANCH_ GT 0 THEN DO;
17524 +     _ARB_F_ + -0.027367146;
17525 +    END;
17526 +  END;
17527 +
17528 +********** LEAF    35  NODE   313 ***************;
17529 +IF _ARB_BADF_ EQ 0 THEN DO;
17530 +
17531 +  _BRANCH_ = -1;
17532 +  _ARBFMT_5 = PUT( Complain , $5.);
17533 +   %DMNORMIP( _ARBFMT_5);
17534 +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
17535 +     _BRANCH_ =    2;
17536 +    END;
17537 +  IF _BRANCH_ LT 0 THEN DO;
17538 +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
17539 +    ELSE IF _ARBFMT_5 NOTIN (
17540 +      'TRUE' ,'FALSE'
17541 +       ) THEN _BRANCH_ = 2;
17542 +  END;
17543 +  IF _BRANCH_ GT 0 THEN DO;
17544 +
17545 +    _BRANCH_ = -1;
17546 +    _ARBFMT_8 = PUT( MaritalStatus , $8.);
17547 +     %DMNORMIP( _ARBFMT_8);
17548 +      IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
17549 +       _BRANCH_ =    1;
17550 +      END;
17551 +
17552 +    IF _BRANCH_ GT 0 THEN DO;
17553 +       _ARB_F_ + 0.0021333367;
17554 +      END;
17555 +    END;
17556 +  END;
17557 +
17558 +********** LEAF    36  NODE   314 ***************;
17559 +IF _ARB_BADF_ EQ 0 THEN DO;
17560 +
17561 +  _BRANCH_ = -1;
17562 +  _ARBFMT_5 = PUT( Complain , $5.);
17563 +   %DMNORMIP( _ARBFMT_5);
17564 +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
17565 +     _BRANCH_ =    2;
17566 +    END;
17567 +  IF _BRANCH_ LT 0 THEN DO;
17568 +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
17569 +    ELSE IF _ARBFMT_5 NOTIN (
17570 +      'TRUE' ,'FALSE'
17571 +       ) THEN _BRANCH_ = 2;
17572 +  END;
17573 +  IF _BRANCH_ GT 0 THEN DO;
17574 +
17575 +    _BRANCH_ = -1;
17576 +    _ARBFMT_8 = PUT( MaritalStatus , $8.);
17577 +     %DMNORMIP( _ARBFMT_8);
17578 +      IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
17579 +       _BRANCH_ =    2;
17580 +      END;
17581 +    IF _BRANCH_ LT 0 THEN DO;
17582 +       IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
17583 +      ELSE IF _ARBFMT_8 NOTIN (
17584 +        'SINGLE' ,'DIVORCED' ,'MARRIED'
17585 +         ) THEN _BRANCH_ = 2;
17586 +    END;
17587 +    IF _BRANCH_ GT 0 THEN DO;
17588 +       _ARB_F_ + 0.0271560176;
17589 +      END;
17590 +    END;
17591 +  END;
17592 +
17593 +********** LEAF    37  NODE   316 ***************;
17594 +IF _ARB_BADF_ EQ 0 THEN DO;
17595 +
17596 +  _BRANCH_ = -1;
17597 +    IF  NOT MISSING(Tenure ) AND
17598 +    Tenure  <                  1.5 THEN DO;
17599 +     _BRANCH_ =    1;
17600 +    END;
17601 +
17602 +  IF _BRANCH_ GT 0 THEN DO;
17603 +     _ARB_F_ + -0.025910249;
17604 +    END;
17605 +  END;
17606 +
17607 +********** LEAF    38  NODE   318 ***************;
17608 +IF _ARB_BADF_ EQ 0 THEN DO;
17609 +
17610 +  _BRANCH_ = -1;
17611 +    IF  NOT MISSING(Tenure ) AND
17612 +                     1.5 <= Tenure  THEN DO;
17613 +     _BRANCH_ =    2;
17614 +    END;
17615 +  IF _BRANCH_ LT 0 THEN DO;
17616 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
17617 +  END;
17618 +  IF _BRANCH_ GT 0 THEN DO;
17619 +
17620 +    _BRANCH_ = -1;
17621 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
17622 +     %DMNORMIP( _ARBFMT_18);
17623 +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'GROCERY' ) THEN DO;
17624 +       _BRANCH_ =    1;
17625 +      END;
17626 +
17627 +    IF _BRANCH_ GT 0 THEN DO;
17628 +       _ARB_F_ + 0.0372510055;
17629 +      END;
17630 +    END;
17631 +  END;
17632 +
17633 +********** LEAF    39  NODE   319 ***************;
17634 +IF _ARB_BADF_ EQ 0 THEN DO;
17635 +
17636 +  _BRANCH_ = -1;
17637 +    IF  NOT MISSING(Tenure ) AND
17638 +                     1.5 <= Tenure  THEN DO;
17639 +     _BRANCH_ =    2;
17640 +    END;
17641 +  IF _BRANCH_ LT 0 THEN DO;
17642 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
17643 +  END;
17644 +  IF _BRANCH_ GT 0 THEN DO;
17645 +
17646 +    _BRANCH_ = -1;
17647 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
17648 +     %DMNORMIP( _ARBFMT_18);
17649 +      IF _ARBFMT_18 IN ('OTHERS' ,'MOBILE' ,'FASHION' ,'MOBILE PHONE' ) THEN
17650 +        DO;
17651 +       _BRANCH_ =    2;
17652 +      END;
17653 +    IF _BRANCH_ LT 0 THEN DO;
17654 +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 2;
17655 +      ELSE IF _ARBFMT_18 NOTIN (
17656 +        'LAPTOP & ACCESSORY' ,'GROCERY' ,'OTHERS' ,'MOBILE' ,'FASHION' ,
17657 +        'MOBILE PHONE'
17658 +         ) THEN _BRANCH_ = 2;
17659 +    END;
17660 +    IF _BRANCH_ GT 0 THEN DO;
17661 +       _ARB_F_ + 0.0018877495;
17662 +      END;
17663 +    END;
17664 +  END;
17665 +
17666 +********** LEAF    40  NODE   321 ***************;
17667 +IF _ARB_BADF_ EQ 0 THEN DO;
17668 +
17669 +  _BRANCH_ = -1;
17670 +    IF  NOT MISSING(DaySinceLastOrder ) AND
17671 +    DaySinceLastOrder  <                  1.5 THEN DO;
17672 +     _BRANCH_ =    1;
17673 +    END;
17674 +
17675 +  IF _BRANCH_ GT 0 THEN DO;
17676 +     _ARB_F_ + -0.041148669;
17677 +    END;
17678 +  END;
17679 +
17680 +********** LEAF    41  NODE   323 ***************;
17681 +IF _ARB_BADF_ EQ 0 THEN DO;
17682 +
17683 +  _BRANCH_ = -1;
17684 +    IF  NOT MISSING(DaySinceLastOrder ) AND
17685 +                     1.5 <= DaySinceLastOrder  THEN DO;
17686 +     _BRANCH_ =    2;
17687 +    END;
17688 +  IF _BRANCH_ LT 0 THEN DO;
17689 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
17690 +  END;
17691 +  IF _BRANCH_ GT 0 THEN DO;
17692 +
17693 +    _BRANCH_ = -1;
17694 +    _ARBFMT_5 = PUT( Complain , $5.);
17695 +     %DMNORMIP( _ARBFMT_5);
17696 +      IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
17697 +       _BRANCH_ =    1;
17698 +      END;
17699 +
17700 +    IF _BRANCH_ GT 0 THEN DO;
17701 +       _ARB_F_ + -0.006297966;
17702 +      END;
17703 +    END;
17704 +  END;
17705 +
17706 +********** LEAF    42  NODE   324 ***************;
17707 +IF _ARB_BADF_ EQ 0 THEN DO;
17708 +
17709 +  _BRANCH_ = -1;
17710 +    IF  NOT MISSING(DaySinceLastOrder ) AND
17711 +                     1.5 <= DaySinceLastOrder  THEN DO;
17712 +     _BRANCH_ =    2;
17713 +    END;
17714 +  IF _BRANCH_ LT 0 THEN DO;
17715 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
17716 +  END;
17717 +  IF _BRANCH_ GT 0 THEN DO;
17718 +
17719 +    _BRANCH_ = -1;
17720 +    _ARBFMT_5 = PUT( Complain , $5.);
17721 +     %DMNORMIP( _ARBFMT_5);
17722 +      IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
17723 +       _BRANCH_ =    2;
17724 +      END;
17725 +    IF _BRANCH_ LT 0 THEN DO;
17726 +       IF MISSING( Complain  ) THEN _BRANCH_ = 2;
17727 +      ELSE IF _ARBFMT_5 NOTIN (
17728 +        'TRUE' ,'FALSE'
17729 +         ) THEN _BRANCH_ = 2;
17730 +    END;
17731 +    IF _BRANCH_ GT 0 THEN DO;
17732 +       _ARB_F_ + 0.0228663349;
17733 +      END;
17734 +    END;
17735 +  END;
17736 +
17737 +********** LEAF    43  NODE   326 ***************;
17738 +IF _ARB_BADF_ EQ 0 THEN DO;
17739 +
17740 +  _BRANCH_ = -1;
17741 +  _ARBFMT_5 = PUT( Complain , $5.);
17742 +   %DMNORMIP( _ARBFMT_5);
17743 +    IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
17744 +     _BRANCH_ =    1;
17745 +    END;
17746 +
17747 +  IF _BRANCH_ GT 0 THEN DO;
17748 +     _ARB_F_ + -0.023440408;
17749 +    END;
17750 +  END;
17751 +
17752 +********** LEAF    44  NODE   328 ***************;
17753 +IF _ARB_BADF_ EQ 0 THEN DO;
17754 +
17755 +  _BRANCH_ = -1;
17756 +  _ARBFMT_5 = PUT( Complain , $5.);
17757 +   %DMNORMIP( _ARBFMT_5);
17758 +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
17759 +     _BRANCH_ =    2;
17760 +    END;
17761 +  IF _BRANCH_ LT 0 THEN DO;
17762 +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
17763 +    ELSE IF _ARBFMT_5 NOTIN (
17764 +      'TRUE' ,'FALSE'
17765 +       ) THEN _BRANCH_ = 2;
17766 +  END;
17767 +  IF _BRANCH_ GT 0 THEN DO;
17768 +
17769 +    _BRANCH_ = -1;
17770 +      IF  NOT MISSING(SatisfactionScore ) AND
17771 +      SatisfactionScore  <                  3.5 THEN DO;
17772 +       _BRANCH_ =    1;
17773 +      END;
17774 +    IF _BRANCH_ LT 0 THEN DO;
17775 +       IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 1;
17776 +    END;
17777 +    IF _BRANCH_ GT 0 THEN DO;
17778 +       _ARB_F_ + 0.024591575;
17779 +      END;
17780 +    END;
17781 +  END;
17782 +
17783 +********** LEAF    45  NODE   329 ***************;
17784 +IF _ARB_BADF_ EQ 0 THEN DO;
17785 +
17786 +  _BRANCH_ = -1;
17787 +  _ARBFMT_5 = PUT( Complain , $5.);
17788 +   %DMNORMIP( _ARBFMT_5);
17789 +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
17790 +     _BRANCH_ =    2;
17791 +    END;
17792 +  IF _BRANCH_ LT 0 THEN DO;
17793 +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
17794 +    ELSE IF _ARBFMT_5 NOTIN (
17795 +      'TRUE' ,'FALSE'
17796 +       ) THEN _BRANCH_ = 2;
17797 +  END;
17798 +  IF _BRANCH_ GT 0 THEN DO;
17799 +
17800 +    _BRANCH_ = -1;
17801 +      IF  NOT MISSING(SatisfactionScore ) AND
17802 +                       3.5 <= SatisfactionScore  THEN DO;
17803 +       _BRANCH_ =    2;
17804 +      END;
17805 +
17806 +    IF _BRANCH_ GT 0 THEN DO;
17807 +       _ARB_F_ + 0.0009216638;
17808 +      END;
17809 +    END;
17810 +  END;
17811 +
17812 +********** LEAF    46  NODE   331 ***************;
17813 +IF _ARB_BADF_ EQ 0 THEN DO;
17814 +
17815 +  _BRANCH_ = -1;
17816 +    IF  NOT MISSING(Tenure ) AND
17817 +    Tenure  <                  1.5 THEN DO;
17818 +     _BRANCH_ =    1;
17819 +    END;
17820 +
17821 +  IF _BRANCH_ GT 0 THEN DO;
17822 +     _ARB_F_ + -0.0206697;
17823 +    END;
17824 +  END;
17825 +
17826 +********** LEAF    47  NODE   333 ***************;
17827 +IF _ARB_BADF_ EQ 0 THEN DO;
17828 +
17829 +  _BRANCH_ = -1;
17830 +    IF  NOT MISSING(Tenure ) AND
17831 +                     1.5 <= Tenure  THEN DO;
17832 +     _BRANCH_ =    2;
17833 +    END;
17834 +  IF _BRANCH_ LT 0 THEN DO;
17835 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
17836 +  END;
17837 +  IF _BRANCH_ GT 0 THEN DO;
17838 +
17839 +    _BRANCH_ = -1;
17840 +      IF  NOT MISSING(Tenure ) AND
17841 +      Tenure  <                 10.5 THEN DO;
17842 +       _BRANCH_ =    1;
17843 +      END;
17844 +
17845 +    IF _BRANCH_ GT 0 THEN DO;
17846 +       _ARB_F_ + 0.0011058994;
17847 +      END;
17848 +    END;
17849 +  END;
17850 +
17851 +********** LEAF    48  NODE   334 ***************;
17852 +IF _ARB_BADF_ EQ 0 THEN DO;
17853 +
17854 +  _BRANCH_ = -1;
17855 +    IF  NOT MISSING(Tenure ) AND
17856 +                     1.5 <= Tenure  THEN DO;
17857 +     _BRANCH_ =    2;
17858 +    END;
17859 +  IF _BRANCH_ LT 0 THEN DO;
17860 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
17861 +  END;
17862 +  IF _BRANCH_ GT 0 THEN DO;
17863 +
17864 +    _BRANCH_ = -1;
17865 +      IF  NOT MISSING(Tenure ) AND
17866 +                      10.5 <= Tenure  THEN DO;
17867 +       _BRANCH_ =    2;
17868 +      END;
17869 +    IF _BRANCH_ LT 0 THEN DO;
17870 +       IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
17871 +    END;
17872 +    IF _BRANCH_ GT 0 THEN DO;
17873 +       _ARB_F_ + 0.0290837413;
17874 +      END;
17875 +    END;
17876 +  END;
17877 +
17878 +********** LEAF    49  NODE   336 ***************;
17879 +IF _ARB_BADF_ EQ 0 THEN DO;
17880 +
17881 +  _BRANCH_ = -1;
17882 +    IF  NOT MISSING(DaySinceLastOrder ) AND
17883 +    DaySinceLastOrder  <                  1.5 THEN DO;
17884 +     _BRANCH_ =    1;
17885 +    END;
17886 +
17887 +  IF _BRANCH_ GT 0 THEN DO;
17888 +     _ARB_F_ + -0.035083113;
17889 +    END;
17890 +  END;
17891 +
17892 +********** LEAF    50  NODE   338 ***************;
17893 +IF _ARB_BADF_ EQ 0 THEN DO;
17894 +
17895 +  _BRANCH_ = -1;
17896 +    IF  NOT MISSING(DaySinceLastOrder ) AND
17897 +                     1.5 <= DaySinceLastOrder  THEN DO;
17898 +     _BRANCH_ =    2;
17899 +    END;
17900 +  IF _BRANCH_ LT 0 THEN DO;
17901 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
17902 +  END;
17903 +  IF _BRANCH_ GT 0 THEN DO;
17904 +
17905 +    _BRANCH_ = -1;
17906 +      IF  NOT MISSING(CityTier ) AND
17907 +      CityTier  <                  1.5 THEN DO;
17908 +       _BRANCH_ =    1;
17909 +      END;
17910 +    IF _BRANCH_ LT 0 THEN DO;
17911 +       IF MISSING( CityTier  ) THEN _BRANCH_ = 1;
17912 +    END;
17913 +    IF _BRANCH_ GT 0 THEN DO;
17914 +       _ARB_F_ + 0.0221900493;
17915 +      END;
17916 +    END;
17917 +  END;
17918 +
17919 +********** LEAF    51  NODE   339 ***************;
17920 +IF _ARB_BADF_ EQ 0 THEN DO;
17921 +
17922 +  _BRANCH_ = -1;
17923 +    IF  NOT MISSING(DaySinceLastOrder ) AND
17924 +                     1.5 <= DaySinceLastOrder  THEN DO;
17925 +     _BRANCH_ =    2;
17926 +    END;
17927 +  IF _BRANCH_ LT 0 THEN DO;
17928 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
17929 +  END;
17930 +  IF _BRANCH_ GT 0 THEN DO;
17931 +
17932 +    _BRANCH_ = -1;
17933 +      IF  NOT MISSING(CityTier ) AND
17934 +                       1.5 <= CityTier  THEN DO;
17935 +       _BRANCH_ =    2;
17936 +      END;
17937 +
17938 +    IF _BRANCH_ GT 0 THEN DO;
17939 +       _ARB_F_ + -0.006773125;
17940 +      END;
17941 +    END;
17942 +  END;
17943 +
17944 +********** LEAF    52  NODE   341 ***************;
17945 +IF _ARB_BADF_ EQ 0 THEN DO;
17946 +
17947 +  _BRANCH_ = -1;
17948 +    IF  NOT MISSING(DaySinceLastOrder ) AND
17949 +    DaySinceLastOrder  <                  1.5 THEN DO;
17950 +     _BRANCH_ =    1;
17951 +    END;
17952 +
17953 +  IF _BRANCH_ GT 0 THEN DO;
17954 +     _ARB_F_ + -0.03018128;
17955 +    END;
17956 +  END;
17957 +
17958 +********** LEAF    53  NODE   343 ***************;
17959 +IF _ARB_BADF_ EQ 0 THEN DO;
17960 +
17961 +  _BRANCH_ = -1;
17962 +    IF  NOT MISSING(DaySinceLastOrder ) AND
17963 +                     1.5 <= DaySinceLastOrder  THEN DO;
17964 +     _BRANCH_ =    2;
17965 +    END;
17966 +  IF _BRANCH_ LT 0 THEN DO;
17967 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
17968 +  END;
17969 +  IF _BRANCH_ GT 0 THEN DO;
17970 +
17971 +    _BRANCH_ = -1;
17972 +      IF  NOT MISSING(OrderCount ) AND
17973 +      OrderCount  <                  4.5 THEN DO;
17974 +       _BRANCH_ =    1;
17975 +      END;
17976 +    IF _BRANCH_ LT 0 THEN DO;
17977 +       IF MISSING( OrderCount  ) THEN _BRANCH_ = 1;
17978 +    END;
17979 +    IF _BRANCH_ GT 0 THEN DO;
17980 +       _ARB_F_ + 0.0168412859;
17981 +      END;
17982 +    END;
17983 +  END;
17984 +
17985 +********** LEAF    54  NODE   344 ***************;
17986 +IF _ARB_BADF_ EQ 0 THEN DO;
17987 +
17988 +  _BRANCH_ = -1;
17989 +    IF  NOT MISSING(DaySinceLastOrder ) AND
17990 +                     1.5 <= DaySinceLastOrder  THEN DO;
17991 +     _BRANCH_ =    2;
17992 +    END;
17993 +  IF _BRANCH_ LT 0 THEN DO;
17994 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
17995 +  END;
17996 +  IF _BRANCH_ GT 0 THEN DO;
17997 +
17998 +    _BRANCH_ = -1;
17999 +      IF  NOT MISSING(OrderCount ) AND
18000 +                       4.5 <= OrderCount  THEN DO;
18001 +       _BRANCH_ =    2;
18002 +      END;
18003 +
18004 +    IF _BRANCH_ GT 0 THEN DO;
18005 +       _ARB_F_ + -0.013665539;
18006 +      END;
18007 +    END;
18008 +  END;
18009 +
18010 +********** LEAF    55  NODE   346 ***************;
18011 +IF _ARB_BADF_ EQ 0 THEN DO;
18012 +
18013 +  _BRANCH_ = -1;
18014 +    IF  NOT MISSING(Tenure ) AND
18015 +    Tenure  <                  1.5 THEN DO;
18016 +     _BRANCH_ =    1;
18017 +    END;
18018 +
18019 +  IF _BRANCH_ GT 0 THEN DO;
18020 +     _ARB_F_ + -0.018971908;
18021 +    END;
18022 +  END;
18023 +
18024 +********** LEAF    56  NODE   348 ***************;
18025 +IF _ARB_BADF_ EQ 0 THEN DO;
18026 +
18027 +  _BRANCH_ = -1;
18028 +    IF  NOT MISSING(Tenure ) AND
18029 +                     1.5 <= Tenure  THEN DO;
18030 +     _BRANCH_ =    2;
18031 +    END;
18032 +  IF _BRANCH_ LT 0 THEN DO;
18033 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
18034 +  END;
18035 +  IF _BRANCH_ GT 0 THEN DO;
18036 +
18037 +    _BRANCH_ = -1;
18038 +      IF  NOT MISSING(Tenure ) AND
18039 +      Tenure  <                 10.5 THEN DO;
18040 +       _BRANCH_ =    1;
18041 +      END;
18042 +
18043 +    IF _BRANCH_ GT 0 THEN DO;
18044 +       _ARB_F_ + -0.00044053;
18045 +      END;
18046 +    END;
18047 +  END;
18048 +
18049 +********** LEAF    57  NODE   349 ***************;
18050 +IF _ARB_BADF_ EQ 0 THEN DO;
18051 +
18052 +  _BRANCH_ = -1;
18053 +    IF  NOT MISSING(Tenure ) AND
18054 +                     1.5 <= Tenure  THEN DO;
18055 +     _BRANCH_ =    2;
18056 +    END;
18057 +  IF _BRANCH_ LT 0 THEN DO;
18058 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
18059 +  END;
18060 +  IF _BRANCH_ GT 0 THEN DO;
18061 +
18062 +    _BRANCH_ = -1;
18063 +      IF  NOT MISSING(Tenure ) AND
18064 +                      10.5 <= Tenure  THEN DO;
18065 +       _BRANCH_ =    2;
18066 +      END;
18067 +    IF _BRANCH_ LT 0 THEN DO;
18068 +       IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
18069 +    END;
18070 +    IF _BRANCH_ GT 0 THEN DO;
18071 +       _ARB_F_ + 0.0304028252;
18072 +      END;
18073 +    END;
18074 +  END;
18075 +
18076 +********** LEAF    58  NODE   351 ***************;
18077 +IF _ARB_BADF_ EQ 0 THEN DO;
18078 +
18079 +  _BRANCH_ = -1;
18080 +  _ARBFMT_5 = PUT( Complain , $5.);
18081 +   %DMNORMIP( _ARBFMT_5);
18082 +    IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
18083 +     _BRANCH_ =    1;
18084 +    END;
18085 +
18086 +  IF _BRANCH_ GT 0 THEN DO;
18087 +     _ARB_F_ + -0.022696341;
18088 +    END;
18089 +  END;
18090 +
18091 +********** LEAF    59  NODE   353 ***************;
18092 +IF _ARB_BADF_ EQ 0 THEN DO;
18093 +
18094 +  _BRANCH_ = -1;
18095 +  _ARBFMT_5 = PUT( Complain , $5.);
18096 +   %DMNORMIP( _ARBFMT_5);
18097 +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
18098 +     _BRANCH_ =    2;
18099 +    END;
18100 +  IF _BRANCH_ LT 0 THEN DO;
18101 +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
18102 +    ELSE IF _ARBFMT_5 NOTIN (
18103 +      'TRUE' ,'FALSE'
18104 +       ) THEN _BRANCH_ = 2;
18105 +  END;
18106 +  IF _BRANCH_ GT 0 THEN DO;
18107 +
18108 +    _BRANCH_ = -1;
18109 +      IF  NOT MISSING(SatisfactionScore ) AND
18110 +      SatisfactionScore  <                  3.5 THEN DO;
18111 +       _BRANCH_ =    1;
18112 +      END;
18113 +    IF _BRANCH_ LT 0 THEN DO;
18114 +       IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 1;
18115 +    END;
18116 +    IF _BRANCH_ GT 0 THEN DO;
18117 +       _ARB_F_ + 0.0280259689;
18118 +      END;
18119 +    END;
18120 +  END;
18121 +
18122 +********** LEAF    60  NODE   354 ***************;
18123 +IF _ARB_BADF_ EQ 0 THEN DO;
18124 +
18125 +  _BRANCH_ = -1;
18126 +  _ARBFMT_5 = PUT( Complain , $5.);
18127 +   %DMNORMIP( _ARBFMT_5);
18128 +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
18129 +     _BRANCH_ =    2;
18130 +    END;
18131 +  IF _BRANCH_ LT 0 THEN DO;
18132 +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
18133 +    ELSE IF _ARBFMT_5 NOTIN (
18134 +      'TRUE' ,'FALSE'
18135 +       ) THEN _BRANCH_ = 2;
18136 +  END;
18137 +  IF _BRANCH_ GT 0 THEN DO;
18138 +
18139 +    _BRANCH_ = -1;
18140 +      IF  NOT MISSING(SatisfactionScore ) AND
18141 +                       3.5 <= SatisfactionScore  THEN DO;
18142 +       _BRANCH_ =    2;
18143 +      END;
18144 +
18145 +    IF _BRANCH_ GT 0 THEN DO;
18146 +       _ARB_F_ + -0.000068033;
18147 +      END;
18148 +    END;
18149 +  END;
18150 +
18151 +********** LEAF    61  NODE   356 ***************;
18152 +IF _ARB_BADF_ EQ 0 THEN DO;
18153 +
18154 +  _BRANCH_ = -1;
18155 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
18156 +   %DMNORMIP( _ARBFMT_8);
18157 +    IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
18158 +     _BRANCH_ =    1;
18159 +    END;
18160 +
18161 +  IF _BRANCH_ GT 0 THEN DO;
18162 +     _ARB_F_ + -0.023472204;
18163 +    END;
18164 +  END;
18165 +
18166 +********** LEAF    62  NODE   358 ***************;
18167 +IF _ARB_BADF_ EQ 0 THEN DO;
18168 +
18169 +  _BRANCH_ = -1;
18170 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
18171 +   %DMNORMIP( _ARBFMT_8);
18172 +    IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
18173 +     _BRANCH_ =    2;
18174 +    END;
18175 +  IF _BRANCH_ LT 0 THEN DO;
18176 +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
18177 +    ELSE IF _ARBFMT_8 NOTIN (
18178 +      'SINGLE' ,'DIVORCED' ,'MARRIED'
18179 +       ) THEN _BRANCH_ = 2;
18180 +  END;
18181 +  IF _BRANCH_ GT 0 THEN DO;
18182 +
18183 +    _BRANCH_ = -1;
18184 +      IF  NOT MISSING(CityTier ) AND
18185 +      CityTier  <                  1.5 THEN DO;
18186 +       _BRANCH_ =    1;
18187 +      END;
18188 +    IF _BRANCH_ LT 0 THEN DO;
18189 +       IF MISSING( CityTier  ) THEN _BRANCH_ = 1;
18190 +    END;
18191 +    IF _BRANCH_ GT 0 THEN DO;
18192 +       _ARB_F_ + 0.0209645381;
18193 +      END;
18194 +    END;
18195 +  END;
18196 +
18197 +********** LEAF    63  NODE   359 ***************;
18198 +IF _ARB_BADF_ EQ 0 THEN DO;
18199 +
18200 +  _BRANCH_ = -1;
18201 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
18202 +   %DMNORMIP( _ARBFMT_8);
18203 +    IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
18204 +     _BRANCH_ =    2;
18205 +    END;
18206 +  IF _BRANCH_ LT 0 THEN DO;
18207 +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
18208 +    ELSE IF _ARBFMT_8 NOTIN (
18209 +      'SINGLE' ,'DIVORCED' ,'MARRIED'
18210 +       ) THEN _BRANCH_ = 2;
18211 +  END;
18212 +  IF _BRANCH_ GT 0 THEN DO;
18213 +
18214 +    _BRANCH_ = -1;
18215 +      IF  NOT MISSING(CityTier ) AND
18216 +                       1.5 <= CityTier  THEN DO;
18217 +       _BRANCH_ =    2;
18218 +      END;
18219 +
18220 +    IF _BRANCH_ GT 0 THEN DO;
18221 +       _ARB_F_ + -0.000201284;
18222 +      END;
18223 +    END;
18224 +  END;
18225 +
18226 +********** LEAF    64  NODE   361 ***************;
18227 +IF _ARB_BADF_ EQ 0 THEN DO;
18228 +
18229 +  _BRANCH_ = -1;
18230 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
18231 +   %DMNORMIP( _ARBFMT_8);
18232 +    IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
18233 +     _BRANCH_ =    1;
18234 +    END;
18235 +
18236 +  IF _BRANCH_ GT 0 THEN DO;
18237 +     _ARB_F_ + -0.021740242;
18238 +    END;
18239 +  END;
18240 +
18241 +********** LEAF    65  NODE   363 ***************;
18242 +IF _ARB_BADF_ EQ 0 THEN DO;
18243 +
18244 +  _BRANCH_ = -1;
18245 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
18246 +   %DMNORMIP( _ARBFMT_8);
18247 +    IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
18248 +     _BRANCH_ =    2;
18249 +    END;
18250 +  IF _BRANCH_ LT 0 THEN DO;
18251 +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
18252 +    ELSE IF _ARBFMT_8 NOTIN (
18253 +      'SINGLE' ,'DIVORCED' ,'MARRIED'
18254 +       ) THEN _BRANCH_ = 2;
18255 +  END;
18256 +  IF _BRANCH_ GT 0 THEN DO;
18257 +
18258 +    _BRANCH_ = -1;
18259 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
18260 +     %DMNORMIP( _ARBFMT_18);
18261 +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'GROCERY' ) THEN DO;
18262 +       _BRANCH_ =    1;
18263 +      END;
18264 +
18265 +    IF _BRANCH_ GT 0 THEN DO;
18266 +       _ARB_F_ + 0.0348929239;
18267 +      END;
18268 +    END;
18269 +  END;
18270 +
18271 +********** LEAF    66  NODE   364 ***************;
18272 +IF _ARB_BADF_ EQ 0 THEN DO;
18273 +
18274 +  _BRANCH_ = -1;
18275 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
18276 +   %DMNORMIP( _ARBFMT_8);
18277 +    IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
18278 +     _BRANCH_ =    2;
18279 +    END;
18280 +  IF _BRANCH_ LT 0 THEN DO;
18281 +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
18282 +    ELSE IF _ARBFMT_8 NOTIN (
18283 +      'SINGLE' ,'DIVORCED' ,'MARRIED'
18284 +       ) THEN _BRANCH_ = 2;
18285 +  END;
18286 +  IF _BRANCH_ GT 0 THEN DO;
18287 +
18288 +    _BRANCH_ = -1;
18289 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
18290 +     %DMNORMIP( _ARBFMT_18);
18291 +      IF _ARBFMT_18 IN ('OTHERS' ,'MOBILE' ,'FASHION' ,'MOBILE PHONE' ) THEN
18292 +        DO;
18293 +       _BRANCH_ =    2;
18294 +      END;
18295 +    IF _BRANCH_ LT 0 THEN DO;
18296 +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 2;
18297 +      ELSE IF _ARBFMT_18 NOTIN (
18298 +        'LAPTOP & ACCESSORY' ,'GROCERY' ,'OTHERS' ,'MOBILE' ,'FASHION' ,
18299 +        'MOBILE PHONE'
18300 +         ) THEN _BRANCH_ = 2;
18301 +    END;
18302 +    IF _BRANCH_ GT 0 THEN DO;
18303 +       _ARB_F_ + -0.000228607;
18304 +      END;
18305 +    END;
18306 +  END;
18307 +
18308 +********** LEAF    67  NODE   366 ***************;
18309 +IF _ARB_BADF_ EQ 0 THEN DO;
18310 +
18311 +  _BRANCH_ = -1;
18312 +    IF  NOT MISSING(Tenure ) AND
18313 +    Tenure  <                  1.5 THEN DO;
18314 +     _BRANCH_ =    1;
18315 +    END;
18316 +
18317 +  IF _BRANCH_ GT 0 THEN DO;
18318 +     _ARB_F_ + -0.015080443;
18319 +    END;
18320 +  END;
18321 +
18322 +********** LEAF    68  NODE   368 ***************;
18323 +IF _ARB_BADF_ EQ 0 THEN DO;
18324 +
18325 +  _BRANCH_ = -1;
18326 +    IF  NOT MISSING(Tenure ) AND
18327 +                     1.5 <= Tenure  THEN DO;
18328 +     _BRANCH_ =    2;
18329 +    END;
18330 +  IF _BRANCH_ LT 0 THEN DO;
18331 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
18332 +  END;
18333 +  IF _BRANCH_ GT 0 THEN DO;
18334 +
18335 +    _BRANCH_ = -1;
18336 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
18337 +     %DMNORMIP( _ARBFMT_18);
18338 +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'GROCERY' ,'MOBILE PHONE' )
18339 +        THEN DO;
18340 +       _BRANCH_ =    1;
18341 +      END;
18342 +    IF _BRANCH_ LT 0 THEN DO;
18343 +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
18344 +      ELSE IF _ARBFMT_18 NOTIN (
18345 +        'LAPTOP & ACCESSORY' ,'GROCERY' ,'MOBILE PHONE' ,'OTHERS' ,'MOBILE' ,
18346 +        'FASHION'
18347 +         ) THEN _BRANCH_ = 1;
18348 +    END;
18349 +    IF _BRANCH_ GT 0 THEN DO;
18350 +       _ARB_F_ + 0.0264069199;
18351 +      END;
18352 +    END;
18353 +  END;
18354 +
18355 +********** LEAF    69  NODE   369 ***************;
18356 +IF _ARB_BADF_ EQ 0 THEN DO;
18357 +
18358 +  _BRANCH_ = -1;
18359 +    IF  NOT MISSING(Tenure ) AND
18360 +                     1.5 <= Tenure  THEN DO;
18361 +     _BRANCH_ =    2;
18362 +    END;
18363 +  IF _BRANCH_ LT 0 THEN DO;
18364 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
18365 +  END;
18366 +  IF _BRANCH_ GT 0 THEN DO;
18367 +
18368 +    _BRANCH_ = -1;
18369 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
18370 +     %DMNORMIP( _ARBFMT_18);
18371 +      IF _ARBFMT_18 IN ('OTHERS' ,'MOBILE' ,'FASHION' ) THEN DO;
18372 +       _BRANCH_ =    2;
18373 +      END;
18374 +
18375 +    IF _BRANCH_ GT 0 THEN DO;
18376 +       _ARB_F_ + -0.008861148;
18377 +      END;
18378 +    END;
18379 +  END;
18380 +
18381 +********** LEAF    70  NODE   371 ***************;
18382 +IF _ARB_BADF_ EQ 0 THEN DO;
18383 +
18384 +  _BRANCH_ = -1;
18385 +    IF  NOT MISSING(DaySinceLastOrder ) AND
18386 +    DaySinceLastOrder  <                  1.5 THEN DO;
18387 +     _BRANCH_ =    1;
18388 +    END;
18389 +
18390 +  IF _BRANCH_ GT 0 THEN DO;
18391 +     _ARB_F_ + -0.031839982;
18392 +    END;
18393 +  END;
18394 +
18395 +********** LEAF    71  NODE   373 ***************;
18396 +IF _ARB_BADF_ EQ 0 THEN DO;
18397 +
18398 +  _BRANCH_ = -1;
18399 +    IF  NOT MISSING(DaySinceLastOrder ) AND
18400 +                     1.5 <= DaySinceLastOrder  THEN DO;
18401 +     _BRANCH_ =    2;
18402 +    END;
18403 +  IF _BRANCH_ LT 0 THEN DO;
18404 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
18405 +  END;
18406 +  IF _BRANCH_ GT 0 THEN DO;
18407 +
18408 +    _BRANCH_ = -1;
18409 +      IF  NOT MISSING(CityTier ) AND
18410 +      CityTier  <                  1.5 THEN DO;
18411 +       _BRANCH_ =    1;
18412 +      END;
18413 +    IF _BRANCH_ LT 0 THEN DO;
18414 +       IF MISSING( CityTier  ) THEN _BRANCH_ = 1;
18415 +    END;
18416 +    IF _BRANCH_ GT 0 THEN DO;
18417 +       _ARB_F_ + 0.0181646616;
18418 +      END;
18419 +    END;
18420 +  END;
18421 +
18422 +********** LEAF    72  NODE   374 ***************;
18423 +IF _ARB_BADF_ EQ 0 THEN DO;
18424 +
18425 +  _BRANCH_ = -1;
18426 +    IF  NOT MISSING(DaySinceLastOrder ) AND
18427 +                     1.5 <= DaySinceLastOrder  THEN DO;
18428 +     _BRANCH_ =    2;
18429 +    END;
18430 +  IF _BRANCH_ LT 0 THEN DO;
18431 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
18432 +  END;
18433 +  IF _BRANCH_ GT 0 THEN DO;
18434 +
18435 +    _BRANCH_ = -1;
18436 +      IF  NOT MISSING(CityTier ) AND
18437 +                       1.5 <= CityTier  THEN DO;
18438 +       _BRANCH_ =    2;
18439 +      END;
18440 +
18441 +    IF _BRANCH_ GT 0 THEN DO;
18442 +       _ARB_F_ + -0.007834701;
18443 +      END;
18444 +    END;
18445 +  END;
18446 +
18447 +********** LEAF    73  NODE   376 ***************;
18448 +IF _ARB_BADF_ EQ 0 THEN DO;
18449 +
18450 +  _BRANCH_ = -1;
18451 +    IF  NOT MISSING(Tenure ) AND
18452 +    Tenure  <                  1.5 THEN DO;
18453 +     _BRANCH_ =    1;
18454 +    END;
18455 +
18456 +  IF _BRANCH_ GT 0 THEN DO;
18457 +     _ARB_F_ + -0.014384958;
18458 +    END;
18459 +  END;
18460 +
18461 +********** LEAF    74  NODE   378 ***************;
18462 +IF _ARB_BADF_ EQ 0 THEN DO;
18463 +
18464 +  _BRANCH_ = -1;
18465 +    IF  NOT MISSING(Tenure ) AND
18466 +                     1.5 <= Tenure  THEN DO;
18467 +     _BRANCH_ =    2;
18468 +    END;
18469 +  IF _BRANCH_ LT 0 THEN DO;
18470 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
18471 +  END;
18472 +  IF _BRANCH_ GT 0 THEN DO;
18473 +
18474 +    _BRANCH_ = -1;
18475 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
18476 +     %DMNORMIP( _ARBFMT_18);
18477 +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'GROCERY' ,'FASHION' ) THEN DO;
18478 +       _BRANCH_ =    1;
18479 +      END;
18480 +    IF _BRANCH_ LT 0 THEN DO;
18481 +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
18482 +      ELSE IF _ARBFMT_18 NOTIN (
18483 +        'LAPTOP & ACCESSORY' ,'GROCERY' ,'FASHION' ,'OTHERS' ,'MOBILE' ,
18484 +        'MOBILE PHONE'
18485 +         ) THEN _BRANCH_ = 1;
18486 +    END;
18487 +    IF _BRANCH_ GT 0 THEN DO;
18488 +       _ARB_F_ + 0.0274398832;
18489 +      END;
18490 +    END;
18491 +  END;
18492 +
18493 +********** LEAF    75  NODE   379 ***************;
18494 +IF _ARB_BADF_ EQ 0 THEN DO;
18495 +
18496 +  _BRANCH_ = -1;
18497 +    IF  NOT MISSING(Tenure ) AND
18498 +                     1.5 <= Tenure  THEN DO;
18499 +     _BRANCH_ =    2;
18500 +    END;
18501 +  IF _BRANCH_ LT 0 THEN DO;
18502 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
18503 +  END;
18504 +  IF _BRANCH_ GT 0 THEN DO;
18505 +
18506 +    _BRANCH_ = -1;
18507 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
18508 +     %DMNORMIP( _ARBFMT_18);
18509 +      IF _ARBFMT_18 IN ('OTHERS' ,'MOBILE' ,'MOBILE PHONE' ) THEN DO;
18510 +       _BRANCH_ =    2;
18511 +      END;
18512 +
18513 +    IF _BRANCH_ GT 0 THEN DO;
18514 +       _ARB_F_ + -0.002830458;
18515 +      END;
18516 +    END;
18517 +  END;
18518 +
18519 +********** LEAF    76  NODE   381 ***************;
18520 +IF _ARB_BADF_ EQ 0 THEN DO;
18521 +
18522 +  _BRANCH_ = -1;
18523 +    IF  NOT MISSING(DaySinceLastOrder ) AND
18524 +    DaySinceLastOrder  <                  1.5 THEN DO;
18525 +     _BRANCH_ =    1;
18526 +    END;
18527 +
18528 +  IF _BRANCH_ GT 0 THEN DO;
18529 +     _ARB_F_ + -0.026371677;
18530 +    END;
18531 +  END;
18532 +
18533 +********** LEAF    77  NODE   383 ***************;
18534 +IF _ARB_BADF_ EQ 0 THEN DO;
18535 +
18536 +  _BRANCH_ = -1;
18537 +    IF  NOT MISSING(DaySinceLastOrder ) AND
18538 +                     1.5 <= DaySinceLastOrder  THEN DO;
18539 +     _BRANCH_ =    2;
18540 +    END;
18541 +  IF _BRANCH_ LT 0 THEN DO;
18542 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
18543 +  END;
18544 +  IF _BRANCH_ GT 0 THEN DO;
18545 +
18546 +    _BRANCH_ = -1;
18547 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
18548 +     %DMNORMIP( _ARBFMT_18);
18549 +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,
18550 +      'MOBILE PHONE' ) THEN DO;
18551 +       _BRANCH_ =    1;
18552 +      END;
18553 +    IF _BRANCH_ LT 0 THEN DO;
18554 +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
18555 +      ELSE IF _ARBFMT_18 NOTIN (
18556 +        'LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'MOBILE PHONE' ,'MOBILE' ,
18557 +        'FASHION'
18558 +         ) THEN _BRANCH_ = 1;
18559 +    END;
18560 +    IF _BRANCH_ GT 0 THEN DO;
18561 +       _ARB_F_ + 0.0193838304;
18562 +      END;
18563 +    END;
18564 +  END;
18565 +
18566 +********** LEAF    78  NODE   384 ***************;
18567 +IF _ARB_BADF_ EQ 0 THEN DO;
18568 +
18569 +  _BRANCH_ = -1;
18570 +    IF  NOT MISSING(DaySinceLastOrder ) AND
18571 +                     1.5 <= DaySinceLastOrder  THEN DO;
18572 +     _BRANCH_ =    2;
18573 +    END;
18574 +  IF _BRANCH_ LT 0 THEN DO;
18575 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
18576 +  END;
18577 +  IF _BRANCH_ GT 0 THEN DO;
18578 +
18579 +    _BRANCH_ = -1;
18580 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
18581 +     %DMNORMIP( _ARBFMT_18);
18582 +      IF _ARBFMT_18 IN ('MOBILE' ,'FASHION' ) THEN DO;
18583 +       _BRANCH_ =    2;
18584 +      END;
18585 +
18586 +    IF _BRANCH_ GT 0 THEN DO;
18587 +       _ARB_F_ + -0.010720235;
18588 +      END;
18589 +    END;
18590 +  END;
18591 +
18592 +********** LEAF    79  NODE   386 ***************;
18593 +IF _ARB_BADF_ EQ 0 THEN DO;
18594 +
18595 +  _BRANCH_ = -1;
18596 +  _ARBFMT_5 = PUT( Complain , $5.);
18597 +   %DMNORMIP( _ARBFMT_5);
18598 +    IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
18599 +     _BRANCH_ =    1;
18600 +    END;
18601 +
18602 +  IF _BRANCH_ GT 0 THEN DO;
18603 +     _ARB_F_ + -0.018720479;
18604 +    END;
18605 +  END;
18606 +
18607 +********** LEAF    80  NODE   388 ***************;
18608 +IF _ARB_BADF_ EQ 0 THEN DO;
18609 +
18610 +  _BRANCH_ = -1;
18611 +  _ARBFMT_5 = PUT( Complain , $5.);
18612 +   %DMNORMIP( _ARBFMT_5);
18613 +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
18614 +     _BRANCH_ =    2;
18615 +    END;
18616 +  IF _BRANCH_ LT 0 THEN DO;
18617 +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
18618 +    ELSE IF _ARBFMT_5 NOTIN (
18619 +      'TRUE' ,'FALSE'
18620 +       ) THEN _BRANCH_ = 2;
18621 +  END;
18622 +  IF _BRANCH_ GT 0 THEN DO;
18623 +
18624 +    _BRANCH_ = -1;
18625 +      IF  NOT MISSING(OrderAmountHikeFromlastYear ) AND
18626 +      OrderAmountHikeFromlastYear  <                 17.5 THEN DO;
18627 +       _BRANCH_ =    1;
18628 +      END;
18629 +    IF _BRANCH_ LT 0 THEN DO;
18630 +       IF MISSING( OrderAmountHikeFromlastYear  ) THEN _BRANCH_ = 1;
18631 +    END;
18632 +    IF _BRANCH_ GT 0 THEN DO;
18633 +       _ARB_F_ + 0.0054336542;
18634 +      END;
18635 +    END;
18636 +  END;
18637 +
18638 +********** LEAF    81  NODE   389 ***************;
18639 +IF _ARB_BADF_ EQ 0 THEN DO;
18640 +
18641 +  _BRANCH_ = -1;
18642 +  _ARBFMT_5 = PUT( Complain , $5.);
18643 +   %DMNORMIP( _ARBFMT_5);
18644 +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
18645 +     _BRANCH_ =    2;
18646 +    END;
18647 +  IF _BRANCH_ LT 0 THEN DO;
18648 +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
18649 +    ELSE IF _ARBFMT_5 NOTIN (
18650 +      'TRUE' ,'FALSE'
18651 +       ) THEN _BRANCH_ = 2;
18652 +  END;
18653 +  IF _BRANCH_ GT 0 THEN DO;
18654 +
18655 +    _BRANCH_ = -1;
18656 +      IF  NOT MISSING(OrderAmountHikeFromlastYear ) AND
18657 +                      17.5 <= OrderAmountHikeFromlastYear  THEN DO;
18658 +       _BRANCH_ =    2;
18659 +      END;
18660 +
18661 +    IF _BRANCH_ GT 0 THEN DO;
18662 +       _ARB_F_ + 0.0273346177;
18663 +      END;
18664 +    END;
18665 +  END;
18666 +
18667 +********** LEAF    82  NODE   391 ***************;
18668 +IF _ARB_BADF_ EQ 0 THEN DO;
18669 +
18670 +  _BRANCH_ = -1;
18671 +    IF  NOT MISSING(DaySinceLastOrder ) AND
18672 +    DaySinceLastOrder  <                  1.5 THEN DO;
18673 +     _BRANCH_ =    1;
18674 +    END;
18675 +
18676 +  IF _BRANCH_ GT 0 THEN DO;
18677 +     _ARB_F_ + -0.024608761;
18678 +    END;
18679 +  END;
18680 +
18681 +********** LEAF    83  NODE   393 ***************;
18682 +IF _ARB_BADF_ EQ 0 THEN DO;
18683 +
18684 +  _BRANCH_ = -1;
18685 +    IF  NOT MISSING(DaySinceLastOrder ) AND
18686 +                     1.5 <= DaySinceLastOrder  THEN DO;
18687 +     _BRANCH_ =    2;
18688 +    END;
18689 +  IF _BRANCH_ LT 0 THEN DO;
18690 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
18691 +  END;
18692 +  IF _BRANCH_ GT 0 THEN DO;
18693 +
18694 +    _BRANCH_ = -1;
18695 +      IF  NOT MISSING(SatisfactionScore ) AND
18696 +      SatisfactionScore  <                  2.5 THEN DO;
18697 +       _BRANCH_ =    1;
18698 +      END;
18699 +
18700 +    IF _BRANCH_ GT 0 THEN DO;
18701 +       _ARB_F_ + 0.0290495355;
18702 +      END;
18703 +    END;
18704 +  END;
18705 +
18706 +********** LEAF    84  NODE   394 ***************;
18707 +IF _ARB_BADF_ EQ 0 THEN DO;
18708 +
18709 +  _BRANCH_ = -1;
18710 +    IF  NOT MISSING(DaySinceLastOrder ) AND
18711 +                     1.5 <= DaySinceLastOrder  THEN DO;
18712 +     _BRANCH_ =    2;
18713 +    END;
18714 +  IF _BRANCH_ LT 0 THEN DO;
18715 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
18716 +  END;
18717 +  IF _BRANCH_ GT 0 THEN DO;
18718 +
18719 +    _BRANCH_ = -1;
18720 +      IF  NOT MISSING(SatisfactionScore ) AND
18721 +                       2.5 <= SatisfactionScore  THEN DO;
18722 +       _BRANCH_ =    2;
18723 +      END;
18724 +    IF _BRANCH_ LT 0 THEN DO;
18725 +       IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 2;
18726 +    END;
18727 +    IF _BRANCH_ GT 0 THEN DO;
18728 +       _ARB_F_ + 0.0008732502;
18729 +      END;
18730 +    END;
18731 +  END;
18732 +
18733 +********** LEAF    85  NODE   396 ***************;
18734 +IF _ARB_BADF_ EQ 0 THEN DO;
18735 +
18736 +  _BRANCH_ = -1;
18737 +  _ARBFMT_5 = PUT( Complain , $5.);
18738 +   %DMNORMIP( _ARBFMT_5);
18739 +    IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
18740 +     _BRANCH_ =    1;
18741 +    END;
18742 +
18743 +  IF _BRANCH_ GT 0 THEN DO;
18744 +     _ARB_F_ + -0.021108687;
18745 +    END;
18746 +  END;
18747 +
18748 +********** LEAF    86  NODE   398 ***************;
18749 +IF _ARB_BADF_ EQ 0 THEN DO;
18750 +
18751 +  _BRANCH_ = -1;
18752 +  _ARBFMT_5 = PUT( Complain , $5.);
18753 +   %DMNORMIP( _ARBFMT_5);
18754 +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
18755 +     _BRANCH_ =    2;
18756 +    END;
18757 +  IF _BRANCH_ LT 0 THEN DO;
18758 +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
18759 +    ELSE IF _ARBFMT_5 NOTIN (
18760 +      'TRUE' ,'FALSE'
18761 +       ) THEN _BRANCH_ = 2;
18762 +  END;
18763 +  IF _BRANCH_ GT 0 THEN DO;
18764 +
18765 +    _BRANCH_ = -1;
18766 +      IF  NOT MISSING(OrderAmountHikeFromlastYear ) AND
18767 +      OrderAmountHikeFromlastYear  <                 17.5 THEN DO;
18768 +       _BRANCH_ =    1;
18769 +      END;
18770 +    IF _BRANCH_ LT 0 THEN DO;
18771 +       IF MISSING( OrderAmountHikeFromlastYear  ) THEN _BRANCH_ = 1;
18772 +    END;
18773 +    IF _BRANCH_ GT 0 THEN DO;
18774 +       _ARB_F_ + 0.008182188;
18775 +      END;
18776 +    END;
18777 +  END;
18778 +
18779 +********** LEAF    87  NODE   399 ***************;
18780 +IF _ARB_BADF_ EQ 0 THEN DO;
18781 +
18782 +  _BRANCH_ = -1;
18783 +  _ARBFMT_5 = PUT( Complain , $5.);
18784 +   %DMNORMIP( _ARBFMT_5);
18785 +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
18786 +     _BRANCH_ =    2;
18787 +    END;
18788 +  IF _BRANCH_ LT 0 THEN DO;
18789 +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
18790 +    ELSE IF _ARBFMT_5 NOTIN (
18791 +      'TRUE' ,'FALSE'
18792 +       ) THEN _BRANCH_ = 2;
18793 +  END;
18794 +  IF _BRANCH_ GT 0 THEN DO;
18795 +
18796 +    _BRANCH_ = -1;
18797 +      IF  NOT MISSING(OrderAmountHikeFromlastYear ) AND
18798 +                      17.5 <= OrderAmountHikeFromlastYear  THEN DO;
18799 +       _BRANCH_ =    2;
18800 +      END;
18801 +
18802 +    IF _BRANCH_ GT 0 THEN DO;
18803 +       _ARB_F_ + 0.0282090133;
18804 +      END;
18805 +    END;
18806 +  END;
18807 +
18808 +********** LEAF    88  NODE   401 ***************;
18809 +IF _ARB_BADF_ EQ 0 THEN DO;
18810 +
18811 +  _BRANCH_ = -1;
18812 +  _ARBFMT_5 = PUT( Complain , $5.);
18813 +   %DMNORMIP( _ARBFMT_5);
18814 +    IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
18815 +     _BRANCH_ =    1;
18816 +    END;
18817 +
18818 +  IF _BRANCH_ GT 0 THEN DO;
18819 +     _ARB_F_ + -0.014816433;
18820 +    END;
18821 +  END;
18822 +
18823 +********** LEAF    89  NODE   403 ***************;
18824 +IF _ARB_BADF_ EQ 0 THEN DO;
18825 +
18826 +  _BRANCH_ = -1;
18827 +  _ARBFMT_5 = PUT( Complain , $5.);
18828 +   %DMNORMIP( _ARBFMT_5);
18829 +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
18830 +     _BRANCH_ =    2;
18831 +    END;
18832 +  IF _BRANCH_ LT 0 THEN DO;
18833 +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
18834 +    ELSE IF _ARBFMT_5 NOTIN (
18835 +      'TRUE' ,'FALSE'
18836 +       ) THEN _BRANCH_ = 2;
18837 +  END;
18838 +  IF _BRANCH_ GT 0 THEN DO;
18839 +
18840 +    _BRANCH_ = -1;
18841 +    _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
18842 +     %DMNORMIP( _ARBFMT_11);
18843 +      IF _ARBFMT_11 IN ('DEBIT CARD' ,'COD' ,'E WALLET' ) THEN DO;
18844 +       _BRANCH_ =    1;
18845 +      END;
18846 +    IF _BRANCH_ LT 0 THEN DO;
18847 +       IF MISSING( PreferredPaymentMode  ) THEN _BRANCH_ = 1;
18848 +      ELSE IF _ARBFMT_11 NOTIN (
18849 +        'DEBIT CARD' ,'COD' ,'E WALLET' ,'CREDIT CARD' ,'UPI'
18850 +         ) THEN _BRANCH_ = 1;
18851 +    END;
18852 +    IF _BRANCH_ GT 0 THEN DO;
18853 +       _ARB_F_ + 0.0057510063;
18854 +      END;
18855 +    END;
18856 +  END;
18857 +
18858 +********** LEAF    90  NODE   404 ***************;
18859 +IF _ARB_BADF_ EQ 0 THEN DO;
18860 +
18861 +  _BRANCH_ = -1;
18862 +  _ARBFMT_5 = PUT( Complain , $5.);
18863 +   %DMNORMIP( _ARBFMT_5);
18864 +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
18865 +     _BRANCH_ =    2;
18866 +    END;
18867 +  IF _BRANCH_ LT 0 THEN DO;
18868 +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
18869 +    ELSE IF _ARBFMT_5 NOTIN (
18870 +      'TRUE' ,'FALSE'
18871 +       ) THEN _BRANCH_ = 2;
18872 +  END;
18873 +  IF _BRANCH_ GT 0 THEN DO;
18874 +
18875 +    _BRANCH_ = -1;
18876 +    _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
18877 +     %DMNORMIP( _ARBFMT_11);
18878 +      IF _ARBFMT_11 IN ('CREDIT CARD' ,'UPI' ) THEN DO;
18879 +       _BRANCH_ =    2;
18880 +      END;
18881 +
18882 +    IF _BRANCH_ GT 0 THEN DO;
18883 +       _ARB_F_ + 0.0232857574;
18884 +      END;
18885 +    END;
18886 +  END;
18887 +
18888 +********** LEAF    91  NODE   406 ***************;
18889 +IF _ARB_BADF_ EQ 0 THEN DO;
18890 +
18891 +  _BRANCH_ = -1;
18892 +    IF  NOT MISSING(Tenure ) AND
18893 +    Tenure  <                  1.5 THEN DO;
18894 +     _BRANCH_ =    1;
18895 +    END;
18896 +
18897 +  IF _BRANCH_ GT 0 THEN DO;
18898 +     _ARB_F_ + -0.016363383;
18899 +    END;
18900 +  END;
18901 +
18902 +********** LEAF    92  NODE   408 ***************;
18903 +IF _ARB_BADF_ EQ 0 THEN DO;
18904 +
18905 +  _BRANCH_ = -1;
18906 +    IF  NOT MISSING(Tenure ) AND
18907 +                     1.5 <= Tenure  THEN DO;
18908 +     _BRANCH_ =    2;
18909 +    END;
18910 +  IF _BRANCH_ LT 0 THEN DO;
18911 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
18912 +  END;
18913 +  IF _BRANCH_ GT 0 THEN DO;
18914 +
18915 +    _BRANCH_ = -1;
18916 +      IF  NOT MISSING(Tenure ) AND
18917 +      Tenure  <                 10.5 THEN DO;
18918 +       _BRANCH_ =    1;
18919 +      END;
18920 +
18921 +    IF _BRANCH_ GT 0 THEN DO;
18922 +       _ARB_F_ + -0.002039926;
18923 +      END;
18924 +    END;
18925 +  END;
18926 +
18927 +********** LEAF    93  NODE   409 ***************;
18928 +IF _ARB_BADF_ EQ 0 THEN DO;
18929 +
18930 +  _BRANCH_ = -1;
18931 +    IF  NOT MISSING(Tenure ) AND
18932 +                     1.5 <= Tenure  THEN DO;
18933 +     _BRANCH_ =    2;
18934 +    END;
18935 +  IF _BRANCH_ LT 0 THEN DO;
18936 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
18937 +  END;
18938 +  IF _BRANCH_ GT 0 THEN DO;
18939 +
18940 +    _BRANCH_ = -1;
18941 +      IF  NOT MISSING(Tenure ) AND
18942 +                      10.5 <= Tenure  THEN DO;
18943 +       _BRANCH_ =    2;
18944 +      END;
18945 +    IF _BRANCH_ LT 0 THEN DO;
18946 +       IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
18947 +    END;
18948 +    IF _BRANCH_ GT 0 THEN DO;
18949 +       _ARB_F_ + 0.0257158679;
18950 +      END;
18951 +    END;
18952 +  END;
18953 +
18954 +********** LEAF    94  NODE   411 ***************;
18955 +IF _ARB_BADF_ EQ 0 THEN DO;
18956 +
18957 +  _BRANCH_ = -1;
18958 +    IF  NOT MISSING(DaySinceLastOrder ) AND
18959 +    DaySinceLastOrder  <                  1.5 THEN DO;
18960 +     _BRANCH_ =    1;
18961 +    END;
18962 +
18963 +  IF _BRANCH_ GT 0 THEN DO;
18964 +     _ARB_F_ + -0.026152183;
18965 +    END;
18966 +  END;
18967 +
18968 +********** LEAF    95  NODE   413 ***************;
18969 +IF _ARB_BADF_ EQ 0 THEN DO;
18970 +
18971 +  _BRANCH_ = -1;
18972 +    IF  NOT MISSING(DaySinceLastOrder ) AND
18973 +                     1.5 <= DaySinceLastOrder  THEN DO;
18974 +     _BRANCH_ =    2;
18975 +    END;
18976 +  IF _BRANCH_ LT 0 THEN DO;
18977 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
18978 +  END;
18979 +  IF _BRANCH_ GT 0 THEN DO;
18980 +
18981 +    _BRANCH_ = -1;
18982 +      IF  NOT MISSING(OrderCount ) AND
18983 +      OrderCount  <                  2.5 THEN DO;
18984 +       _BRANCH_ =    1;
18985 +      END;
18986 +    IF _BRANCH_ LT 0 THEN DO;
18987 +       IF MISSING( OrderCount  ) THEN _BRANCH_ = 1;
18988 +    END;
18989 +    IF _BRANCH_ GT 0 THEN DO;
18990 +       _ARB_F_ + 0.0191042232;
18991 +      END;
18992 +    END;
18993 +  END;
18994 +
18995 +********** LEAF    96  NODE   414 ***************;
18996 +IF _ARB_BADF_ EQ 0 THEN DO;
18997 +
18998 +  _BRANCH_ = -1;
18999 +    IF  NOT MISSING(DaySinceLastOrder ) AND
19000 +                     1.5 <= DaySinceLastOrder  THEN DO;
19001 +     _BRANCH_ =    2;
19002 +    END;
19003 +  IF _BRANCH_ LT 0 THEN DO;
19004 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
19005 +  END;
19006 +  IF _BRANCH_ GT 0 THEN DO;
19007 +
19008 +    _BRANCH_ = -1;
19009 +      IF  NOT MISSING(OrderCount ) AND
19010 +                       2.5 <= OrderCount  THEN DO;
19011 +       _BRANCH_ =    2;
19012 +      END;
19013 +
19014 +    IF _BRANCH_ GT 0 THEN DO;
19015 +       _ARB_F_ + -0.008734689;
19016 +      END;
19017 +    END;
19018 +  END;
19019 +
19020 +********** LEAF    97  NODE   416 ***************;
19021 +IF _ARB_BADF_ EQ 0 THEN DO;
19022 +
19023 +  _BRANCH_ = -1;
19024 +  _ARBFMT_5 = PUT( Complain , $5.);
19025 +   %DMNORMIP( _ARBFMT_5);
19026 +    IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
19027 +     _BRANCH_ =    1;
19028 +    END;
19029 +
19030 +  IF _BRANCH_ GT 0 THEN DO;
19031 +     _ARB_F_ + -0.016196053;
19032 +    END;
19033 +  END;
19034 +
19035 +********** LEAF    98  NODE   418 ***************;
19036 +IF _ARB_BADF_ EQ 0 THEN DO;
19037 +
19038 +  _BRANCH_ = -1;
19039 +  _ARBFMT_5 = PUT( Complain , $5.);
19040 +   %DMNORMIP( _ARBFMT_5);
19041 +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
19042 +     _BRANCH_ =    2;
19043 +    END;
19044 +  IF _BRANCH_ LT 0 THEN DO;
19045 +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
19046 +    ELSE IF _ARBFMT_5 NOTIN (
19047 +      'TRUE' ,'FALSE'
19048 +       ) THEN _BRANCH_ = 2;
19049 +  END;
19050 +  IF _BRANCH_ GT 0 THEN DO;
19051 +
19052 +    _BRANCH_ = -1;
19053 +    _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
19054 +     %DMNORMIP( _ARBFMT_11);
19055 +      IF _ARBFMT_11 IN ('DEBIT CARD' ,'CREDIT CARD' ) THEN DO;
19056 +       _BRANCH_ =    1;
19057 +      END;
19058 +    IF _BRANCH_ LT 0 THEN DO;
19059 +       IF MISSING( PreferredPaymentMode  ) THEN _BRANCH_ = 1;
19060 +      ELSE IF _ARBFMT_11 NOTIN (
19061 +        'DEBIT CARD' ,'CREDIT CARD' ,'COD' ,'E WALLET' ,'UPI'
19062 +         ) THEN _BRANCH_ = 1;
19063 +    END;
19064 +    IF _BRANCH_ GT 0 THEN DO;
19065 +       _ARB_F_ + 0.0178480375;
19066 +      END;
19067 +    END;
19068 +  END;
19069 +
19070 +********** LEAF    99  NODE   419 ***************;
19071 +IF _ARB_BADF_ EQ 0 THEN DO;
19072 +
19073 +  _BRANCH_ = -1;
19074 +  _ARBFMT_5 = PUT( Complain , $5.);
19075 +   %DMNORMIP( _ARBFMT_5);
19076 +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
19077 +     _BRANCH_ =    2;
19078 +    END;
19079 +  IF _BRANCH_ LT 0 THEN DO;
19080 +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
19081 +    ELSE IF _ARBFMT_5 NOTIN (
19082 +      'TRUE' ,'FALSE'
19083 +       ) THEN _BRANCH_ = 2;
19084 +  END;
19085 +  IF _BRANCH_ GT 0 THEN DO;
19086 +
19087 +    _BRANCH_ = -1;
19088 +    _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
19089 +     %DMNORMIP( _ARBFMT_11);
19090 +      IF _ARBFMT_11 IN ('COD' ,'E WALLET' ,'UPI' ) THEN DO;
19091 +       _BRANCH_ =    2;
19092 +      END;
19093 +
19094 +    IF _BRANCH_ GT 0 THEN DO;
19095 +       _ARB_F_ + -0.010180676;
19096 +      END;
19097 +    END;
19098 +  END;
19099 +
19100 +********** LEAF   100  NODE   421 ***************;
19101 +IF _ARB_BADF_ EQ 0 THEN DO;
19102 +
19103 +  _BRANCH_ = -1;
19104 +    IF  NOT MISSING(Tenure ) AND
19105 +    Tenure  <                  1.5 THEN DO;
19106 +     _BRANCH_ =    1;
19107 +    END;
19108 +
19109 +  IF _BRANCH_ GT 0 THEN DO;
19110 +     _ARB_F_ + -0.015250441;
19111 +    END;
19112 +  END;
19113 +
19114 +********** LEAF   101  NODE   423 ***************;
19115 +IF _ARB_BADF_ EQ 0 THEN DO;
19116 +
19117 +  _BRANCH_ = -1;
19118 +    IF  NOT MISSING(Tenure ) AND
19119 +                     1.5 <= Tenure  THEN DO;
19120 +     _BRANCH_ =    2;
19121 +    END;
19122 +  IF _BRANCH_ LT 0 THEN DO;
19123 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
19124 +  END;
19125 +  IF _BRANCH_ GT 0 THEN DO;
19126 +
19127 +    _BRANCH_ = -1;
19128 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
19129 +     %DMNORMIP( _ARBFMT_18);
19130 +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ) THEN DO;
19131 +       _BRANCH_ =    1;
19132 +      END;
19133 +    IF _BRANCH_ LT 0 THEN DO;
19134 +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
19135 +      ELSE IF _ARBFMT_18 NOTIN (
19136 +        'LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'MOBILE' ,'FASHION' ,
19137 +        'MOBILE PHONE'
19138 +         ) THEN _BRANCH_ = 1;
19139 +    END;
19140 +    IF _BRANCH_ GT 0 THEN DO;
19141 +       _ARB_F_ + 0.0284979795;
19142 +      END;
19143 +    END;
19144 +  END;
19145 +
19146 +********** LEAF   102  NODE   424 ***************;
19147 +IF _ARB_BADF_ EQ 0 THEN DO;
19148 +
19149 +  _BRANCH_ = -1;
19150 +    IF  NOT MISSING(Tenure ) AND
19151 +                     1.5 <= Tenure  THEN DO;
19152 +     _BRANCH_ =    2;
19153 +    END;
19154 +  IF _BRANCH_ LT 0 THEN DO;
19155 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
19156 +  END;
19157 +  IF _BRANCH_ GT 0 THEN DO;
19158 +
19159 +    _BRANCH_ = -1;
19160 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
19161 +     %DMNORMIP( _ARBFMT_18);
19162 +      IF _ARBFMT_18 IN ('MOBILE' ,'FASHION' ,'MOBILE PHONE' ) THEN DO;
19163 +       _BRANCH_ =    2;
19164 +      END;
19165 +
19166 +    IF _BRANCH_ GT 0 THEN DO;
19167 +       _ARB_F_ + -0.000702883;
19168 +      END;
19169 +    END;
19170 +  END;
19171 +
19172 +********** LEAF   103  NODE   428 ***************;
19173 +IF _ARB_BADF_ EQ 0 THEN DO;
19174 +
19175 +  _BRANCH_ = -1;
19176 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
19177 +   %DMNORMIP( _ARBFMT_8);
19178 +    IF _ARBFMT_8 IN ('SINGLE' ,'DIVORCED' ) THEN DO;
19179 +     _BRANCH_ =    1;
19180 +    END;
19181 +
19182 +  IF _BRANCH_ GT 0 THEN DO;
19183 +
19184 +    _BRANCH_ = -1;
19185 +      IF  NOT MISSING(SatisfactionScore ) AND
19186 +      SatisfactionScore  <                  3.5 THEN DO;
19187 +       _BRANCH_ =    1;
19188 +      END;
19189 +    IF _BRANCH_ LT 0 THEN DO;
19190 +       IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 1;
19191 +    END;
19192 +    IF _BRANCH_ GT 0 THEN DO;
19193 +       _ARB_F_ + -0.001998326;
19194 +      END;
19195 +    END;
19196 +  END;
19197 +
19198 +********** LEAF   104  NODE   429 ***************;
19199 +IF _ARB_BADF_ EQ 0 THEN DO;
19200 +
19201 +  _BRANCH_ = -1;
19202 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
19203 +   %DMNORMIP( _ARBFMT_8);
19204 +    IF _ARBFMT_8 IN ('SINGLE' ,'DIVORCED' ) THEN DO;
19205 +     _BRANCH_ =    1;
19206 +    END;
19207 +
19208 +  IF _BRANCH_ GT 0 THEN DO;
19209 +
19210 +    _BRANCH_ = -1;
19211 +      IF  NOT MISSING(SatisfactionScore ) AND
19212 +                       3.5 <= SatisfactionScore  THEN DO;
19213 +       _BRANCH_ =    2;
19214 +      END;
19215 +
19216 +    IF _BRANCH_ GT 0 THEN DO;
19217 +       _ARB_F_ + -0.034887053;
19218 +      END;
19219 +    END;
19220 +  END;
19221 +
19222 +********** LEAF   105  NODE   430 ***************;
19223 +IF _ARB_BADF_ EQ 0 THEN DO;
19224 +
19225 +  _BRANCH_ = -1;
19226 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
19227 +   %DMNORMIP( _ARBFMT_8);
19228 +    IF _ARBFMT_8 IN ('MARRIED' ) THEN DO;
19229 +     _BRANCH_ =    2;
19230 +    END;
19231 +  IF _BRANCH_ LT 0 THEN DO;
19232 +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
19233 +    ELSE IF _ARBFMT_8 NOTIN (
19234 +      'SINGLE' ,'DIVORCED' ,'MARRIED'
19235 +       ) THEN _BRANCH_ = 2;
19236 +  END;
19237 +  IF _BRANCH_ GT 0 THEN DO;
19238 +
19239 +    _BRANCH_ = -1;
19240 +      IF  NOT MISSING(CityTier ) AND
19241 +      CityTier  <                  1.5 THEN DO;
19242 +       _BRANCH_ =    1;
19243 +      END;
19244 +    IF _BRANCH_ LT 0 THEN DO;
19245 +       IF MISSING( CityTier  ) THEN _BRANCH_ = 1;
19246 +    END;
19247 +    IF _BRANCH_ GT 0 THEN DO;
19248 +       _ARB_F_ + 0.0228956566;
19249 +      END;
19250 +    END;
19251 +  END;
19252 +
19253 +********** LEAF   106  NODE   431 ***************;
19254 +IF _ARB_BADF_ EQ 0 THEN DO;
19255 +
19256 +  _BRANCH_ = -1;
19257 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
19258 +   %DMNORMIP( _ARBFMT_8);
19259 +    IF _ARBFMT_8 IN ('MARRIED' ) THEN DO;
19260 +     _BRANCH_ =    2;
19261 +    END;
19262 +  IF _BRANCH_ LT 0 THEN DO;
19263 +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
19264 +    ELSE IF _ARBFMT_8 NOTIN (
19265 +      'SINGLE' ,'DIVORCED' ,'MARRIED'
19266 +       ) THEN _BRANCH_ = 2;
19267 +  END;
19268 +  IF _BRANCH_ GT 0 THEN DO;
19269 +
19270 +    _BRANCH_ = -1;
19271 +      IF  NOT MISSING(CityTier ) AND
19272 +                       1.5 <= CityTier  THEN DO;
19273 +       _BRANCH_ =    2;
19274 +      END;
19275 +
19276 +    IF _BRANCH_ GT 0 THEN DO;
19277 +       _ARB_F_ + -0.000593644;
19278 +      END;
19279 +    END;
19280 +  END;
19281 +
19282 +********** LEAF   107  NODE   433 ***************;
19283 +IF _ARB_BADF_ EQ 0 THEN DO;
19284 +
19285 +  _BRANCH_ = -1;
19286 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
19287 +   %DMNORMIP( _ARBFMT_8);
19288 +    IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
19289 +     _BRANCH_ =    1;
19290 +    END;
19291 +
19292 +  IF _BRANCH_ GT 0 THEN DO;
19293 +     _ARB_F_ + -0.019059571;
19294 +    END;
19295 +  END;
19296 +
19297 +********** LEAF   108  NODE   435 ***************;
19298 +IF _ARB_BADF_ EQ 0 THEN DO;
19299 +
19300 +  _BRANCH_ = -1;
19301 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
19302 +   %DMNORMIP( _ARBFMT_8);
19303 +    IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
19304 +     _BRANCH_ =    2;
19305 +    END;
19306 +  IF _BRANCH_ LT 0 THEN DO;
19307 +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
19308 +    ELSE IF _ARBFMT_8 NOTIN (
19309 +      'SINGLE' ,'DIVORCED' ,'MARRIED'
19310 +       ) THEN _BRANCH_ = 2;
19311 +  END;
19312 +  IF _BRANCH_ GT 0 THEN DO;
19313 +
19314 +    _BRANCH_ = -1;
19315 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
19316 +     %DMNORMIP( _ARBFMT_18);
19317 +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ) THEN DO;
19318 +       _BRANCH_ =    1;
19319 +      END;
19320 +    IF _BRANCH_ LT 0 THEN DO;
19321 +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
19322 +      ELSE IF _ARBFMT_18 NOTIN (
19323 +        'LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'MOBILE' ,'FASHION' ,
19324 +        'MOBILE PHONE'
19325 +         ) THEN _BRANCH_ = 1;
19326 +    END;
19327 +    IF _BRANCH_ GT 0 THEN DO;
19328 +       _ARB_F_ + 0.0271280369;
19329 +      END;
19330 +    END;
19331 +  END;
19332 +
19333 +********** LEAF   109  NODE   436 ***************;
19334 +IF _ARB_BADF_ EQ 0 THEN DO;
19335 +
19336 +  _BRANCH_ = -1;
19337 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
19338 +   %DMNORMIP( _ARBFMT_8);
19339 +    IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
19340 +     _BRANCH_ =    2;
19341 +    END;
19342 +  IF _BRANCH_ LT 0 THEN DO;
19343 +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
19344 +    ELSE IF _ARBFMT_8 NOTIN (
19345 +      'SINGLE' ,'DIVORCED' ,'MARRIED'
19346 +       ) THEN _BRANCH_ = 2;
19347 +  END;
19348 +  IF _BRANCH_ GT 0 THEN DO;
19349 +
19350 +    _BRANCH_ = -1;
19351 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
19352 +     %DMNORMIP( _ARBFMT_18);
19353 +      IF _ARBFMT_18 IN ('MOBILE' ,'FASHION' ,'MOBILE PHONE' ) THEN DO;
19354 +       _BRANCH_ =    2;
19355 +      END;
19356 +
19357 +    IF _BRANCH_ GT 0 THEN DO;
19358 +       _ARB_F_ + 0.0016075676;
19359 +      END;
19360 +    END;
19361 +  END;
19362 +
19363 +********** LEAF   110  NODE   438 ***************;
19364 +IF _ARB_BADF_ EQ 0 THEN DO;
19365 +
19366 +  _BRANCH_ = -1;
19367 +    IF  NOT MISSING(SatisfactionScore ) AND
19368 +    SatisfactionScore  <                  2.5 THEN DO;
19369 +     _BRANCH_ =    1;
19370 +    END;
19371 +
19372 +  IF _BRANCH_ GT 0 THEN DO;
19373 +     _ARB_F_ + 0.0197051634;
19374 +    END;
19375 +  END;
19376 +
19377 +********** LEAF   111  NODE   440 ***************;
19378 +IF _ARB_BADF_ EQ 0 THEN DO;
19379 +
19380 +  _BRANCH_ = -1;
19381 +    IF  NOT MISSING(SatisfactionScore ) AND
19382 +                     2.5 <= SatisfactionScore  THEN DO;
19383 +     _BRANCH_ =    2;
19384 +    END;
19385 +  IF _BRANCH_ LT 0 THEN DO;
19386 +     IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 2;
19387 +  END;
19388 +  IF _BRANCH_ GT 0 THEN DO;
19389 +
19390 +    _BRANCH_ = -1;
19391 +    _ARBFMT_5 = PUT( Complain , $5.);
19392 +     %DMNORMIP( _ARBFMT_5);
19393 +      IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
19394 +       _BRANCH_ =    1;
19395 +      END;
19396 +
19397 +    IF _BRANCH_ GT 0 THEN DO;
19398 +       _ARB_F_ + -0.028790746;
19399 +      END;
19400 +    END;
19401 +  END;
19402 +
19403 +********** LEAF   112  NODE   441 ***************;
19404 +IF _ARB_BADF_ EQ 0 THEN DO;
19405 +
19406 +  _BRANCH_ = -1;
19407 +    IF  NOT MISSING(SatisfactionScore ) AND
19408 +                     2.5 <= SatisfactionScore  THEN DO;
19409 +     _BRANCH_ =    2;
19410 +    END;
19411 +  IF _BRANCH_ LT 0 THEN DO;
19412 +     IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 2;
19413 +  END;
19414 +  IF _BRANCH_ GT 0 THEN DO;
19415 +
19416 +    _BRANCH_ = -1;
19417 +    _ARBFMT_5 = PUT( Complain , $5.);
19418 +     %DMNORMIP( _ARBFMT_5);
19419 +      IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
19420 +       _BRANCH_ =    2;
19421 +      END;
19422 +    IF _BRANCH_ LT 0 THEN DO;
19423 +       IF MISSING( Complain  ) THEN _BRANCH_ = 2;
19424 +      ELSE IF _ARBFMT_5 NOTIN (
19425 +        'TRUE' ,'FALSE'
19426 +         ) THEN _BRANCH_ = 2;
19427 +    END;
19428 +    IF _BRANCH_ GT 0 THEN DO;
19429 +       _ARB_F_ + 0.0037262248;
19430 +      END;
19431 +    END;
19432 +  END;
19433 +
19434 +********** LEAF   113  NODE   445 ***************;
19435 +IF _ARB_BADF_ EQ 0 THEN DO;
19436 +
19437 +  _BRANCH_ = -1;
19438 +  _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
19439 +   %DMNORMIP( _ARBFMT_11);
19440 +    IF _ARBFMT_11 IN ('DEBIT CARD' ,'CREDIT CARD' ,'UPI' ) THEN DO;
19441 +     _BRANCH_ =    1;
19442 +    END;
19443 +  IF _BRANCH_ LT 0 THEN DO;
19444 +     IF MISSING( PreferredPaymentMode  ) THEN _BRANCH_ = 1;
19445 +    ELSE IF _ARBFMT_11 NOTIN (
19446 +      'DEBIT CARD' ,'CREDIT CARD' ,'UPI' ,'COD' ,'E WALLET'
19447 +       ) THEN _BRANCH_ = 1;
19448 +  END;
19449 +  IF _BRANCH_ GT 0 THEN DO;
19450 +
19451 +    _BRANCH_ = -1;
19452 +      IF  NOT MISSING(OrderAmountHikeFromlastYear ) AND
19453 +      OrderAmountHikeFromlastYear  <                 13.5 THEN DO;
19454 +       _BRANCH_ =    1;
19455 +      END;
19456 +
19457 +    IF _BRANCH_ GT 0 THEN DO;
19458 +       _ARB_F_ + -0.012555966;
19459 +      END;
19460 +    END;
19461 +  END;
19462 +
19463 +********** LEAF   114  NODE   446 ***************;
19464 +IF _ARB_BADF_ EQ 0 THEN DO;
19465 +
19466 +  _BRANCH_ = -1;
19467 +  _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
19468 +   %DMNORMIP( _ARBFMT_11);
19469 +    IF _ARBFMT_11 IN ('DEBIT CARD' ,'CREDIT CARD' ,'UPI' ) THEN DO;
19470 +     _BRANCH_ =    1;
19471 +    END;
19472 +  IF _BRANCH_ LT 0 THEN DO;
19473 +     IF MISSING( PreferredPaymentMode  ) THEN _BRANCH_ = 1;
19474 +    ELSE IF _ARBFMT_11 NOTIN (
19475 +      'DEBIT CARD' ,'CREDIT CARD' ,'UPI' ,'COD' ,'E WALLET'
19476 +       ) THEN _BRANCH_ = 1;
19477 +  END;
19478 +  IF _BRANCH_ GT 0 THEN DO;
19479 +
19480 +    _BRANCH_ = -1;
19481 +      IF  NOT MISSING(OrderAmountHikeFromlastYear ) AND
19482 +                      13.5 <= OrderAmountHikeFromlastYear  THEN DO;
19483 +       _BRANCH_ =    2;
19484 +      END;
19485 +    IF _BRANCH_ LT 0 THEN DO;
19486 +       IF MISSING( OrderAmountHikeFromlastYear  ) THEN _BRANCH_ = 2;
19487 +    END;
19488 +    IF _BRANCH_ GT 0 THEN DO;
19489 +       _ARB_F_ + 0.0145117621;
19490 +      END;
19491 +    END;
19492 +  END;
19493 +
19494 +********** LEAF   115  NODE   444 ***************;
19495 +IF _ARB_BADF_ EQ 0 THEN DO;
19496 +
19497 +  _BRANCH_ = -1;
19498 +  _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
19499 +   %DMNORMIP( _ARBFMT_11);
19500 +    IF _ARBFMT_11 IN ('COD' ,'E WALLET' ) THEN DO;
19501 +     _BRANCH_ =    2;
19502 +    END;
19503 +
19504 +  IF _BRANCH_ GT 0 THEN DO;
19505 +     _ARB_F_ + -0.02764378;
19506 +    END;
19507 +  END;
19508 +
19509 +********** LEAF   116  NODE   448 ***************;
19510 +IF _ARB_BADF_ EQ 0 THEN DO;
19511 +
19512 +  _BRANCH_ = -1;
19513 +    IF  NOT MISSING(DaySinceLastOrder ) AND
19514 +    DaySinceLastOrder  <                  1.5 THEN DO;
19515 +     _BRANCH_ =    1;
19516 +    END;
19517 +
19518 +  IF _BRANCH_ GT 0 THEN DO;
19519 +     _ARB_F_ + -0.020808921;
19520 +    END;
19521 +  END;
19522 +
19523 +********** LEAF   117  NODE   450 ***************;
19524 +IF _ARB_BADF_ EQ 0 THEN DO;
19525 +
19526 +  _BRANCH_ = -1;
19527 +    IF  NOT MISSING(DaySinceLastOrder ) AND
19528 +                     1.5 <= DaySinceLastOrder  THEN DO;
19529 +     _BRANCH_ =    2;
19530 +    END;
19531 +  IF _BRANCH_ LT 0 THEN DO;
19532 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
19533 +  END;
19534 +  IF _BRANCH_ GT 0 THEN DO;
19535 +
19536 +    _BRANCH_ = -1;
19537 +      IF  NOT MISSING(CityTier ) AND
19538 +      CityTier  <                  2.5 THEN DO;
19539 +       _BRANCH_ =    1;
19540 +      END;
19541 +    IF _BRANCH_ LT 0 THEN DO;
19542 +       IF MISSING( CityTier  ) THEN _BRANCH_ = 1;
19543 +    END;
19544 +    IF _BRANCH_ GT 0 THEN DO;
19545 +       _ARB_F_ + 0.0172120108;
19546 +      END;
19547 +    END;
19548 +  END;
19549 +
19550 +********** LEAF   118  NODE   451 ***************;
19551 +IF _ARB_BADF_ EQ 0 THEN DO;
19552 +
19553 +  _BRANCH_ = -1;
19554 +    IF  NOT MISSING(DaySinceLastOrder ) AND
19555 +                     1.5 <= DaySinceLastOrder  THEN DO;
19556 +     _BRANCH_ =    2;
19557 +    END;
19558 +  IF _BRANCH_ LT 0 THEN DO;
19559 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
19560 +  END;
19561 +  IF _BRANCH_ GT 0 THEN DO;
19562 +
19563 +    _BRANCH_ = -1;
19564 +      IF  NOT MISSING(CityTier ) AND
19565 +                       2.5 <= CityTier  THEN DO;
19566 +       _BRANCH_ =    2;
19567 +      END;
19568 +
19569 +    IF _BRANCH_ GT 0 THEN DO;
19570 +       _ARB_F_ + -0.009487986;
19571 +      END;
19572 +    END;
19573 +  END;
19574 +
19575 +********** LEAF   119  NODE   453 ***************;
19576 +IF _ARB_BADF_ EQ 0 THEN DO;
19577 +
19578 +  _BRANCH_ = -1;
19579 +    IF  NOT MISSING(SatisfactionScore ) AND
19580 +    SatisfactionScore  <                  2.5 THEN DO;
19581 +     _BRANCH_ =    1;
19582 +    END;
19583 +
19584 +  IF _BRANCH_ GT 0 THEN DO;
19585 +     _ARB_F_ + 0.0206199968;
19586 +    END;
19587 +  END;
19588 +
19589 +********** LEAF   120  NODE   455 ***************;
19590 +IF _ARB_BADF_ EQ 0 THEN DO;
19591 +
19592 +  _BRANCH_ = -1;
19593 +    IF  NOT MISSING(SatisfactionScore ) AND
19594 +                     2.5 <= SatisfactionScore  THEN DO;
19595 +     _BRANCH_ =    2;
19596 +    END;
19597 +  IF _BRANCH_ LT 0 THEN DO;
19598 +     IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 2;
19599 +  END;
19600 +  IF _BRANCH_ GT 0 THEN DO;
19601 +
19602 +    _BRANCH_ = -1;
19603 +    _ARBFMT_5 = PUT( Complain , $5.);
19604 +     %DMNORMIP( _ARBFMT_5);
19605 +      IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
19606 +       _BRANCH_ =    1;
19607 +      END;
19608 +
19609 +    IF _BRANCH_ GT 0 THEN DO;
19610 +       _ARB_F_ + -0.02580774;
19611 +      END;
19612 +    END;
19613 +  END;
19614 +
19615 +********** LEAF   121  NODE   456 ***************;
19616 +IF _ARB_BADF_ EQ 0 THEN DO;
19617 +
19618 +  _BRANCH_ = -1;
19619 +    IF  NOT MISSING(SatisfactionScore ) AND
19620 +                     2.5 <= SatisfactionScore  THEN DO;
19621 +     _BRANCH_ =    2;
19622 +    END;
19623 +  IF _BRANCH_ LT 0 THEN DO;
19624 +     IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 2;
19625 +  END;
19626 +  IF _BRANCH_ GT 0 THEN DO;
19627 +
19628 +    _BRANCH_ = -1;
19629 +    _ARBFMT_5 = PUT( Complain , $5.);
19630 +     %DMNORMIP( _ARBFMT_5);
19631 +      IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
19632 +       _BRANCH_ =    2;
19633 +      END;
19634 +    IF _BRANCH_ LT 0 THEN DO;
19635 +       IF MISSING( Complain  ) THEN _BRANCH_ = 2;
19636 +      ELSE IF _ARBFMT_5 NOTIN (
19637 +        'TRUE' ,'FALSE'
19638 +         ) THEN _BRANCH_ = 2;
19639 +    END;
19640 +    IF _BRANCH_ GT 0 THEN DO;
19641 +       _ARB_F_ + 0.001333835;
19642 +      END;
19643 +    END;
19644 +  END;
19645 +
19646 +********** LEAF   122  NODE   460 ***************;
19647 +IF _ARB_BADF_ EQ 0 THEN DO;
19648 +
19649 +  _BRANCH_ = -1;
19650 +  _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
19651 +   %DMNORMIP( _ARBFMT_11);
19652 +    IF _ARBFMT_11 IN ('DEBIT CARD' ,'CREDIT CARD' ,'UPI' ) THEN DO;
19653 +     _BRANCH_ =    1;
19654 +    END;
19655 +  IF _BRANCH_ LT 0 THEN DO;
19656 +     IF MISSING( PreferredPaymentMode  ) THEN _BRANCH_ = 1;
19657 +    ELSE IF _ARBFMT_11 NOTIN (
19658 +      'DEBIT CARD' ,'CREDIT CARD' ,'UPI' ,'COD' ,'E WALLET'
19659 +       ) THEN _BRANCH_ = 1;
19660 +  END;
19661 +  IF _BRANCH_ GT 0 THEN DO;
19662 +
19663 +    _BRANCH_ = -1;
19664 +    _ARBFMT_12 = PUT( PreferredLoginDevice , $12.);
19665 +     %DMNORMIP( _ARBFMT_12);
19666 +      IF _ARBFMT_12 IN ('MOBILE PHONE' ) THEN DO;
19667 +       _BRANCH_ =    1;
19668 +      END;
19669 +    IF _BRANCH_ LT 0 THEN DO;
19670 +       IF MISSING( PreferredLoginDevice  ) THEN _BRANCH_ = 1;
19671 +      ELSE IF _ARBFMT_12 NOTIN (
19672 +        'MOBILE PHONE' ,'COMPUTER'
19673 +         ) THEN _BRANCH_ = 1;
19674 +    END;
19675 +    IF _BRANCH_ GT 0 THEN DO;
19676 +       _ARB_F_ + 0.0135776558;
19677 +      END;
19678 +    END;
19679 +  END;
19680 +
19681 +********** LEAF   123  NODE   461 ***************;
19682 +IF _ARB_BADF_ EQ 0 THEN DO;
19683 +
19684 +  _BRANCH_ = -1;
19685 +  _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
19686 +   %DMNORMIP( _ARBFMT_11);
19687 +    IF _ARBFMT_11 IN ('DEBIT CARD' ,'CREDIT CARD' ,'UPI' ) THEN DO;
19688 +     _BRANCH_ =    1;
19689 +    END;
19690 +  IF _BRANCH_ LT 0 THEN DO;
19691 +     IF MISSING( PreferredPaymentMode  ) THEN _BRANCH_ = 1;
19692 +    ELSE IF _ARBFMT_11 NOTIN (
19693 +      'DEBIT CARD' ,'CREDIT CARD' ,'UPI' ,'COD' ,'E WALLET'
19694 +       ) THEN _BRANCH_ = 1;
19695 +  END;
19696 +  IF _BRANCH_ GT 0 THEN DO;
19697 +
19698 +    _BRANCH_ = -1;
19699 +    _ARBFMT_12 = PUT( PreferredLoginDevice , $12.);
19700 +     %DMNORMIP( _ARBFMT_12);
19701 +      IF _ARBFMT_12 IN ('COMPUTER' ) THEN DO;
19702 +       _BRANCH_ =    2;
19703 +      END;
19704 +
19705 +    IF _BRANCH_ GT 0 THEN DO;
19706 +       _ARB_F_ + -0.010848169;
19707 +      END;
19708 +    END;
19709 +  END;
19710 +
19711 +********** LEAF   124  NODE   459 ***************;
19712 +IF _ARB_BADF_ EQ 0 THEN DO;
19713 +
19714 +  _BRANCH_ = -1;
19715 +  _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
19716 +   %DMNORMIP( _ARBFMT_11);
19717 +    IF _ARBFMT_11 IN ('COD' ,'E WALLET' ) THEN DO;
19718 +     _BRANCH_ =    2;
19719 +    END;
19720 +
19721 +  IF _BRANCH_ GT 0 THEN DO;
19722 +     _ARB_F_ + -0.022109909;
19723 +    END;
19724 +  END;
19725 +
19726 +********** LEAF   125  NODE   463 ***************;
19727 +IF _ARB_BADF_ EQ 0 THEN DO;
19728 +
19729 +  _BRANCH_ = -1;
19730 +    IF  NOT MISSING(DaySinceLastOrder ) AND
19731 +    DaySinceLastOrder  <                  1.5 THEN DO;
19732 +     _BRANCH_ =    1;
19733 +    END;
19734 +
19735 +  IF _BRANCH_ GT 0 THEN DO;
19736 +     _ARB_F_ + -0.016891096;
19737 +    END;
19738 +  END;
19739 +
19740 +********** LEAF   126  NODE   465 ***************;
19741 +IF _ARB_BADF_ EQ 0 THEN DO;
19742 +
19743 +  _BRANCH_ = -1;
19744 +    IF  NOT MISSING(DaySinceLastOrder ) AND
19745 +                     1.5 <= DaySinceLastOrder  THEN DO;
19746 +     _BRANCH_ =    2;
19747 +    END;
19748 +  IF _BRANCH_ LT 0 THEN DO;
19749 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
19750 +  END;
19751 +  IF _BRANCH_ GT 0 THEN DO;
19752 +
19753 +    _BRANCH_ = -1;
19754 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
19755 +     %DMNORMIP( _ARBFMT_18);
19756 +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'GROCERY' ,'MOBILE PHONE' )
19757 +        THEN DO;
19758 +       _BRANCH_ =    1;
19759 +      END;
19760 +    IF _BRANCH_ LT 0 THEN DO;
19761 +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
19762 +      ELSE IF _ARBFMT_18 NOTIN (
19763 +        'LAPTOP & ACCESSORY' ,'GROCERY' ,'MOBILE PHONE' ,'OTHERS' ,'MOBILE' ,
19764 +        'FASHION'
19765 +         ) THEN _BRANCH_ = 1;
19766 +    END;
19767 +    IF _BRANCH_ GT 0 THEN DO;
19768 +       _ARB_F_ + 0.0168076253;
19769 +      END;
19770 +    END;
19771 +  END;
19772 +
19773 +********** LEAF   127  NODE   466 ***************;
19774 +IF _ARB_BADF_ EQ 0 THEN DO;
19775 +
19776 +  _BRANCH_ = -1;
19777 +    IF  NOT MISSING(DaySinceLastOrder ) AND
19778 +                     1.5 <= DaySinceLastOrder  THEN DO;
19779 +     _BRANCH_ =    2;
19780 +    END;
19781 +  IF _BRANCH_ LT 0 THEN DO;
19782 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
19783 +  END;
19784 +  IF _BRANCH_ GT 0 THEN DO;
19785 +
19786 +    _BRANCH_ = -1;
19787 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
19788 +     %DMNORMIP( _ARBFMT_18);
19789 +      IF _ARBFMT_18 IN ('OTHERS' ,'MOBILE' ,'FASHION' ) THEN DO;
19790 +       _BRANCH_ =    2;
19791 +      END;
19792 +
19793 +    IF _BRANCH_ GT 0 THEN DO;
19794 +       _ARB_F_ + -0.009168328;
19795 +      END;
19796 +    END;
19797 +  END;
19798 +
19799 +********** LEAF   128  NODE   470 ***************;
19800 +IF _ARB_BADF_ EQ 0 THEN DO;
19801 +
19802 +  _BRANCH_ = -1;
19803 +    IF  NOT MISSING(CityTier ) AND
19804 +    CityTier  <                  1.5 THEN DO;
19805 +     _BRANCH_ =    1;
19806 +    END;
19807 +  IF _BRANCH_ LT 0 THEN DO;
19808 +     IF MISSING( CityTier  ) THEN _BRANCH_ = 1;
19809 +  END;
19810 +  IF _BRANCH_ GT 0 THEN DO;
19811 +
19812 +    _BRANCH_ = -1;
19813 +      IF  NOT MISSING(SatisfactionScore ) AND
19814 +      SatisfactionScore  <                  2.5 THEN DO;
19815 +       _BRANCH_ =    1;
19816 +      END;
19817 +
19818 +    IF _BRANCH_ GT 0 THEN DO;
19819 +       _ARB_F_ + 0.0309883967;
19820 +      END;
19821 +    END;
19822 +  END;
19823 +
19824 +********** LEAF   129  NODE   471 ***************;
19825 +IF _ARB_BADF_ EQ 0 THEN DO;
19826 +
19827 +  _BRANCH_ = -1;
19828 +    IF  NOT MISSING(CityTier ) AND
19829 +    CityTier  <                  1.5 THEN DO;
19830 +     _BRANCH_ =    1;
19831 +    END;
19832 +  IF _BRANCH_ LT 0 THEN DO;
19833 +     IF MISSING( CityTier  ) THEN _BRANCH_ = 1;
19834 +  END;
19835 +  IF _BRANCH_ GT 0 THEN DO;
19836 +
19837 +    _BRANCH_ = -1;
19838 +      IF  NOT MISSING(SatisfactionScore ) AND
19839 +                       2.5 <= SatisfactionScore  THEN DO;
19840 +       _BRANCH_ =    2;
19841 +      END;
19842 +    IF _BRANCH_ LT 0 THEN DO;
19843 +       IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 2;
19844 +    END;
19845 +    IF _BRANCH_ GT 0 THEN DO;
19846 +       _ARB_F_ + 0.0030938213;
19847 +      END;
19848 +    END;
19849 +  END;
19850 +
19851 +********** LEAF   130  NODE   469 ***************;
19852 +IF _ARB_BADF_ EQ 0 THEN DO;
19853 +
19854 +  _BRANCH_ = -1;
19855 +    IF  NOT MISSING(CityTier ) AND
19856 +                     1.5 <= CityTier  THEN DO;
19857 +     _BRANCH_ =    2;
19858 +    END;
19859 +
19860 +  IF _BRANCH_ GT 0 THEN DO;
19861 +     _ARB_F_ + -0.014449446;
19862 +    END;
19863 +  END;
19864 +
19865 +********** LEAF   131  NODE   473 ***************;
19866 +IF _ARB_BADF_ EQ 0 THEN DO;
19867 +
19868 +  _BRANCH_ = -1;
19869 +    IF  NOT MISSING(SatisfactionScore ) AND
19870 +    SatisfactionScore  <                  2.5 THEN DO;
19871 +     _BRANCH_ =    1;
19872 +    END;
19873 +
19874 +  IF _BRANCH_ GT 0 THEN DO;
19875 +     _ARB_F_ + 0.0198867532;
19876 +    END;
19877 +  END;
19878 +
19879 +********** LEAF   132  NODE   475 ***************;
19880 +IF _ARB_BADF_ EQ 0 THEN DO;
19881 +
19882 +  _BRANCH_ = -1;
19883 +    IF  NOT MISSING(SatisfactionScore ) AND
19884 +                     2.5 <= SatisfactionScore  THEN DO;
19885 +     _BRANCH_ =    2;
19886 +    END;
19887 +  IF _BRANCH_ LT 0 THEN DO;
19888 +     IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 2;
19889 +  END;
19890 +  IF _BRANCH_ GT 0 THEN DO;
19891 +
19892 +    _BRANCH_ = -1;
19893 +    _ARBFMT_8 = PUT( MaritalStatus , $8.);
19894 +     %DMNORMIP( _ARBFMT_8);
19895 +      IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
19896 +       _BRANCH_ =    1;
19897 +      END;
19898 +
19899 +    IF _BRANCH_ GT 0 THEN DO;
19900 +       _ARB_F_ + -0.029089438;
19901 +      END;
19902 +    END;
19903 +  END;
19904 +
19905 +********** LEAF   133  NODE   476 ***************;
19906 +IF _ARB_BADF_ EQ 0 THEN DO;
19907 +
19908 +  _BRANCH_ = -1;
19909 +    IF  NOT MISSING(SatisfactionScore ) AND
19910 +                     2.5 <= SatisfactionScore  THEN DO;
19911 +     _BRANCH_ =    2;
19912 +    END;
19913 +  IF _BRANCH_ LT 0 THEN DO;
19914 +     IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 2;
19915 +  END;
19916 +  IF _BRANCH_ GT 0 THEN DO;
19917 +
19918 +    _BRANCH_ = -1;
19919 +    _ARBFMT_8 = PUT( MaritalStatus , $8.);
19920 +     %DMNORMIP( _ARBFMT_8);
19921 +      IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
19922 +       _BRANCH_ =    2;
19923 +      END;
19924 +    IF _BRANCH_ LT 0 THEN DO;
19925 +       IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
19926 +      ELSE IF _ARBFMT_8 NOTIN (
19927 +        'SINGLE' ,'DIVORCED' ,'MARRIED'
19928 +         ) THEN _BRANCH_ = 2;
19929 +    END;
19930 +    IF _BRANCH_ GT 0 THEN DO;
19931 +       _ARB_F_ + 0.004386866;
19932 +      END;
19933 +    END;
19934 +  END;
19935 +
19936 +********** LEAF   134  NODE   478 ***************;
19937 +IF _ARB_BADF_ EQ 0 THEN DO;
19938 +
19939 +  _BRANCH_ = -1;
19940 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
19941 +   %DMNORMIP( _ARBFMT_8);
19942 +    IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
19943 +     _BRANCH_ =    1;
19944 +    END;
19945 +
19946 +  IF _BRANCH_ GT 0 THEN DO;
19947 +     _ARB_F_ + -0.014375143;
19948 +    END;
19949 +  END;
19950 +
19951 +********** LEAF   135  NODE   480 ***************;
19952 +IF _ARB_BADF_ EQ 0 THEN DO;
19953 +
19954 +  _BRANCH_ = -1;
19955 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
19956 +   %DMNORMIP( _ARBFMT_8);
19957 +    IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
19958 +     _BRANCH_ =    2;
19959 +    END;
19960 +  IF _BRANCH_ LT 0 THEN DO;
19961 +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
19962 +    ELSE IF _ARBFMT_8 NOTIN (
19963 +      'SINGLE' ,'DIVORCED' ,'MARRIED'
19964 +       ) THEN _BRANCH_ = 2;
19965 +  END;
19966 +  IF _BRANCH_ GT 0 THEN DO;
19967 +
19968 +    _BRANCH_ = -1;
19969 +      IF  NOT MISSING(OrderCount ) AND
19970 +      OrderCount  <                  2.5 THEN DO;
19971 +       _BRANCH_ =    1;
19972 +      END;
19973 +    IF _BRANCH_ LT 0 THEN DO;
19974 +       IF MISSING( OrderCount  ) THEN _BRANCH_ = 1;
19975 +    END;
19976 +    IF _BRANCH_ GT 0 THEN DO;
19977 +       _ARB_F_ + 0.0161057906;
19978 +      END;
19979 +    END;
19980 +  END;
19981 +
19982 +********** LEAF   136  NODE   481 ***************;
19983 +IF _ARB_BADF_ EQ 0 THEN DO;
19984 +
19985 +  _BRANCH_ = -1;
19986 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
19987 +   %DMNORMIP( _ARBFMT_8);
19988 +    IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
19989 +     _BRANCH_ =    2;
19990 +    END;
19991 +  IF _BRANCH_ LT 0 THEN DO;
19992 +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
19993 +    ELSE IF _ARBFMT_8 NOTIN (
19994 +      'SINGLE' ,'DIVORCED' ,'MARRIED'
19995 +       ) THEN _BRANCH_ = 2;
19996 +  END;
19997 +  IF _BRANCH_ GT 0 THEN DO;
19998 +
19999 +    _BRANCH_ = -1;
20000 +      IF  NOT MISSING(OrderCount ) AND
20001 +                       2.5 <= OrderCount  THEN DO;
20002 +       _BRANCH_ =    2;
20003 +      END;
20004 +
20005 +    IF _BRANCH_ GT 0 THEN DO;
20006 +       _ARB_F_ + -0.003839919;
20007 +      END;
20008 +    END;
20009 +  END;
20010 +
20011 +********** LEAF   137  NODE   483 ***************;
20012 +IF _ARB_BADF_ EQ 0 THEN DO;
20013 +
20014 +  _BRANCH_ = -1;
20015 +    IF  NOT MISSING(DaySinceLastOrder ) AND
20016 +    DaySinceLastOrder  <                  1.5 THEN DO;
20017 +     _BRANCH_ =    1;
20018 +    END;
20019 +
20020 +  IF _BRANCH_ GT 0 THEN DO;
20021 +     _ARB_F_ + -0.015186707;
20022 +    END;
20023 +  END;
20024 +
20025 +********** LEAF   138  NODE   485 ***************;
20026 +IF _ARB_BADF_ EQ 0 THEN DO;
20027 +
20028 +  _BRANCH_ = -1;
20029 +    IF  NOT MISSING(DaySinceLastOrder ) AND
20030 +                     1.5 <= DaySinceLastOrder  THEN DO;
20031 +     _BRANCH_ =    2;
20032 +    END;
20033 +  IF _BRANCH_ LT 0 THEN DO;
20034 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
20035 +  END;
20036 +  IF _BRANCH_ GT 0 THEN DO;
20037 +
20038 +    _BRANCH_ = -1;
20039 +      IF  NOT MISSING(CityTier ) AND
20040 +      CityTier  <                  1.5 THEN DO;
20041 +       _BRANCH_ =    1;
20042 +      END;
20043 +    IF _BRANCH_ LT 0 THEN DO;
20044 +       IF MISSING( CityTier  ) THEN _BRANCH_ = 1;
20045 +    END;
20046 +    IF _BRANCH_ GT 0 THEN DO;
20047 +       _ARB_F_ + 0.0137317634;
20048 +      END;
20049 +    END;
20050 +  END;
20051 +
20052 +********** LEAF   139  NODE   486 ***************;
20053 +IF _ARB_BADF_ EQ 0 THEN DO;
20054 +
20055 +  _BRANCH_ = -1;
20056 +    IF  NOT MISSING(DaySinceLastOrder ) AND
20057 +                     1.5 <= DaySinceLastOrder  THEN DO;
20058 +     _BRANCH_ =    2;
20059 +    END;
20060 +  IF _BRANCH_ LT 0 THEN DO;
20061 +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
20062 +  END;
20063 +  IF _BRANCH_ GT 0 THEN DO;
20064 +
20065 +    _BRANCH_ = -1;
20066 +      IF  NOT MISSING(CityTier ) AND
20067 +                       1.5 <= CityTier  THEN DO;
20068 +       _BRANCH_ =    2;
20069 +      END;
20070 +
20071 +    IF _BRANCH_ GT 0 THEN DO;
20072 +       _ARB_F_ + -0.007895541;
20073 +      END;
20074 +    END;
20075 +  END;
20076 +
20077 +********** LEAF   140  NODE   488 ***************;
20078 +IF _ARB_BADF_ EQ 0 THEN DO;
20079 +
20080 +  _BRANCH_ = -1;
20081 +    IF  NOT MISSING(Tenure ) AND
20082 +    Tenure  <                  3.5 THEN DO;
20083 +     _BRANCH_ =    1;
20084 +    END;
20085 +
20086 +  IF _BRANCH_ GT 0 THEN DO;
20087 +     _ARB_F_ + -0.010570459;
20088 +    END;
20089 +  END;
20090 +
20091 +********** LEAF   141  NODE   490 ***************;
20092 +IF _ARB_BADF_ EQ 0 THEN DO;
20093 +
20094 +  _BRANCH_ = -1;
20095 +    IF  NOT MISSING(Tenure ) AND
20096 +                     3.5 <= Tenure  THEN DO;
20097 +     _BRANCH_ =    2;
20098 +    END;
20099 +  IF _BRANCH_ LT 0 THEN DO;
20100 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
20101 +  END;
20102 +  IF _BRANCH_ GT 0 THEN DO;
20103 +
20104 +    _BRANCH_ = -1;
20105 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
20106 +     %DMNORMIP( _ARBFMT_18);
20107 +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'FASHION' )
20108 +       THEN DO;
20109 +       _BRANCH_ =    1;
20110 +      END;
20111 +    IF _BRANCH_ LT 0 THEN DO;
20112 +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
20113 +      ELSE IF _ARBFMT_18 NOTIN (
20114 +        'LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'FASHION' ,'MOBILE' ,
20115 +        'MOBILE PHONE'
20116 +         ) THEN _BRANCH_ = 1;
20117 +    END;
20118 +    IF _BRANCH_ GT 0 THEN DO;
20119 +       _ARB_F_ + 0.0199654718;
20120 +      END;
20121 +    END;
20122 +  END;
20123 +
20124 +********** LEAF   142  NODE   491 ***************;
20125 +IF _ARB_BADF_ EQ 0 THEN DO;
20126 +
20127 +  _BRANCH_ = -1;
20128 +    IF  NOT MISSING(Tenure ) AND
20129 +                     3.5 <= Tenure  THEN DO;
20130 +     _BRANCH_ =    2;
20131 +    END;
20132 +  IF _BRANCH_ LT 0 THEN DO;
20133 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
20134 +  END;
20135 +  IF _BRANCH_ GT 0 THEN DO;
20136 +
20137 +    _BRANCH_ = -1;
20138 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
20139 +     %DMNORMIP( _ARBFMT_18);
20140 +      IF _ARBFMT_18 IN ('MOBILE' ,'MOBILE PHONE' ) THEN DO;
20141 +       _BRANCH_ =    2;
20142 +      END;
20143 +
20144 +    IF _BRANCH_ GT 0 THEN DO;
20145 +       _ARB_F_ + -0.005022658;
20146 +      END;
20147 +    END;
20148 +  END;
20149 +
20150 +********** LEAF   143  NODE   495 ***************;
20151 +IF _ARB_BADF_ EQ 0 THEN DO;
20152 +
20153 +  _BRANCH_ = -1;
20154 +  _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
20155 +   %DMNORMIP( _ARBFMT_11);
20156 +    IF _ARBFMT_11 IN ('DEBIT CARD' ,'CREDIT CARD' ,'UPI' ) THEN DO;
20157 +     _BRANCH_ =    1;
20158 +    END;
20159 +  IF _BRANCH_ LT 0 THEN DO;
20160 +     IF MISSING( PreferredPaymentMode  ) THEN _BRANCH_ = 1;
20161 +    ELSE IF _ARBFMT_11 NOTIN (
20162 +      'DEBIT CARD' ,'CREDIT CARD' ,'UPI' ,'COD' ,'E WALLET'
20163 +       ) THEN _BRANCH_ = 1;
20164 +  END;
20165 +  IF _BRANCH_ GT 0 THEN DO;
20166 +
20167 +    _BRANCH_ = -1;
20168 +      IF  NOT MISSING(SatisfactionScore ) AND
20169 +      SatisfactionScore  <                  3.5 THEN DO;
20170 +       _BRANCH_ =    1;
20171 +      END;
20172 +    IF _BRANCH_ LT 0 THEN DO;
20173 +       IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 1;
20174 +    END;
20175 +    IF _BRANCH_ GT 0 THEN DO;
20176 +       _ARB_F_ + 0.0223176826;
20177 +      END;
20178 +    END;
20179 +  END;
20180 +
20181 +********** LEAF   144  NODE   496 ***************;
20182 +IF _ARB_BADF_ EQ 0 THEN DO;
20183 +
20184 +  _BRANCH_ = -1;
20185 +  _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
20186 +   %DMNORMIP( _ARBFMT_11);
20187 +    IF _ARBFMT_11 IN ('DEBIT CARD' ,'CREDIT CARD' ,'UPI' ) THEN DO;
20188 +     _BRANCH_ =    1;
20189 +    END;
20190 +  IF _BRANCH_ LT 0 THEN DO;
20191 +     IF MISSING( PreferredPaymentMode  ) THEN _BRANCH_ = 1;
20192 +    ELSE IF _ARBFMT_11 NOTIN (
20193 +      'DEBIT CARD' ,'CREDIT CARD' ,'UPI' ,'COD' ,'E WALLET'
20194 +       ) THEN _BRANCH_ = 1;
20195 +  END;
20196 +  IF _BRANCH_ GT 0 THEN DO;
20197 +
20198 +    _BRANCH_ = -1;
20199 +      IF  NOT MISSING(SatisfactionScore ) AND
20200 +                       3.5 <= SatisfactionScore  THEN DO;
20201 +       _BRANCH_ =    2;
20202 +      END;
20203 +
20204 +    IF _BRANCH_ GT 0 THEN DO;
20205 +       _ARB_F_ + -0.009079693;
20206 +      END;
20207 +    END;
20208 +  END;
20209 +
20210 +********** LEAF   145  NODE   494 ***************;
20211 +IF _ARB_BADF_ EQ 0 THEN DO;
20212 +
20213 +  _BRANCH_ = -1;
20214 +  _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
20215 +   %DMNORMIP( _ARBFMT_11);
20216 +    IF _ARBFMT_11 IN ('COD' ,'E WALLET' ) THEN DO;
20217 +     _BRANCH_ =    2;
20218 +    END;
20219 +
20220 +  IF _BRANCH_ GT 0 THEN DO;
20221 +     _ARB_F_ + -0.021246542;
20222 +    END;
20223 +  END;
20224 +
20225 +********** LEAF   146  NODE   500 ***************;
20226 +IF _ARB_BADF_ EQ 0 THEN DO;
20227 +
20228 +  _BRANCH_ = -1;
20229 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
20230 +   %DMNORMIP( _ARBFMT_8);
20231 +    IF _ARBFMT_8 IN ('SINGLE' ,'DIVORCED' ) THEN DO;
20232 +     _BRANCH_ =    1;
20233 +    END;
20234 +
20235 +  IF _BRANCH_ GT 0 THEN DO;
20236 +
20237 +    _BRANCH_ = -1;
20238 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
20239 +     %DMNORMIP( _ARBFMT_18);
20240 +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'GROCERY' ) THEN DO;
20241 +       _BRANCH_ =    1;
20242 +      END;
20243 +
20244 +    IF _BRANCH_ GT 0 THEN DO;
20245 +       _ARB_F_ + 0.0101527861;
20246 +      END;
20247 +    END;
20248 +  END;
20249 +
20250 +********** LEAF   147  NODE   501 ***************;
20251 +IF _ARB_BADF_ EQ 0 THEN DO;
20252 +
20253 +  _BRANCH_ = -1;
20254 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
20255 +   %DMNORMIP( _ARBFMT_8);
20256 +    IF _ARBFMT_8 IN ('SINGLE' ,'DIVORCED' ) THEN DO;
20257 +     _BRANCH_ =    1;
20258 +    END;
20259 +
20260 +  IF _BRANCH_ GT 0 THEN DO;
20261 +
20262 +    _BRANCH_ = -1;
20263 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
20264 +     %DMNORMIP( _ARBFMT_18);
20265 +      IF _ARBFMT_18 IN ('OTHERS' ,'MOBILE' ,'FASHION' ,'MOBILE PHONE' ) THEN
20266 +        DO;
20267 +       _BRANCH_ =    2;
20268 +      END;
20269 +    IF _BRANCH_ LT 0 THEN DO;
20270 +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 2;
20271 +      ELSE IF _ARBFMT_18 NOTIN (
20272 +        'LAPTOP & ACCESSORY' ,'GROCERY' ,'OTHERS' ,'MOBILE' ,'FASHION' ,
20273 +        'MOBILE PHONE'
20274 +         ) THEN _BRANCH_ = 2;
20275 +    END;
20276 +    IF _BRANCH_ GT 0 THEN DO;
20277 +       _ARB_F_ + -0.019405315;
20278 +      END;
20279 +    END;
20280 +  END;
20281 +
20282 +********** LEAF   148  NODE   502 ***************;
20283 +IF _ARB_BADF_ EQ 0 THEN DO;
20284 +
20285 +  _BRANCH_ = -1;
20286 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
20287 +   %DMNORMIP( _ARBFMT_8);
20288 +    IF _ARBFMT_8 IN ('MARRIED' ) THEN DO;
20289 +     _BRANCH_ =    2;
20290 +    END;
20291 +  IF _BRANCH_ LT 0 THEN DO;
20292 +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
20293 +    ELSE IF _ARBFMT_8 NOTIN (
20294 +      'SINGLE' ,'DIVORCED' ,'MARRIED'
20295 +       ) THEN _BRANCH_ = 2;
20296 +  END;
20297 +  IF _BRANCH_ GT 0 THEN DO;
20298 +
20299 +    _BRANCH_ = -1;
20300 +      IF  NOT MISSING(Tenure ) AND
20301 +      Tenure  <                 13.5 THEN DO;
20302 +       _BRANCH_ =    1;
20303 +      END;
20304 +    IF _BRANCH_ LT 0 THEN DO;
20305 +       IF MISSING( Tenure  ) THEN _BRANCH_ = 1;
20306 +    END;
20307 +    IF _BRANCH_ GT 0 THEN DO;
20308 +       _ARB_F_ + 0.0050042769;
20309 +      END;
20310 +    END;
20311 +  END;
20312 +
20313 +********** LEAF   149  NODE   503 ***************;
20314 +IF _ARB_BADF_ EQ 0 THEN DO;
20315 +
20316 +  _BRANCH_ = -1;
20317 +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
20318 +   %DMNORMIP( _ARBFMT_8);
20319 +    IF _ARBFMT_8 IN ('MARRIED' ) THEN DO;
20320 +     _BRANCH_ =    2;
20321 +    END;
20322 +  IF _BRANCH_ LT 0 THEN DO;
20323 +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
20324 +    ELSE IF _ARBFMT_8 NOTIN (
20325 +      'SINGLE' ,'DIVORCED' ,'MARRIED'
20326 +       ) THEN _BRANCH_ = 2;
20327 +  END;
20328 +  IF _BRANCH_ GT 0 THEN DO;
20329 +
20330 +    _BRANCH_ = -1;
20331 +      IF  NOT MISSING(Tenure ) AND
20332 +                      13.5 <= Tenure  THEN DO;
20333 +       _BRANCH_ =    2;
20334 +      END;
20335 +
20336 +    IF _BRANCH_ GT 0 THEN DO;
20337 +       _ARB_F_ + 0.03716596;
20338 +      END;
20339 +    END;
20340 +  END;
20341 +
20342 +********** LEAF   150  NODE   505 ***************;
20343 +IF _ARB_BADF_ EQ 0 THEN DO;
20344 +
20345 +  _BRANCH_ = -1;
20346 +    IF  NOT MISSING(Tenure ) AND
20347 +    Tenure  <                  1.5 THEN DO;
20348 +     _BRANCH_ =    1;
20349 +    END;
20350 +
20351 +  IF _BRANCH_ GT 0 THEN DO;
20352 +     _ARB_F_ + -0.01105639;
20353 +    END;
20354 +  END;
20355 +
20356 +********** LEAF   151  NODE   507 ***************;
20357 +IF _ARB_BADF_ EQ 0 THEN DO;
20358 +
20359 +  _BRANCH_ = -1;
20360 +    IF  NOT MISSING(Tenure ) AND
20361 +                     1.5 <= Tenure  THEN DO;
20362 +     _BRANCH_ =    2;
20363 +    END;
20364 +  IF _BRANCH_ LT 0 THEN DO;
20365 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
20366 +  END;
20367 +  IF _BRANCH_ GT 0 THEN DO;
20368 +
20369 +    _BRANCH_ = -1;
20370 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
20371 +     %DMNORMIP( _ARBFMT_18);
20372 +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'FASHION' )
20373 +       THEN DO;
20374 +       _BRANCH_ =    1;
20375 +      END;
20376 +    IF _BRANCH_ LT 0 THEN DO;
20377 +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
20378 +      ELSE IF _ARBFMT_18 NOTIN (
20379 +        'LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'FASHION' ,'MOBILE' ,
20380 +        'MOBILE PHONE'
20381 +         ) THEN _BRANCH_ = 1;
20382 +    END;
20383 +    IF _BRANCH_ GT 0 THEN DO;
20384 +       _ARB_F_ + 0.0204893537;
20385 +      END;
20386 +    END;
20387 +  END;
20388 +
20389 +********** LEAF   152  NODE   508 ***************;
20390 +IF _ARB_BADF_ EQ 0 THEN DO;
20391 +
20392 +  _BRANCH_ = -1;
20393 +    IF  NOT MISSING(Tenure ) AND
20394 +                     1.5 <= Tenure  THEN DO;
20395 +     _BRANCH_ =    2;
20396 +    END;
20397 +  IF _BRANCH_ LT 0 THEN DO;
20398 +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
20399 +  END;
20400 +  IF _BRANCH_ GT 0 THEN DO;
20401 +
20402 +    _BRANCH_ = -1;
20403 +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
20404 +     %DMNORMIP( _ARBFMT_18);
20405 +      IF _ARBFMT_18 IN ('MOBILE' ,'MOBILE PHONE' ) THEN DO;
20406 +       _BRANCH_ =    2;
20407 +      END;
20408 +
20409 +    IF _BRANCH_ GT 0 THEN DO;
20410 +       _ARB_F_ + -0.010658659;
20411 +      END;
20412 +    END;
20413 +  END;
20414 +
20415 +_ARB_F_ = 2.0 * _ARB_F_;
20416 +IF _ARB_BADF_ NE 0 THEN P_Churnfalse  = 0.8316831683;
20417 +ELSE IF _ARB_F_ > 45.0 THEN P_Churnfalse  = 1.0;
20418 +ELSE IF _ARB_F_ < -45.0 THEN P_Churnfalse  = 0.0;
20419 +ELSE P_Churnfalse  = 1.0/(1.0 + EXP( - _ARB_F_));
20420 +P_Churntrue  = 1.0 - P_Churnfalse ;
20421 +*****  CREATE Q_: POSTERIORS WITHOUT PRIORS ****;
20422 +Q_Churntrue  = P_Churntrue ;
20423 +Q_Churnfalse  = P_Churnfalse ;
20424 +
20425 +*****  I_ AND U_ VARIABLES *******************;
20426 + DROP _ARB_I_ _ARB_IP_;
20427 + _ARB_IP_ = -1.0;
20428 + IF _ARB_IP_ + 1.0/32768.0 < P_Churntrue THEN DO;
20429 +   _ARB_IP_ = P_Churntrue ;
20430 +   _ARB_I_  = 1;
20431 +   END;
20432 + IF _ARB_IP_ + 1.0/32768.0 < P_Churnfalse THEN DO;
20433 +   _ARB_IP_ = P_Churnfalse ;
20434 +   _ARB_I_  = 2;
20435 +   END;
20436 + SELECT( _ARB_I_);
20437 +  WHEN( 1) DO;
20438 +    I_Churn  = 'TRUE' ;
20439 +    U_Churn  = 'true' ;
20440 +     END;
20441 +  WHEN( 2) DO;
20442 +    I_Churn  = 'FALSE' ;
20443 +    U_Churn  = 'false' ;
20444 +     END;
20445 +   END;
20446 +
20447 +*****  RESIDUALS R_ *************;
20448 +IF  F_Churn  NE 'TRUE'
20449 +AND F_Churn  NE 'FALSE'  THEN DO;
20450 +        R_Churntrue  = .;
20451 +        R_Churnfalse  = .;
20452 + END;
20453 + ELSE DO;
20454 +       R_Churntrue  =  -P_Churntrue ;
20455 +       R_Churnfalse  =  -P_Churnfalse ;
20456 +       SELECT( F_Churn  );
20457 +          WHEN( 'TRUE'  ) R_Churntrue  = R_Churntrue  +1;
20458 +          WHEN( 'FALSE'  ) R_Churnfalse  = R_Churnfalse  +1;
20459 +       END;
20460 + END;
20461 +
20462 +****************************************************************;
20463 +******          END OF DECISION TREE SCORING CODE         ******;
20464 +****************************************************************;
20465 +
NOTE: %INCLUDE (level 1) ending.
20466   run;
 
NOTE: DATA STEP view saved on file EMWS2.BOOST_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
20467   quit;
20468   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
20469   filename emflow "D:\Study\WQD7005 Data Mining\_final\AA1\WQD7005_AA1_Analysis\Workspaces\EMWS2\Boost\EMFLOWSCORE.sas";
20470   *------------------------------------------------------------*;
20471   * Boost: Scoring VALIDATE data;
20472   *------------------------------------------------------------*;
20473   data EMWS2.Boost_VALIDATE
20474   / view=EMWS2.Boost_VALIDATE
20475   ;
20476   set EMWS2.Part_VALIDATE
20477   ;
20478   %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file D:\Study\WQD7005 Data Mining\_final\AA1\WQD7005_AA1_Analysis\Workspaces\EMWS2\Boost\EMFLOWSCORE.sas.
20479  +****************************************************************;
20480  +******             DECISION TREE SCORING CODE             ******;
20481  +****************************************************************;
20482  +
20483  +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
20484  +LENGTH F_Churn  $    5;
20485  +LENGTH I_Churn  $    5;
20486  +LENGTH U_Churn  $    5;
20487  +LENGTH _WARN_  $    4;
20488  +
20489  +******              LABELS FOR NEW VARIABLES              ******;
20490  +label P_Churntrue = 'Predicted: Churn=true' ;
20491  +      P_Churntrue  = 0;
20492  +label P_Churnfalse = 'Predicted: Churn=false' ;
20493  +      P_Churnfalse  = 0;
20494  +label Q_Churntrue = 'Unadjusted P: Churn=true' ;
20495  +      Q_Churntrue  = 0;
20496  +label Q_Churnfalse = 'Unadjusted P: Churn=false' ;
20497  +      Q_Churnfalse  = 0;
20498  +label R_Churntrue = 'Residual: Churn=true' ;
20499  +label R_Churnfalse = 'Residual: Churn=false' ;
20500  +label F_Churn = 'From: Churn' ;
20501  +label I_Churn = 'Into: Churn' ;
20502  +label U_Churn = 'Unnormalized Into: Churn' ;
20503  +label _WARN_ = 'Warnings' ;
20504  +
20505  +
20506  +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
20507  +LENGTH _ARBFMT_5 $      5; DROP _ARBFMT_5;
20508  +_ARBFMT_5 = ' '; /* Initialize to avoid warning. */
20509  +LENGTH _ARBFMT_18 $     18; DROP _ARBFMT_18;
20510  +_ARBFMT_18 = ' '; /* Initialize to avoid warning. */
20511  +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
20512  +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
20513  +LENGTH _ARBFMT_11 $     11; DROP _ARBFMT_11;
20514  +_ARBFMT_11 = ' '; /* Initialize to avoid warning. */
20515  +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
20516  +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
20517  +
20518  +
20519  +_ARBFMT_5 = PUT( Churn , $5.);
20520  + %DMNORMCP( _ARBFMT_5, F_Churn );
20521  +
20522  + DROP _ARB_F_;
20523  + DROP _ARB_BADF_;
20524  +     _ARB_F_ = 0.7988017274;
20525  +     _ARB_BADF_ = 0;
20526  +******             ASSIGN OBSERVATION TO NODE             ******;
20527  + DROP _ARB_P_;
20528  + _ARB_P_ = 0;
20529  + DROP _ARB_PPATH_; _ARB_PPATH_ = 1;
20530  +
20531  +********** LEAF     1  NODE   256 ***************;
20532  +IF _ARB_BADF_ EQ 0 THEN DO;
20533  +
20534  +   DROP _BRANCH_;
20535  +  _BRANCH_ = -1;
20536  +    IF  NOT MISSING(Tenure ) AND
20537  +    Tenure  <                  1.5 THEN DO;
20538  +     _BRANCH_ =    1;
20539  +    END;
20540  +
20541  +  IF _BRANCH_ GT 0 THEN DO;
20542  +     _ARB_F_ + -0.119933732;
20543  +    END;
20544  +  END;
20545  +
20546  +********** LEAF     2  NODE   258 ***************;
20547  +IF _ARB_BADF_ EQ 0 THEN DO;
20548  +
20549  +  _BRANCH_ = -1;
20550  +    IF  NOT MISSING(Tenure ) AND
20551  +                     1.5 <= Tenure  THEN DO;
20552  +     _BRANCH_ =    2;
20553  +    END;
20554  +  IF _BRANCH_ LT 0 THEN DO;
20555  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
20556  +  END;
20557  +  IF _BRANCH_ GT 0 THEN DO;
20558  +
20559  +    _BRANCH_ = -1;
20560  +    _ARBFMT_5 = PUT( Complain , $5.);
20561  +     %DMNORMIP( _ARBFMT_5);
20562  +      IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
20563  +       _BRANCH_ =    1;
20564  +      END;
20565  +
20566  +    IF _BRANCH_ GT 0 THEN DO;
20567  +       _ARB_F_ + 0.0036035617;
20568  +      END;
20569  +    END;
20570  +  END;
20571  +
20572  +********** LEAF     3  NODE   259 ***************;
20573  +IF _ARB_BADF_ EQ 0 THEN DO;
20574  +
20575  +  _BRANCH_ = -1;
20576  +    IF  NOT MISSING(Tenure ) AND
20577  +                     1.5 <= Tenure  THEN DO;
20578  +     _BRANCH_ =    2;
20579  +    END;
20580  +  IF _BRANCH_ LT 0 THEN DO;
20581  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
20582  +  END;
20583  +  IF _BRANCH_ GT 0 THEN DO;
20584  +
20585  +    _BRANCH_ = -1;
20586  +    _ARBFMT_5 = PUT( Complain , $5.);
20587  +     %DMNORMIP( _ARBFMT_5);
20588  +      IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
20589  +       _BRANCH_ =    2;
20590  +      END;
20591  +    IF _BRANCH_ LT 0 THEN DO;
20592  +       IF MISSING( Complain  ) THEN _BRANCH_ = 2;
20593  +      ELSE IF _ARBFMT_5 NOTIN (
20594  +        'TRUE' ,'FALSE'
20595  +         ) THEN _BRANCH_ = 2;
20596  +    END;
20597  +    IF _BRANCH_ GT 0 THEN DO;
20598  +       _ARB_F_ + 0.0404882867;
20599  +      END;
20600  +    END;
20601  +  END;
20602  +
20603  +********** LEAF     4  NODE   261 ***************;
20604  +IF _ARB_BADF_ EQ 0 THEN DO;
20605  +
20606  +  _BRANCH_ = -1;
20607  +    IF  NOT MISSING(Tenure ) AND
20608  +    Tenure  <                  1.5 THEN DO;
20609  +     _BRANCH_ =    1;
20610  +    END;
20611  +
20612  +  IF _BRANCH_ GT 0 THEN DO;
20613  +     _ARB_F_ + -0.092280488;
20614  +    END;
20615  +  END;
20616  +
20617  +********** LEAF     5  NODE   263 ***************;
20618  +IF _ARB_BADF_ EQ 0 THEN DO;
20619  +
20620  +  _BRANCH_ = -1;
20621  +    IF  NOT MISSING(Tenure ) AND
20622  +                     1.5 <= Tenure  THEN DO;
20623  +     _BRANCH_ =    2;
20624  +    END;
20625  +  IF _BRANCH_ LT 0 THEN DO;
20626  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
20627  +  END;
20628  +  IF _BRANCH_ GT 0 THEN DO;
20629  +
20630  +    _BRANCH_ = -1;
20631  +    _ARBFMT_5 = PUT( Complain , $5.);
20632  +     %DMNORMIP( _ARBFMT_5);
20633  +      IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
20634  +       _BRANCH_ =    1;
20635  +      END;
20636  +
20637  +    IF _BRANCH_ GT 0 THEN DO;
20638  +       _ARB_F_ + -0.006025827;
20639  +      END;
20640  +    END;
20641  +  END;
20642  +
20643  +********** LEAF     6  NODE   264 ***************;
20644  +IF _ARB_BADF_ EQ 0 THEN DO;
20645  +
20646  +  _BRANCH_ = -1;
20647  +    IF  NOT MISSING(Tenure ) AND
20648  +                     1.5 <= Tenure  THEN DO;
20649  +     _BRANCH_ =    2;
20650  +    END;
20651  +  IF _BRANCH_ LT 0 THEN DO;
20652  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
20653  +  END;
20654  +  IF _BRANCH_ GT 0 THEN DO;
20655  +
20656  +    _BRANCH_ = -1;
20657  +    _ARBFMT_5 = PUT( Complain , $5.);
20658  +     %DMNORMIP( _ARBFMT_5);
20659  +      IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
20660  +       _BRANCH_ =    2;
20661  +      END;
20662  +    IF _BRANCH_ LT 0 THEN DO;
20663  +       IF MISSING( Complain  ) THEN _BRANCH_ = 2;
20664  +      ELSE IF _ARBFMT_5 NOTIN (
20665  +        'TRUE' ,'FALSE'
20666  +         ) THEN _BRANCH_ = 2;
20667  +    END;
20668  +    IF _BRANCH_ GT 0 THEN DO;
20669  +       _ARB_F_ + 0.0440462477;
20670  +      END;
20671  +    END;
20672  +  END;
20673  +
20674  +********** LEAF     7  NODE   266 ***************;
20675  +IF _ARB_BADF_ EQ 0 THEN DO;
20676  +
20677  +  _BRANCH_ = -1;
20678  +    IF  NOT MISSING(Tenure ) AND
20679  +    Tenure  <                  1.5 THEN DO;
20680  +     _BRANCH_ =    1;
20681  +    END;
20682  +
20683  +  IF _BRANCH_ GT 0 THEN DO;
20684  +     _ARB_F_ + -0.068444301;
20685  +    END;
20686  +  END;
20687  +
20688  +********** LEAF     8  NODE   268 ***************;
20689  +IF _ARB_BADF_ EQ 0 THEN DO;
20690  +
20691  +  _BRANCH_ = -1;
20692  +    IF  NOT MISSING(Tenure ) AND
20693  +                     1.5 <= Tenure  THEN DO;
20694  +     _BRANCH_ =    2;
20695  +    END;
20696  +  IF _BRANCH_ LT 0 THEN DO;
20697  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
20698  +  END;
20699  +  IF _BRANCH_ GT 0 THEN DO;
20700  +
20701  +    _BRANCH_ = -1;
20702  +    _ARBFMT_5 = PUT( Complain , $5.);
20703  +     %DMNORMIP( _ARBFMT_5);
20704  +      IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
20705  +       _BRANCH_ =    1;
20706  +      END;
20707  +
20708  +    IF _BRANCH_ GT 0 THEN DO;
20709  +       _ARB_F_ + -0.001024987;
20710  +      END;
20711  +    END;
20712  +  END;
20713  +
20714  +********** LEAF     9  NODE   269 ***************;
20715  +IF _ARB_BADF_ EQ 0 THEN DO;
20716  +
20717  +  _BRANCH_ = -1;
20718  +    IF  NOT MISSING(Tenure ) AND
20719  +                     1.5 <= Tenure  THEN DO;
20720  +     _BRANCH_ =    2;
20721  +    END;
20722  +  IF _BRANCH_ LT 0 THEN DO;
20723  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
20724  +  END;
20725  +  IF _BRANCH_ GT 0 THEN DO;
20726  +
20727  +    _BRANCH_ = -1;
20728  +    _ARBFMT_5 = PUT( Complain , $5.);
20729  +     %DMNORMIP( _ARBFMT_5);
20730  +      IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
20731  +       _BRANCH_ =    2;
20732  +      END;
20733  +    IF _BRANCH_ LT 0 THEN DO;
20734  +       IF MISSING( Complain  ) THEN _BRANCH_ = 2;
20735  +      ELSE IF _ARBFMT_5 NOTIN (
20736  +        'TRUE' ,'FALSE'
20737  +         ) THEN _BRANCH_ = 2;
20738  +    END;
20739  +    IF _BRANCH_ GT 0 THEN DO;
20740  +       _ARB_F_ + 0.0394159711;
20741  +      END;
20742  +    END;
20743  +  END;
20744  +
20745  +********** LEAF    10  NODE   271 ***************;
20746  +IF _ARB_BADF_ EQ 0 THEN DO;
20747  +
20748  +  _BRANCH_ = -1;
20749  +    IF  NOT MISSING(Tenure ) AND
20750  +    Tenure  <                  1.5 THEN DO;
20751  +     _BRANCH_ =    1;
20752  +    END;
20753  +
20754  +  IF _BRANCH_ GT 0 THEN DO;
20755  +     _ARB_F_ + -0.059799081;
20756  +    END;
20757  +  END;
20758  +
20759  +********** LEAF    11  NODE   273 ***************;
20760  +IF _ARB_BADF_ EQ 0 THEN DO;
20761  +
20762  +  _BRANCH_ = -1;
20763  +    IF  NOT MISSING(Tenure ) AND
20764  +                     1.5 <= Tenure  THEN DO;
20765  +     _BRANCH_ =    2;
20766  +    END;
20767  +  IF _BRANCH_ LT 0 THEN DO;
20768  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
20769  +  END;
20770  +  IF _BRANCH_ GT 0 THEN DO;
20771  +
20772  +    _BRANCH_ = -1;
20773  +    _ARBFMT_5 = PUT( Complain , $5.);
20774  +     %DMNORMIP( _ARBFMT_5);
20775  +      IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
20776  +       _BRANCH_ =    1;
20777  +      END;
20778  +
20779  +    IF _BRANCH_ GT 0 THEN DO;
20780  +       _ARB_F_ + -0.002555132;
20781  +      END;
20782  +    END;
20783  +  END;
20784  +
20785  +********** LEAF    12  NODE   274 ***************;
20786  +IF _ARB_BADF_ EQ 0 THEN DO;
20787  +
20788  +  _BRANCH_ = -1;
20789  +    IF  NOT MISSING(Tenure ) AND
20790  +                     1.5 <= Tenure  THEN DO;
20791  +     _BRANCH_ =    2;
20792  +    END;
20793  +  IF _BRANCH_ LT 0 THEN DO;
20794  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
20795  +  END;
20796  +  IF _BRANCH_ GT 0 THEN DO;
20797  +
20798  +    _BRANCH_ = -1;
20799  +    _ARBFMT_5 = PUT( Complain , $5.);
20800  +     %DMNORMIP( _ARBFMT_5);
20801  +      IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
20802  +       _BRANCH_ =    2;
20803  +      END;
20804  +    IF _BRANCH_ LT 0 THEN DO;
20805  +       IF MISSING( Complain  ) THEN _BRANCH_ = 2;
20806  +      ELSE IF _ARBFMT_5 NOTIN (
20807  +        'TRUE' ,'FALSE'
20808  +         ) THEN _BRANCH_ = 2;
20809  +    END;
20810  +    IF _BRANCH_ GT 0 THEN DO;
20811  +       _ARB_F_ + 0.0376555997;
20812  +      END;
20813  +    END;
20814  +  END;
20815  +
20816  +********** LEAF    13  NODE   276 ***************;
20817  +IF _ARB_BADF_ EQ 0 THEN DO;
20818  +
20819  +  _BRANCH_ = -1;
20820  +    IF  NOT MISSING(Tenure ) AND
20821  +    Tenure  <                  1.5 THEN DO;
20822  +     _BRANCH_ =    1;
20823  +    END;
20824  +
20825  +  IF _BRANCH_ GT 0 THEN DO;
20826  +     _ARB_F_ + -0.054989083;
20827  +    END;
20828  +  END;
20829  +
20830  +********** LEAF    14  NODE   278 ***************;
20831  +IF _ARB_BADF_ EQ 0 THEN DO;
20832  +
20833  +  _BRANCH_ = -1;
20834  +    IF  NOT MISSING(Tenure ) AND
20835  +                     1.5 <= Tenure  THEN DO;
20836  +     _BRANCH_ =    2;
20837  +    END;
20838  +  IF _BRANCH_ LT 0 THEN DO;
20839  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
20840  +  END;
20841  +  IF _BRANCH_ GT 0 THEN DO;
20842  +
20843  +    _BRANCH_ = -1;
20844  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
20845  +     %DMNORMIP( _ARBFMT_18);
20846  +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ) THEN DO;
20847  +       _BRANCH_ =    1;
20848  +      END;
20849  +    IF _BRANCH_ LT 0 THEN DO;
20850  +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
20851  +      ELSE IF _ARBFMT_18 NOTIN (
20852  +        'LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'MOBILE' ,'FASHION' ,
20853  +        'MOBILE PHONE'
20854  +         ) THEN _BRANCH_ = 1;
20855  +    END;
20856  +    IF _BRANCH_ GT 0 THEN DO;
20857  +       _ARB_F_ + 0.0430161806;
20858  +      END;
20859  +    END;
20860  +  END;
20861  +
20862  +********** LEAF    15  NODE   279 ***************;
20863  +IF _ARB_BADF_ EQ 0 THEN DO;
20864  +
20865  +  _BRANCH_ = -1;
20866  +    IF  NOT MISSING(Tenure ) AND
20867  +                     1.5 <= Tenure  THEN DO;
20868  +     _BRANCH_ =    2;
20869  +    END;
20870  +  IF _BRANCH_ LT 0 THEN DO;
20871  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
20872  +  END;
20873  +  IF _BRANCH_ GT 0 THEN DO;
20874  +
20875  +    _BRANCH_ = -1;
20876  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
20877  +     %DMNORMIP( _ARBFMT_18);
20878  +      IF _ARBFMT_18 IN ('MOBILE' ,'FASHION' ,'MOBILE PHONE' ) THEN DO;
20879  +       _BRANCH_ =    2;
20880  +      END;
20881  +
20882  +    IF _BRANCH_ GT 0 THEN DO;
20883  +       _ARB_F_ + 0.0063298996;
20884  +      END;
20885  +    END;
20886  +  END;
20887  +
20888  +********** LEAF    16  NODE   281 ***************;
20889  +IF _ARB_BADF_ EQ 0 THEN DO;
20890  +
20891  +  _BRANCH_ = -1;
20892  +    IF  NOT MISSING(Tenure ) AND
20893  +    Tenure  <                  1.5 THEN DO;
20894  +     _BRANCH_ =    1;
20895  +    END;
20896  +
20897  +  IF _BRANCH_ GT 0 THEN DO;
20898  +     _ARB_F_ + -0.046985403;
20899  +    END;
20900  +  END;
20901  +
20902  +********** LEAF    17  NODE   283 ***************;
20903  +IF _ARB_BADF_ EQ 0 THEN DO;
20904  +
20905  +  _BRANCH_ = -1;
20906  +    IF  NOT MISSING(Tenure ) AND
20907  +                     1.5 <= Tenure  THEN DO;
20908  +     _BRANCH_ =    2;
20909  +    END;
20910  +  IF _BRANCH_ LT 0 THEN DO;
20911  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
20912  +  END;
20913  +  IF _BRANCH_ GT 0 THEN DO;
20914  +
20915  +    _BRANCH_ = -1;
20916  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
20917  +     %DMNORMIP( _ARBFMT_18);
20918  +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'FASHION' )
20919  +       THEN DO;
20920  +       _BRANCH_ =    1;
20921  +      END;
20922  +    IF _BRANCH_ LT 0 THEN DO;
20923  +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
20924  +      ELSE IF _ARBFMT_18 NOTIN (
20925  +        'LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'FASHION' ,'MOBILE' ,
20926  +        'MOBILE PHONE'
20927  +         ) THEN _BRANCH_ = 1;
20928  +    END;
20929  +    IF _BRANCH_ GT 0 THEN DO;
20930  +       _ARB_F_ + 0.0355588451;
20931  +      END;
20932  +    END;
20933  +  END;
20934  +
20935  +********** LEAF    18  NODE   284 ***************;
20936  +IF _ARB_BADF_ EQ 0 THEN DO;
20937  +
20938  +  _BRANCH_ = -1;
20939  +    IF  NOT MISSING(Tenure ) AND
20940  +                     1.5 <= Tenure  THEN DO;
20941  +     _BRANCH_ =    2;
20942  +    END;
20943  +  IF _BRANCH_ LT 0 THEN DO;
20944  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
20945  +  END;
20946  +  IF _BRANCH_ GT 0 THEN DO;
20947  +
20948  +    _BRANCH_ = -1;
20949  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
20950  +     %DMNORMIP( _ARBFMT_18);
20951  +      IF _ARBFMT_18 IN ('MOBILE' ,'MOBILE PHONE' ) THEN DO;
20952  +       _BRANCH_ =    2;
20953  +      END;
20954  +
20955  +    IF _BRANCH_ GT 0 THEN DO;
20956  +       _ARB_F_ + -0.001678246;
20957  +      END;
20958  +    END;
20959  +  END;
20960  +
20961  +********** LEAF    19  NODE   286 ***************;
20962  +IF _ARB_BADF_ EQ 0 THEN DO;
20963  +
20964  +  _BRANCH_ = -1;
20965  +    IF  NOT MISSING(Tenure ) AND
20966  +    Tenure  <                  1.5 THEN DO;
20967  +     _BRANCH_ =    1;
20968  +    END;
20969  +
20970  +  IF _BRANCH_ GT 0 THEN DO;
20971  +     _ARB_F_ + -0.035192821;
20972  +    END;
20973  +  END;
20974  +
20975  +********** LEAF    20  NODE   288 ***************;
20976  +IF _ARB_BADF_ EQ 0 THEN DO;
20977  +
20978  +  _BRANCH_ = -1;
20979  +    IF  NOT MISSING(Tenure ) AND
20980  +                     1.5 <= Tenure  THEN DO;
20981  +     _BRANCH_ =    2;
20982  +    END;
20983  +  IF _BRANCH_ LT 0 THEN DO;
20984  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
20985  +  END;
20986  +  IF _BRANCH_ GT 0 THEN DO;
20987  +
20988  +    _BRANCH_ = -1;
20989  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
20990  +     %DMNORMIP( _ARBFMT_18);
20991  +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ) THEN DO;
20992  +       _BRANCH_ =    1;
20993  +      END;
20994  +    IF _BRANCH_ LT 0 THEN DO;
20995  +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
20996  +      ELSE IF _ARBFMT_18 NOTIN (
20997  +        'LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'MOBILE' ,'FASHION' ,
20998  +        'MOBILE PHONE'
20999  +         ) THEN _BRANCH_ = 1;
21000  +    END;
21001  +    IF _BRANCH_ GT 0 THEN DO;
21002  +       _ARB_F_ + 0.0404496109;
21003  +      END;
21004  +    END;
21005  +  END;
21006  +
21007  +********** LEAF    21  NODE   289 ***************;
21008  +IF _ARB_BADF_ EQ 0 THEN DO;
21009  +
21010  +  _BRANCH_ = -1;
21011  +    IF  NOT MISSING(Tenure ) AND
21012  +                     1.5 <= Tenure  THEN DO;
21013  +     _BRANCH_ =    2;
21014  +    END;
21015  +  IF _BRANCH_ LT 0 THEN DO;
21016  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
21017  +  END;
21018  +  IF _BRANCH_ GT 0 THEN DO;
21019  +
21020  +    _BRANCH_ = -1;
21021  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
21022  +     %DMNORMIP( _ARBFMT_18);
21023  +      IF _ARBFMT_18 IN ('MOBILE' ,'FASHION' ,'MOBILE PHONE' ) THEN DO;
21024  +       _BRANCH_ =    2;
21025  +      END;
21026  +
21027  +    IF _BRANCH_ GT 0 THEN DO;
21028  +       _ARB_F_ + 0.0018539455;
21029  +      END;
21030  +    END;
21031  +  END;
21032  +
21033  +********** LEAF    22  NODE   291 ***************;
21034  +IF _ARB_BADF_ EQ 0 THEN DO;
21035  +
21036  +  _BRANCH_ = -1;
21037  +    IF  NOT MISSING(Tenure ) AND
21038  +    Tenure  <                  1.5 THEN DO;
21039  +     _BRANCH_ =    1;
21040  +    END;
21041  +
21042  +  IF _BRANCH_ GT 0 THEN DO;
21043  +     _ARB_F_ + -0.035257824;
21044  +    END;
21045  +  END;
21046  +
21047  +********** LEAF    23  NODE   293 ***************;
21048  +IF _ARB_BADF_ EQ 0 THEN DO;
21049  +
21050  +  _BRANCH_ = -1;
21051  +    IF  NOT MISSING(Tenure ) AND
21052  +                     1.5 <= Tenure  THEN DO;
21053  +     _BRANCH_ =    2;
21054  +    END;
21055  +  IF _BRANCH_ LT 0 THEN DO;
21056  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
21057  +  END;
21058  +  IF _BRANCH_ GT 0 THEN DO;
21059  +
21060  +    _BRANCH_ = -1;
21061  +      IF  NOT MISSING(Tenure ) AND
21062  +      Tenure  <                 10.5 THEN DO;
21063  +       _BRANCH_ =    1;
21064  +      END;
21065  +
21066  +    IF _BRANCH_ GT 0 THEN DO;
21067  +       _ARB_F_ + 0.0051009536;
21068  +      END;
21069  +    END;
21070  +  END;
21071  +
21072  +********** LEAF    24  NODE   294 ***************;
21073  +IF _ARB_BADF_ EQ 0 THEN DO;
21074  +
21075  +  _BRANCH_ = -1;
21076  +    IF  NOT MISSING(Tenure ) AND
21077  +                     1.5 <= Tenure  THEN DO;
21078  +     _BRANCH_ =    2;
21079  +    END;
21080  +  IF _BRANCH_ LT 0 THEN DO;
21081  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
21082  +  END;
21083  +  IF _BRANCH_ GT 0 THEN DO;
21084  +
21085  +    _BRANCH_ = -1;
21086  +      IF  NOT MISSING(Tenure ) AND
21087  +                      10.5 <= Tenure  THEN DO;
21088  +       _BRANCH_ =    2;
21089  +      END;
21090  +    IF _BRANCH_ LT 0 THEN DO;
21091  +       IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
21092  +    END;
21093  +    IF _BRANCH_ GT 0 THEN DO;
21094  +       _ARB_F_ + 0.0350603616;
21095  +      END;
21096  +    END;
21097  +  END;
21098  +
21099  +********** LEAF    25  NODE   296 ***************;
21100  +IF _ARB_BADF_ EQ 0 THEN DO;
21101  +
21102  +  _BRANCH_ = -1;
21103  +    IF  NOT MISSING(Tenure ) AND
21104  +    Tenure  <                  1.5 THEN DO;
21105  +     _BRANCH_ =    1;
21106  +    END;
21107  +
21108  +  IF _BRANCH_ GT 0 THEN DO;
21109  +     _ARB_F_ + -0.028895511;
21110  +    END;
21111  +  END;
21112  +
21113  +********** LEAF    26  NODE   298 ***************;
21114  +IF _ARB_BADF_ EQ 0 THEN DO;
21115  +
21116  +  _BRANCH_ = -1;
21117  +    IF  NOT MISSING(Tenure ) AND
21118  +                     1.5 <= Tenure  THEN DO;
21119  +     _BRANCH_ =    2;
21120  +    END;
21121  +  IF _BRANCH_ LT 0 THEN DO;
21122  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
21123  +  END;
21124  +  IF _BRANCH_ GT 0 THEN DO;
21125  +
21126  +    _BRANCH_ = -1;
21127  +    _ARBFMT_5 = PUT( Complain , $5.);
21128  +     %DMNORMIP( _ARBFMT_5);
21129  +      IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
21130  +       _BRANCH_ =    1;
21131  +      END;
21132  +
21133  +    IF _BRANCH_ GT 0 THEN DO;
21134  +       _ARB_F_ + -0.008298032;
21135  +      END;
21136  +    END;
21137  +  END;
21138  +
21139  +********** LEAF    27  NODE   299 ***************;
21140  +IF _ARB_BADF_ EQ 0 THEN DO;
21141  +
21142  +  _BRANCH_ = -1;
21143  +    IF  NOT MISSING(Tenure ) AND
21144  +                     1.5 <= Tenure  THEN DO;
21145  +     _BRANCH_ =    2;
21146  +    END;
21147  +  IF _BRANCH_ LT 0 THEN DO;
21148  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
21149  +  END;
21150  +  IF _BRANCH_ GT 0 THEN DO;
21151  +
21152  +    _BRANCH_ = -1;
21153  +    _ARBFMT_5 = PUT( Complain , $5.);
21154  +     %DMNORMIP( _ARBFMT_5);
21155  +      IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
21156  +       _BRANCH_ =    2;
21157  +      END;
21158  +    IF _BRANCH_ LT 0 THEN DO;
21159  +       IF MISSING( Complain  ) THEN _BRANCH_ = 2;
21160  +      ELSE IF _ARBFMT_5 NOTIN (
21161  +        'TRUE' ,'FALSE'
21162  +         ) THEN _BRANCH_ = 2;
21163  +    END;
21164  +    IF _BRANCH_ GT 0 THEN DO;
21165  +       _ARB_F_ + 0.0313118102;
21166  +      END;
21167  +    END;
21168  +  END;
21169  +
21170  +********** LEAF    28  NODE   301 ***************;
21171  +IF _ARB_BADF_ EQ 0 THEN DO;
21172  +
21173  +  _BRANCH_ = -1;
21174  +    IF  NOT MISSING(Tenure ) AND
21175  +    Tenure  <                  1.5 THEN DO;
21176  +     _BRANCH_ =    1;
21177  +    END;
21178  +
21179  +  IF _BRANCH_ GT 0 THEN DO;
21180  +     _ARB_F_ + -0.027862184;
21181  +    END;
21182  +  END;
21183  +
21184  +********** LEAF    29  NODE   303 ***************;
21185  +IF _ARB_BADF_ EQ 0 THEN DO;
21186  +
21187  +  _BRANCH_ = -1;
21188  +    IF  NOT MISSING(Tenure ) AND
21189  +                     1.5 <= Tenure  THEN DO;
21190  +     _BRANCH_ =    2;
21191  +    END;
21192  +  IF _BRANCH_ LT 0 THEN DO;
21193  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
21194  +  END;
21195  +  IF _BRANCH_ GT 0 THEN DO;
21196  +
21197  +    _BRANCH_ = -1;
21198  +    _ARBFMT_5 = PUT( Complain , $5.);
21199  +     %DMNORMIP( _ARBFMT_5);
21200  +      IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
21201  +       _BRANCH_ =    1;
21202  +      END;
21203  +
21204  +    IF _BRANCH_ GT 0 THEN DO;
21205  +       _ARB_F_ + -0.001567694;
21206  +      END;
21207  +    END;
21208  +  END;
21209  +
21210  +********** LEAF    30  NODE   304 ***************;
21211  +IF _ARB_BADF_ EQ 0 THEN DO;
21212  +
21213  +  _BRANCH_ = -1;
21214  +    IF  NOT MISSING(Tenure ) AND
21215  +                     1.5 <= Tenure  THEN DO;
21216  +     _BRANCH_ =    2;
21217  +    END;
21218  +  IF _BRANCH_ LT 0 THEN DO;
21219  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
21220  +  END;
21221  +  IF _BRANCH_ GT 0 THEN DO;
21222  +
21223  +    _BRANCH_ = -1;
21224  +    _ARBFMT_5 = PUT( Complain , $5.);
21225  +     %DMNORMIP( _ARBFMT_5);
21226  +      IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
21227  +       _BRANCH_ =    2;
21228  +      END;
21229  +    IF _BRANCH_ LT 0 THEN DO;
21230  +       IF MISSING( Complain  ) THEN _BRANCH_ = 2;
21231  +      ELSE IF _ARBFMT_5 NOTIN (
21232  +        'TRUE' ,'FALSE'
21233  +         ) THEN _BRANCH_ = 2;
21234  +    END;
21235  +    IF _BRANCH_ GT 0 THEN DO;
21236  +       _ARB_F_ + 0.0315789523;
21237  +      END;
21238  +    END;
21239  +  END;
21240  +
21241  +********** LEAF    31  NODE   306 ***************;
21242  +IF _ARB_BADF_ EQ 0 THEN DO;
21243  +
21244  +  _BRANCH_ = -1;
21245  +  _ARBFMT_5 = PUT( Complain , $5.);
21246  +   %DMNORMIP( _ARBFMT_5);
21247  +    IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
21248  +     _BRANCH_ =    1;
21249  +    END;
21250  +
21251  +  IF _BRANCH_ GT 0 THEN DO;
21252  +     _ARB_F_ + -0.029209977;
21253  +    END;
21254  +  END;
21255  +
21256  +********** LEAF    32  NODE   308 ***************;
21257  +IF _ARB_BADF_ EQ 0 THEN DO;
21258  +
21259  +  _BRANCH_ = -1;
21260  +  _ARBFMT_5 = PUT( Complain , $5.);
21261  +   %DMNORMIP( _ARBFMT_5);
21262  +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
21263  +     _BRANCH_ =    2;
21264  +    END;
21265  +  IF _BRANCH_ LT 0 THEN DO;
21266  +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
21267  +    ELSE IF _ARBFMT_5 NOTIN (
21268  +      'TRUE' ,'FALSE'
21269  +       ) THEN _BRANCH_ = 2;
21270  +  END;
21271  +  IF _BRANCH_ GT 0 THEN DO;
21272  +
21273  +    _BRANCH_ = -1;
21274  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
21275  +     %DMNORMIP( _ARBFMT_18);
21276  +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'MOBILE' )
21277  +       THEN DO;
21278  +       _BRANCH_ =    1;
21279  +      END;
21280  +    IF _BRANCH_ LT 0 THEN DO;
21281  +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
21282  +      ELSE IF _ARBFMT_18 NOTIN (
21283  +        'LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'MOBILE' ,'FASHION' ,
21284  +        'MOBILE PHONE'
21285  +         ) THEN _BRANCH_ = 1;
21286  +    END;
21287  +    IF _BRANCH_ GT 0 THEN DO;
21288  +       _ARB_F_ + 0.0273800928;
21289  +      END;
21290  +    END;
21291  +  END;
21292  +
21293  +********** LEAF    33  NODE   309 ***************;
21294  +IF _ARB_BADF_ EQ 0 THEN DO;
21295  +
21296  +  _BRANCH_ = -1;
21297  +  _ARBFMT_5 = PUT( Complain , $5.);
21298  +   %DMNORMIP( _ARBFMT_5);
21299  +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
21300  +     _BRANCH_ =    2;
21301  +    END;
21302  +  IF _BRANCH_ LT 0 THEN DO;
21303  +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
21304  +    ELSE IF _ARBFMT_5 NOTIN (
21305  +      'TRUE' ,'FALSE'
21306  +       ) THEN _BRANCH_ = 2;
21307  +  END;
21308  +  IF _BRANCH_ GT 0 THEN DO;
21309  +
21310  +    _BRANCH_ = -1;
21311  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
21312  +     %DMNORMIP( _ARBFMT_18);
21313  +      IF _ARBFMT_18 IN ('FASHION' ,'MOBILE PHONE' ) THEN DO;
21314  +       _BRANCH_ =    2;
21315  +      END;
21316  +
21317  +    IF _BRANCH_ GT 0 THEN DO;
21318  +       _ARB_F_ + 0.0010330507;
21319  +      END;
21320  +    END;
21321  +  END;
21322  +
21323  +********** LEAF    34  NODE   311 ***************;
21324  +IF _ARB_BADF_ EQ 0 THEN DO;
21325  +
21326  +  _BRANCH_ = -1;
21327  +  _ARBFMT_5 = PUT( Complain , $5.);
21328  +   %DMNORMIP( _ARBFMT_5);
21329  +    IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
21330  +     _BRANCH_ =    1;
21331  +    END;
21332  +
21333  +  IF _BRANCH_ GT 0 THEN DO;
21334  +     _ARB_F_ + -0.027367146;
21335  +    END;
21336  +  END;
21337  +
21338  +********** LEAF    35  NODE   313 ***************;
21339  +IF _ARB_BADF_ EQ 0 THEN DO;
21340  +
21341  +  _BRANCH_ = -1;
21342  +  _ARBFMT_5 = PUT( Complain , $5.);
21343  +   %DMNORMIP( _ARBFMT_5);
21344  +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
21345  +     _BRANCH_ =    2;
21346  +    END;
21347  +  IF _BRANCH_ LT 0 THEN DO;
21348  +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
21349  +    ELSE IF _ARBFMT_5 NOTIN (
21350  +      'TRUE' ,'FALSE'
21351  +       ) THEN _BRANCH_ = 2;
21352  +  END;
21353  +  IF _BRANCH_ GT 0 THEN DO;
21354  +
21355  +    _BRANCH_ = -1;
21356  +    _ARBFMT_8 = PUT( MaritalStatus , $8.);
21357  +     %DMNORMIP( _ARBFMT_8);
21358  +      IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
21359  +       _BRANCH_ =    1;
21360  +      END;
21361  +
21362  +    IF _BRANCH_ GT 0 THEN DO;
21363  +       _ARB_F_ + 0.0021333367;
21364  +      END;
21365  +    END;
21366  +  END;
21367  +
21368  +********** LEAF    36  NODE   314 ***************;
21369  +IF _ARB_BADF_ EQ 0 THEN DO;
21370  +
21371  +  _BRANCH_ = -1;
21372  +  _ARBFMT_5 = PUT( Complain , $5.);
21373  +   %DMNORMIP( _ARBFMT_5);
21374  +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
21375  +     _BRANCH_ =    2;
21376  +    END;
21377  +  IF _BRANCH_ LT 0 THEN DO;
21378  +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
21379  +    ELSE IF _ARBFMT_5 NOTIN (
21380  +      'TRUE' ,'FALSE'
21381  +       ) THEN _BRANCH_ = 2;
21382  +  END;
21383  +  IF _BRANCH_ GT 0 THEN DO;
21384  +
21385  +    _BRANCH_ = -1;
21386  +    _ARBFMT_8 = PUT( MaritalStatus , $8.);
21387  +     %DMNORMIP( _ARBFMT_8);
21388  +      IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
21389  +       _BRANCH_ =    2;
21390  +      END;
21391  +    IF _BRANCH_ LT 0 THEN DO;
21392  +       IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
21393  +      ELSE IF _ARBFMT_8 NOTIN (
21394  +        'SINGLE' ,'DIVORCED' ,'MARRIED'
21395  +         ) THEN _BRANCH_ = 2;
21396  +    END;
21397  +    IF _BRANCH_ GT 0 THEN DO;
21398  +       _ARB_F_ + 0.0271560176;
21399  +      END;
21400  +    END;
21401  +  END;
21402  +
21403  +********** LEAF    37  NODE   316 ***************;
21404  +IF _ARB_BADF_ EQ 0 THEN DO;
21405  +
21406  +  _BRANCH_ = -1;
21407  +    IF  NOT MISSING(Tenure ) AND
21408  +    Tenure  <                  1.5 THEN DO;
21409  +     _BRANCH_ =    1;
21410  +    END;
21411  +
21412  +  IF _BRANCH_ GT 0 THEN DO;
21413  +     _ARB_F_ + -0.025910249;
21414  +    END;
21415  +  END;
21416  +
21417  +********** LEAF    38  NODE   318 ***************;
21418  +IF _ARB_BADF_ EQ 0 THEN DO;
21419  +
21420  +  _BRANCH_ = -1;
21421  +    IF  NOT MISSING(Tenure ) AND
21422  +                     1.5 <= Tenure  THEN DO;
21423  +     _BRANCH_ =    2;
21424  +    END;
21425  +  IF _BRANCH_ LT 0 THEN DO;
21426  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
21427  +  END;
21428  +  IF _BRANCH_ GT 0 THEN DO;
21429  +
21430  +    _BRANCH_ = -1;
21431  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
21432  +     %DMNORMIP( _ARBFMT_18);
21433  +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'GROCERY' ) THEN DO;
21434  +       _BRANCH_ =    1;
21435  +      END;
21436  +
21437  +    IF _BRANCH_ GT 0 THEN DO;
21438  +       _ARB_F_ + 0.0372510055;
21439  +      END;
21440  +    END;
21441  +  END;
21442  +
21443  +********** LEAF    39  NODE   319 ***************;
21444  +IF _ARB_BADF_ EQ 0 THEN DO;
21445  +
21446  +  _BRANCH_ = -1;
21447  +    IF  NOT MISSING(Tenure ) AND
21448  +                     1.5 <= Tenure  THEN DO;
21449  +     _BRANCH_ =    2;
21450  +    END;
21451  +  IF _BRANCH_ LT 0 THEN DO;
21452  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
21453  +  END;
21454  +  IF _BRANCH_ GT 0 THEN DO;
21455  +
21456  +    _BRANCH_ = -1;
21457  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
21458  +     %DMNORMIP( _ARBFMT_18);
21459  +      IF _ARBFMT_18 IN ('OTHERS' ,'MOBILE' ,'FASHION' ,'MOBILE PHONE' ) THEN
21460  +        DO;
21461  +       _BRANCH_ =    2;
21462  +      END;
21463  +    IF _BRANCH_ LT 0 THEN DO;
21464  +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 2;
21465  +      ELSE IF _ARBFMT_18 NOTIN (
21466  +        'LAPTOP & ACCESSORY' ,'GROCERY' ,'OTHERS' ,'MOBILE' ,'FASHION' ,
21467  +        'MOBILE PHONE'
21468  +         ) THEN _BRANCH_ = 2;
21469  +    END;
21470  +    IF _BRANCH_ GT 0 THEN DO;
21471  +       _ARB_F_ + 0.0018877495;
21472  +      END;
21473  +    END;
21474  +  END;
21475  +
21476  +********** LEAF    40  NODE   321 ***************;
21477  +IF _ARB_BADF_ EQ 0 THEN DO;
21478  +
21479  +  _BRANCH_ = -1;
21480  +    IF  NOT MISSING(DaySinceLastOrder ) AND
21481  +    DaySinceLastOrder  <                  1.5 THEN DO;
21482  +     _BRANCH_ =    1;
21483  +    END;
21484  +
21485  +  IF _BRANCH_ GT 0 THEN DO;
21486  +     _ARB_F_ + -0.041148669;
21487  +    END;
21488  +  END;
21489  +
21490  +********** LEAF    41  NODE   323 ***************;
21491  +IF _ARB_BADF_ EQ 0 THEN DO;
21492  +
21493  +  _BRANCH_ = -1;
21494  +    IF  NOT MISSING(DaySinceLastOrder ) AND
21495  +                     1.5 <= DaySinceLastOrder  THEN DO;
21496  +     _BRANCH_ =    2;
21497  +    END;
21498  +  IF _BRANCH_ LT 0 THEN DO;
21499  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
21500  +  END;
21501  +  IF _BRANCH_ GT 0 THEN DO;
21502  +
21503  +    _BRANCH_ = -1;
21504  +    _ARBFMT_5 = PUT( Complain , $5.);
21505  +     %DMNORMIP( _ARBFMT_5);
21506  +      IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
21507  +       _BRANCH_ =    1;
21508  +      END;
21509  +
21510  +    IF _BRANCH_ GT 0 THEN DO;
21511  +       _ARB_F_ + -0.006297966;
21512  +      END;
21513  +    END;
21514  +  END;
21515  +
21516  +********** LEAF    42  NODE   324 ***************;
21517  +IF _ARB_BADF_ EQ 0 THEN DO;
21518  +
21519  +  _BRANCH_ = -1;
21520  +    IF  NOT MISSING(DaySinceLastOrder ) AND
21521  +                     1.5 <= DaySinceLastOrder  THEN DO;
21522  +     _BRANCH_ =    2;
21523  +    END;
21524  +  IF _BRANCH_ LT 0 THEN DO;
21525  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
21526  +  END;
21527  +  IF _BRANCH_ GT 0 THEN DO;
21528  +
21529  +    _BRANCH_ = -1;
21530  +    _ARBFMT_5 = PUT( Complain , $5.);
21531  +     %DMNORMIP( _ARBFMT_5);
21532  +      IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
21533  +       _BRANCH_ =    2;
21534  +      END;
21535  +    IF _BRANCH_ LT 0 THEN DO;
21536  +       IF MISSING( Complain  ) THEN _BRANCH_ = 2;
21537  +      ELSE IF _ARBFMT_5 NOTIN (
21538  +        'TRUE' ,'FALSE'
21539  +         ) THEN _BRANCH_ = 2;
21540  +    END;
21541  +    IF _BRANCH_ GT 0 THEN DO;
21542  +       _ARB_F_ + 0.0228663349;
21543  +      END;
21544  +    END;
21545  +  END;
21546  +
21547  +********** LEAF    43  NODE   326 ***************;
21548  +IF _ARB_BADF_ EQ 0 THEN DO;
21549  +
21550  +  _BRANCH_ = -1;
21551  +  _ARBFMT_5 = PUT( Complain , $5.);
21552  +   %DMNORMIP( _ARBFMT_5);
21553  +    IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
21554  +     _BRANCH_ =    1;
21555  +    END;
21556  +
21557  +  IF _BRANCH_ GT 0 THEN DO;
21558  +     _ARB_F_ + -0.023440408;
21559  +    END;
21560  +  END;
21561  +
21562  +********** LEAF    44  NODE   328 ***************;
21563  +IF _ARB_BADF_ EQ 0 THEN DO;
21564  +
21565  +  _BRANCH_ = -1;
21566  +  _ARBFMT_5 = PUT( Complain , $5.);
21567  +   %DMNORMIP( _ARBFMT_5);
21568  +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
21569  +     _BRANCH_ =    2;
21570  +    END;
21571  +  IF _BRANCH_ LT 0 THEN DO;
21572  +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
21573  +    ELSE IF _ARBFMT_5 NOTIN (
21574  +      'TRUE' ,'FALSE'
21575  +       ) THEN _BRANCH_ = 2;
21576  +  END;
21577  +  IF _BRANCH_ GT 0 THEN DO;
21578  +
21579  +    _BRANCH_ = -1;
21580  +      IF  NOT MISSING(SatisfactionScore ) AND
21581  +      SatisfactionScore  <                  3.5 THEN DO;
21582  +       _BRANCH_ =    1;
21583  +      END;
21584  +    IF _BRANCH_ LT 0 THEN DO;
21585  +       IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 1;
21586  +    END;
21587  +    IF _BRANCH_ GT 0 THEN DO;
21588  +       _ARB_F_ + 0.024591575;
21589  +      END;
21590  +    END;
21591  +  END;
21592  +
21593  +********** LEAF    45  NODE   329 ***************;
21594  +IF _ARB_BADF_ EQ 0 THEN DO;
21595  +
21596  +  _BRANCH_ = -1;
21597  +  _ARBFMT_5 = PUT( Complain , $5.);
21598  +   %DMNORMIP( _ARBFMT_5);
21599  +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
21600  +     _BRANCH_ =    2;
21601  +    END;
21602  +  IF _BRANCH_ LT 0 THEN DO;
21603  +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
21604  +    ELSE IF _ARBFMT_5 NOTIN (
21605  +      'TRUE' ,'FALSE'
21606  +       ) THEN _BRANCH_ = 2;
21607  +  END;
21608  +  IF _BRANCH_ GT 0 THEN DO;
21609  +
21610  +    _BRANCH_ = -1;
21611  +      IF  NOT MISSING(SatisfactionScore ) AND
21612  +                       3.5 <= SatisfactionScore  THEN DO;
21613  +       _BRANCH_ =    2;
21614  +      END;
21615  +
21616  +    IF _BRANCH_ GT 0 THEN DO;
21617  +       _ARB_F_ + 0.0009216638;
21618  +      END;
21619  +    END;
21620  +  END;
21621  +
21622  +********** LEAF    46  NODE   331 ***************;
21623  +IF _ARB_BADF_ EQ 0 THEN DO;
21624  +
21625  +  _BRANCH_ = -1;
21626  +    IF  NOT MISSING(Tenure ) AND
21627  +    Tenure  <                  1.5 THEN DO;
21628  +     _BRANCH_ =    1;
21629  +    END;
21630  +
21631  +  IF _BRANCH_ GT 0 THEN DO;
21632  +     _ARB_F_ + -0.0206697;
21633  +    END;
21634  +  END;
21635  +
21636  +********** LEAF    47  NODE   333 ***************;
21637  +IF _ARB_BADF_ EQ 0 THEN DO;
21638  +
21639  +  _BRANCH_ = -1;
21640  +    IF  NOT MISSING(Tenure ) AND
21641  +                     1.5 <= Tenure  THEN DO;
21642  +     _BRANCH_ =    2;
21643  +    END;
21644  +  IF _BRANCH_ LT 0 THEN DO;
21645  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
21646  +  END;
21647  +  IF _BRANCH_ GT 0 THEN DO;
21648  +
21649  +    _BRANCH_ = -1;
21650  +      IF  NOT MISSING(Tenure ) AND
21651  +      Tenure  <                 10.5 THEN DO;
21652  +       _BRANCH_ =    1;
21653  +      END;
21654  +
21655  +    IF _BRANCH_ GT 0 THEN DO;
21656  +       _ARB_F_ + 0.0011058994;
21657  +      END;
21658  +    END;
21659  +  END;
21660  +
21661  +********** LEAF    48  NODE   334 ***************;
21662  +IF _ARB_BADF_ EQ 0 THEN DO;
21663  +
21664  +  _BRANCH_ = -1;
21665  +    IF  NOT MISSING(Tenure ) AND
21666  +                     1.5 <= Tenure  THEN DO;
21667  +     _BRANCH_ =    2;
21668  +    END;
21669  +  IF _BRANCH_ LT 0 THEN DO;
21670  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
21671  +  END;
21672  +  IF _BRANCH_ GT 0 THEN DO;
21673  +
21674  +    _BRANCH_ = -1;
21675  +      IF  NOT MISSING(Tenure ) AND
21676  +                      10.5 <= Tenure  THEN DO;
21677  +       _BRANCH_ =    2;
21678  +      END;
21679  +    IF _BRANCH_ LT 0 THEN DO;
21680  +       IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
21681  +    END;
21682  +    IF _BRANCH_ GT 0 THEN DO;
21683  +       _ARB_F_ + 0.0290837413;
21684  +      END;
21685  +    END;
21686  +  END;
21687  +
21688  +********** LEAF    49  NODE   336 ***************;
21689  +IF _ARB_BADF_ EQ 0 THEN DO;
21690  +
21691  +  _BRANCH_ = -1;
21692  +    IF  NOT MISSING(DaySinceLastOrder ) AND
21693  +    DaySinceLastOrder  <                  1.5 THEN DO;
21694  +     _BRANCH_ =    1;
21695  +    END;
21696  +
21697  +  IF _BRANCH_ GT 0 THEN DO;
21698  +     _ARB_F_ + -0.035083113;
21699  +    END;
21700  +  END;
21701  +
21702  +********** LEAF    50  NODE   338 ***************;
21703  +IF _ARB_BADF_ EQ 0 THEN DO;
21704  +
21705  +  _BRANCH_ = -1;
21706  +    IF  NOT MISSING(DaySinceLastOrder ) AND
21707  +                     1.5 <= DaySinceLastOrder  THEN DO;
21708  +     _BRANCH_ =    2;
21709  +    END;
21710  +  IF _BRANCH_ LT 0 THEN DO;
21711  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
21712  +  END;
21713  +  IF _BRANCH_ GT 0 THEN DO;
21714  +
21715  +    _BRANCH_ = -1;
21716  +      IF  NOT MISSING(CityTier ) AND
21717  +      CityTier  <                  1.5 THEN DO;
21718  +       _BRANCH_ =    1;
21719  +      END;
21720  +    IF _BRANCH_ LT 0 THEN DO;
21721  +       IF MISSING( CityTier  ) THEN _BRANCH_ = 1;
21722  +    END;
21723  +    IF _BRANCH_ GT 0 THEN DO;
21724  +       _ARB_F_ + 0.0221900493;
21725  +      END;
21726  +    END;
21727  +  END;
21728  +
21729  +********** LEAF    51  NODE   339 ***************;
21730  +IF _ARB_BADF_ EQ 0 THEN DO;
21731  +
21732  +  _BRANCH_ = -1;
21733  +    IF  NOT MISSING(DaySinceLastOrder ) AND
21734  +                     1.5 <= DaySinceLastOrder  THEN DO;
21735  +     _BRANCH_ =    2;
21736  +    END;
21737  +  IF _BRANCH_ LT 0 THEN DO;
21738  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
21739  +  END;
21740  +  IF _BRANCH_ GT 0 THEN DO;
21741  +
21742  +    _BRANCH_ = -1;
21743  +      IF  NOT MISSING(CityTier ) AND
21744  +                       1.5 <= CityTier  THEN DO;
21745  +       _BRANCH_ =    2;
21746  +      END;
21747  +
21748  +    IF _BRANCH_ GT 0 THEN DO;
21749  +       _ARB_F_ + -0.006773125;
21750  +      END;
21751  +    END;
21752  +  END;
21753  +
21754  +********** LEAF    52  NODE   341 ***************;
21755  +IF _ARB_BADF_ EQ 0 THEN DO;
21756  +
21757  +  _BRANCH_ = -1;
21758  +    IF  NOT MISSING(DaySinceLastOrder ) AND
21759  +    DaySinceLastOrder  <                  1.5 THEN DO;
21760  +     _BRANCH_ =    1;
21761  +    END;
21762  +
21763  +  IF _BRANCH_ GT 0 THEN DO;
21764  +     _ARB_F_ + -0.03018128;
21765  +    END;
21766  +  END;
21767  +
21768  +********** LEAF    53  NODE   343 ***************;
21769  +IF _ARB_BADF_ EQ 0 THEN DO;
21770  +
21771  +  _BRANCH_ = -1;
21772  +    IF  NOT MISSING(DaySinceLastOrder ) AND
21773  +                     1.5 <= DaySinceLastOrder  THEN DO;
21774  +     _BRANCH_ =    2;
21775  +    END;
21776  +  IF _BRANCH_ LT 0 THEN DO;
21777  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
21778  +  END;
21779  +  IF _BRANCH_ GT 0 THEN DO;
21780  +
21781  +    _BRANCH_ = -1;
21782  +      IF  NOT MISSING(OrderCount ) AND
21783  +      OrderCount  <                  4.5 THEN DO;
21784  +       _BRANCH_ =    1;
21785  +      END;
21786  +    IF _BRANCH_ LT 0 THEN DO;
21787  +       IF MISSING( OrderCount  ) THEN _BRANCH_ = 1;
21788  +    END;
21789  +    IF _BRANCH_ GT 0 THEN DO;
21790  +       _ARB_F_ + 0.0168412859;
21791  +      END;
21792  +    END;
21793  +  END;
21794  +
21795  +********** LEAF    54  NODE   344 ***************;
21796  +IF _ARB_BADF_ EQ 0 THEN DO;
21797  +
21798  +  _BRANCH_ = -1;
21799  +    IF  NOT MISSING(DaySinceLastOrder ) AND
21800  +                     1.5 <= DaySinceLastOrder  THEN DO;
21801  +     _BRANCH_ =    2;
21802  +    END;
21803  +  IF _BRANCH_ LT 0 THEN DO;
21804  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
21805  +  END;
21806  +  IF _BRANCH_ GT 0 THEN DO;
21807  +
21808  +    _BRANCH_ = -1;
21809  +      IF  NOT MISSING(OrderCount ) AND
21810  +                       4.5 <= OrderCount  THEN DO;
21811  +       _BRANCH_ =    2;
21812  +      END;
21813  +
21814  +    IF _BRANCH_ GT 0 THEN DO;
21815  +       _ARB_F_ + -0.013665539;
21816  +      END;
21817  +    END;
21818  +  END;
21819  +
21820  +********** LEAF    55  NODE   346 ***************;
21821  +IF _ARB_BADF_ EQ 0 THEN DO;
21822  +
21823  +  _BRANCH_ = -1;
21824  +    IF  NOT MISSING(Tenure ) AND
21825  +    Tenure  <                  1.5 THEN DO;
21826  +     _BRANCH_ =    1;
21827  +    END;
21828  +
21829  +  IF _BRANCH_ GT 0 THEN DO;
21830  +     _ARB_F_ + -0.018971908;
21831  +    END;
21832  +  END;
21833  +
21834  +********** LEAF    56  NODE   348 ***************;
21835  +IF _ARB_BADF_ EQ 0 THEN DO;
21836  +
21837  +  _BRANCH_ = -1;
21838  +    IF  NOT MISSING(Tenure ) AND
21839  +                     1.5 <= Tenure  THEN DO;
21840  +     _BRANCH_ =    2;
21841  +    END;
21842  +  IF _BRANCH_ LT 0 THEN DO;
21843  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
21844  +  END;
21845  +  IF _BRANCH_ GT 0 THEN DO;
21846  +
21847  +    _BRANCH_ = -1;
21848  +      IF  NOT MISSING(Tenure ) AND
21849  +      Tenure  <                 10.5 THEN DO;
21850  +       _BRANCH_ =    1;
21851  +      END;
21852  +
21853  +    IF _BRANCH_ GT 0 THEN DO;
21854  +       _ARB_F_ + -0.00044053;
21855  +      END;
21856  +    END;
21857  +  END;
21858  +
21859  +********** LEAF    57  NODE   349 ***************;
21860  +IF _ARB_BADF_ EQ 0 THEN DO;
21861  +
21862  +  _BRANCH_ = -1;
21863  +    IF  NOT MISSING(Tenure ) AND
21864  +                     1.5 <= Tenure  THEN DO;
21865  +     _BRANCH_ =    2;
21866  +    END;
21867  +  IF _BRANCH_ LT 0 THEN DO;
21868  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
21869  +  END;
21870  +  IF _BRANCH_ GT 0 THEN DO;
21871  +
21872  +    _BRANCH_ = -1;
21873  +      IF  NOT MISSING(Tenure ) AND
21874  +                      10.5 <= Tenure  THEN DO;
21875  +       _BRANCH_ =    2;
21876  +      END;
21877  +    IF _BRANCH_ LT 0 THEN DO;
21878  +       IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
21879  +    END;
21880  +    IF _BRANCH_ GT 0 THEN DO;
21881  +       _ARB_F_ + 0.0304028252;
21882  +      END;
21883  +    END;
21884  +  END;
21885  +
21886  +********** LEAF    58  NODE   351 ***************;
21887  +IF _ARB_BADF_ EQ 0 THEN DO;
21888  +
21889  +  _BRANCH_ = -1;
21890  +  _ARBFMT_5 = PUT( Complain , $5.);
21891  +   %DMNORMIP( _ARBFMT_5);
21892  +    IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
21893  +     _BRANCH_ =    1;
21894  +    END;
21895  +
21896  +  IF _BRANCH_ GT 0 THEN DO;
21897  +     _ARB_F_ + -0.022696341;
21898  +    END;
21899  +  END;
21900  +
21901  +********** LEAF    59  NODE   353 ***************;
21902  +IF _ARB_BADF_ EQ 0 THEN DO;
21903  +
21904  +  _BRANCH_ = -1;
21905  +  _ARBFMT_5 = PUT( Complain , $5.);
21906  +   %DMNORMIP( _ARBFMT_5);
21907  +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
21908  +     _BRANCH_ =    2;
21909  +    END;
21910  +  IF _BRANCH_ LT 0 THEN DO;
21911  +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
21912  +    ELSE IF _ARBFMT_5 NOTIN (
21913  +      'TRUE' ,'FALSE'
21914  +       ) THEN _BRANCH_ = 2;
21915  +  END;
21916  +  IF _BRANCH_ GT 0 THEN DO;
21917  +
21918  +    _BRANCH_ = -1;
21919  +      IF  NOT MISSING(SatisfactionScore ) AND
21920  +      SatisfactionScore  <                  3.5 THEN DO;
21921  +       _BRANCH_ =    1;
21922  +      END;
21923  +    IF _BRANCH_ LT 0 THEN DO;
21924  +       IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 1;
21925  +    END;
21926  +    IF _BRANCH_ GT 0 THEN DO;
21927  +       _ARB_F_ + 0.0280259689;
21928  +      END;
21929  +    END;
21930  +  END;
21931  +
21932  +********** LEAF    60  NODE   354 ***************;
21933  +IF _ARB_BADF_ EQ 0 THEN DO;
21934  +
21935  +  _BRANCH_ = -1;
21936  +  _ARBFMT_5 = PUT( Complain , $5.);
21937  +   %DMNORMIP( _ARBFMT_5);
21938  +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
21939  +     _BRANCH_ =    2;
21940  +    END;
21941  +  IF _BRANCH_ LT 0 THEN DO;
21942  +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
21943  +    ELSE IF _ARBFMT_5 NOTIN (
21944  +      'TRUE' ,'FALSE'
21945  +       ) THEN _BRANCH_ = 2;
21946  +  END;
21947  +  IF _BRANCH_ GT 0 THEN DO;
21948  +
21949  +    _BRANCH_ = -1;
21950  +      IF  NOT MISSING(SatisfactionScore ) AND
21951  +                       3.5 <= SatisfactionScore  THEN DO;
21952  +       _BRANCH_ =    2;
21953  +      END;
21954  +
21955  +    IF _BRANCH_ GT 0 THEN DO;
21956  +       _ARB_F_ + -0.000068033;
21957  +      END;
21958  +    END;
21959  +  END;
21960  +
21961  +********** LEAF    61  NODE   356 ***************;
21962  +IF _ARB_BADF_ EQ 0 THEN DO;
21963  +
21964  +  _BRANCH_ = -1;
21965  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
21966  +   %DMNORMIP( _ARBFMT_8);
21967  +    IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
21968  +     _BRANCH_ =    1;
21969  +    END;
21970  +
21971  +  IF _BRANCH_ GT 0 THEN DO;
21972  +     _ARB_F_ + -0.023472204;
21973  +    END;
21974  +  END;
21975  +
21976  +********** LEAF    62  NODE   358 ***************;
21977  +IF _ARB_BADF_ EQ 0 THEN DO;
21978  +
21979  +  _BRANCH_ = -1;
21980  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
21981  +   %DMNORMIP( _ARBFMT_8);
21982  +    IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
21983  +     _BRANCH_ =    2;
21984  +    END;
21985  +  IF _BRANCH_ LT 0 THEN DO;
21986  +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
21987  +    ELSE IF _ARBFMT_8 NOTIN (
21988  +      'SINGLE' ,'DIVORCED' ,'MARRIED'
21989  +       ) THEN _BRANCH_ = 2;
21990  +  END;
21991  +  IF _BRANCH_ GT 0 THEN DO;
21992  +
21993  +    _BRANCH_ = -1;
21994  +      IF  NOT MISSING(CityTier ) AND
21995  +      CityTier  <                  1.5 THEN DO;
21996  +       _BRANCH_ =    1;
21997  +      END;
21998  +    IF _BRANCH_ LT 0 THEN DO;
21999  +       IF MISSING( CityTier  ) THEN _BRANCH_ = 1;
22000  +    END;
22001  +    IF _BRANCH_ GT 0 THEN DO;
22002  +       _ARB_F_ + 0.0209645381;
22003  +      END;
22004  +    END;
22005  +  END;
22006  +
22007  +********** LEAF    63  NODE   359 ***************;
22008  +IF _ARB_BADF_ EQ 0 THEN DO;
22009  +
22010  +  _BRANCH_ = -1;
22011  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
22012  +   %DMNORMIP( _ARBFMT_8);
22013  +    IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
22014  +     _BRANCH_ =    2;
22015  +    END;
22016  +  IF _BRANCH_ LT 0 THEN DO;
22017  +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
22018  +    ELSE IF _ARBFMT_8 NOTIN (
22019  +      'SINGLE' ,'DIVORCED' ,'MARRIED'
22020  +       ) THEN _BRANCH_ = 2;
22021  +  END;
22022  +  IF _BRANCH_ GT 0 THEN DO;
22023  +
22024  +    _BRANCH_ = -1;
22025  +      IF  NOT MISSING(CityTier ) AND
22026  +                       1.5 <= CityTier  THEN DO;
22027  +       _BRANCH_ =    2;
22028  +      END;
22029  +
22030  +    IF _BRANCH_ GT 0 THEN DO;
22031  +       _ARB_F_ + -0.000201284;
22032  +      END;
22033  +    END;
22034  +  END;
22035  +
22036  +********** LEAF    64  NODE   361 ***************;
22037  +IF _ARB_BADF_ EQ 0 THEN DO;
22038  +
22039  +  _BRANCH_ = -1;
22040  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
22041  +   %DMNORMIP( _ARBFMT_8);
22042  +    IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
22043  +     _BRANCH_ =    1;
22044  +    END;
22045  +
22046  +  IF _BRANCH_ GT 0 THEN DO;
22047  +     _ARB_F_ + -0.021740242;
22048  +    END;
22049  +  END;
22050  +
22051  +********** LEAF    65  NODE   363 ***************;
22052  +IF _ARB_BADF_ EQ 0 THEN DO;
22053  +
22054  +  _BRANCH_ = -1;
22055  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
22056  +   %DMNORMIP( _ARBFMT_8);
22057  +    IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
22058  +     _BRANCH_ =    2;
22059  +    END;
22060  +  IF _BRANCH_ LT 0 THEN DO;
22061  +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
22062  +    ELSE IF _ARBFMT_8 NOTIN (
22063  +      'SINGLE' ,'DIVORCED' ,'MARRIED'
22064  +       ) THEN _BRANCH_ = 2;
22065  +  END;
22066  +  IF _BRANCH_ GT 0 THEN DO;
22067  +
22068  +    _BRANCH_ = -1;
22069  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
22070  +     %DMNORMIP( _ARBFMT_18);
22071  +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'GROCERY' ) THEN DO;
22072  +       _BRANCH_ =    1;
22073  +      END;
22074  +
22075  +    IF _BRANCH_ GT 0 THEN DO;
22076  +       _ARB_F_ + 0.0348929239;
22077  +      END;
22078  +    END;
22079  +  END;
22080  +
22081  +********** LEAF    66  NODE   364 ***************;
22082  +IF _ARB_BADF_ EQ 0 THEN DO;
22083  +
22084  +  _BRANCH_ = -1;
22085  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
22086  +   %DMNORMIP( _ARBFMT_8);
22087  +    IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
22088  +     _BRANCH_ =    2;
22089  +    END;
22090  +  IF _BRANCH_ LT 0 THEN DO;
22091  +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
22092  +    ELSE IF _ARBFMT_8 NOTIN (
22093  +      'SINGLE' ,'DIVORCED' ,'MARRIED'
22094  +       ) THEN _BRANCH_ = 2;
22095  +  END;
22096  +  IF _BRANCH_ GT 0 THEN DO;
22097  +
22098  +    _BRANCH_ = -1;
22099  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
22100  +     %DMNORMIP( _ARBFMT_18);
22101  +      IF _ARBFMT_18 IN ('OTHERS' ,'MOBILE' ,'FASHION' ,'MOBILE PHONE' ) THEN
22102  +        DO;
22103  +       _BRANCH_ =    2;
22104  +      END;
22105  +    IF _BRANCH_ LT 0 THEN DO;
22106  +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 2;
22107  +      ELSE IF _ARBFMT_18 NOTIN (
22108  +        'LAPTOP & ACCESSORY' ,'GROCERY' ,'OTHERS' ,'MOBILE' ,'FASHION' ,
22109  +        'MOBILE PHONE'
22110  +         ) THEN _BRANCH_ = 2;
22111  +    END;
22112  +    IF _BRANCH_ GT 0 THEN DO;
22113  +       _ARB_F_ + -0.000228607;
22114  +      END;
22115  +    END;
22116  +  END;
22117  +
22118  +********** LEAF    67  NODE   366 ***************;
22119  +IF _ARB_BADF_ EQ 0 THEN DO;
22120  +
22121  +  _BRANCH_ = -1;
22122  +    IF  NOT MISSING(Tenure ) AND
22123  +    Tenure  <                  1.5 THEN DO;
22124  +     _BRANCH_ =    1;
22125  +    END;
22126  +
22127  +  IF _BRANCH_ GT 0 THEN DO;
22128  +     _ARB_F_ + -0.015080443;
22129  +    END;
22130  +  END;
22131  +
22132  +********** LEAF    68  NODE   368 ***************;
22133  +IF _ARB_BADF_ EQ 0 THEN DO;
22134  +
22135  +  _BRANCH_ = -1;
22136  +    IF  NOT MISSING(Tenure ) AND
22137  +                     1.5 <= Tenure  THEN DO;
22138  +     _BRANCH_ =    2;
22139  +    END;
22140  +  IF _BRANCH_ LT 0 THEN DO;
22141  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
22142  +  END;
22143  +  IF _BRANCH_ GT 0 THEN DO;
22144  +
22145  +    _BRANCH_ = -1;
22146  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
22147  +     %DMNORMIP( _ARBFMT_18);
22148  +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'GROCERY' ,'MOBILE PHONE' )
22149  +        THEN DO;
22150  +       _BRANCH_ =    1;
22151  +      END;
22152  +    IF _BRANCH_ LT 0 THEN DO;
22153  +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
22154  +      ELSE IF _ARBFMT_18 NOTIN (
22155  +        'LAPTOP & ACCESSORY' ,'GROCERY' ,'MOBILE PHONE' ,'OTHERS' ,'MOBILE' ,
22156  +        'FASHION'
22157  +         ) THEN _BRANCH_ = 1;
22158  +    END;
22159  +    IF _BRANCH_ GT 0 THEN DO;
22160  +       _ARB_F_ + 0.0264069199;
22161  +      END;
22162  +    END;
22163  +  END;
22164  +
22165  +********** LEAF    69  NODE   369 ***************;
22166  +IF _ARB_BADF_ EQ 0 THEN DO;
22167  +
22168  +  _BRANCH_ = -1;
22169  +    IF  NOT MISSING(Tenure ) AND
22170  +                     1.5 <= Tenure  THEN DO;
22171  +     _BRANCH_ =    2;
22172  +    END;
22173  +  IF _BRANCH_ LT 0 THEN DO;
22174  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
22175  +  END;
22176  +  IF _BRANCH_ GT 0 THEN DO;
22177  +
22178  +    _BRANCH_ = -1;
22179  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
22180  +     %DMNORMIP( _ARBFMT_18);
22181  +      IF _ARBFMT_18 IN ('OTHERS' ,'MOBILE' ,'FASHION' ) THEN DO;
22182  +       _BRANCH_ =    2;
22183  +      END;
22184  +
22185  +    IF _BRANCH_ GT 0 THEN DO;
22186  +       _ARB_F_ + -0.008861148;
22187  +      END;
22188  +    END;
22189  +  END;
22190  +
22191  +********** LEAF    70  NODE   371 ***************;
22192  +IF _ARB_BADF_ EQ 0 THEN DO;
22193  +
22194  +  _BRANCH_ = -1;
22195  +    IF  NOT MISSING(DaySinceLastOrder ) AND
22196  +    DaySinceLastOrder  <                  1.5 THEN DO;
22197  +     _BRANCH_ =    1;
22198  +    END;
22199  +
22200  +  IF _BRANCH_ GT 0 THEN DO;
22201  +     _ARB_F_ + -0.031839982;
22202  +    END;
22203  +  END;
22204  +
22205  +********** LEAF    71  NODE   373 ***************;
22206  +IF _ARB_BADF_ EQ 0 THEN DO;
22207  +
22208  +  _BRANCH_ = -1;
22209  +    IF  NOT MISSING(DaySinceLastOrder ) AND
22210  +                     1.5 <= DaySinceLastOrder  THEN DO;
22211  +     _BRANCH_ =    2;
22212  +    END;
22213  +  IF _BRANCH_ LT 0 THEN DO;
22214  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
22215  +  END;
22216  +  IF _BRANCH_ GT 0 THEN DO;
22217  +
22218  +    _BRANCH_ = -1;
22219  +      IF  NOT MISSING(CityTier ) AND
22220  +      CityTier  <                  1.5 THEN DO;
22221  +       _BRANCH_ =    1;
22222  +      END;
22223  +    IF _BRANCH_ LT 0 THEN DO;
22224  +       IF MISSING( CityTier  ) THEN _BRANCH_ = 1;
22225  +    END;
22226  +    IF _BRANCH_ GT 0 THEN DO;
22227  +       _ARB_F_ + 0.0181646616;
22228  +      END;
22229  +    END;
22230  +  END;
22231  +
22232  +********** LEAF    72  NODE   374 ***************;
22233  +IF _ARB_BADF_ EQ 0 THEN DO;
22234  +
22235  +  _BRANCH_ = -1;
22236  +    IF  NOT MISSING(DaySinceLastOrder ) AND
22237  +                     1.5 <= DaySinceLastOrder  THEN DO;
22238  +     _BRANCH_ =    2;
22239  +    END;
22240  +  IF _BRANCH_ LT 0 THEN DO;
22241  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
22242  +  END;
22243  +  IF _BRANCH_ GT 0 THEN DO;
22244  +
22245  +    _BRANCH_ = -1;
22246  +      IF  NOT MISSING(CityTier ) AND
22247  +                       1.5 <= CityTier  THEN DO;
22248  +       _BRANCH_ =    2;
22249  +      END;
22250  +
22251  +    IF _BRANCH_ GT 0 THEN DO;
22252  +       _ARB_F_ + -0.007834701;
22253  +      END;
22254  +    END;
22255  +  END;
22256  +
22257  +********** LEAF    73  NODE   376 ***************;
22258  +IF _ARB_BADF_ EQ 0 THEN DO;
22259  +
22260  +  _BRANCH_ = -1;
22261  +    IF  NOT MISSING(Tenure ) AND
22262  +    Tenure  <                  1.5 THEN DO;
22263  +     _BRANCH_ =    1;
22264  +    END;
22265  +
22266  +  IF _BRANCH_ GT 0 THEN DO;
22267  +     _ARB_F_ + -0.014384958;
22268  +    END;
22269  +  END;
22270  +
22271  +********** LEAF    74  NODE   378 ***************;
22272  +IF _ARB_BADF_ EQ 0 THEN DO;
22273  +
22274  +  _BRANCH_ = -1;
22275  +    IF  NOT MISSING(Tenure ) AND
22276  +                     1.5 <= Tenure  THEN DO;
22277  +     _BRANCH_ =    2;
22278  +    END;
22279  +  IF _BRANCH_ LT 0 THEN DO;
22280  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
22281  +  END;
22282  +  IF _BRANCH_ GT 0 THEN DO;
22283  +
22284  +    _BRANCH_ = -1;
22285  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
22286  +     %DMNORMIP( _ARBFMT_18);
22287  +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'GROCERY' ,'FASHION' ) THEN DO;
22288  +       _BRANCH_ =    1;
22289  +      END;
22290  +    IF _BRANCH_ LT 0 THEN DO;
22291  +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
22292  +      ELSE IF _ARBFMT_18 NOTIN (
22293  +        'LAPTOP & ACCESSORY' ,'GROCERY' ,'FASHION' ,'OTHERS' ,'MOBILE' ,
22294  +        'MOBILE PHONE'
22295  +         ) THEN _BRANCH_ = 1;
22296  +    END;
22297  +    IF _BRANCH_ GT 0 THEN DO;
22298  +       _ARB_F_ + 0.0274398832;
22299  +      END;
22300  +    END;
22301  +  END;
22302  +
22303  +********** LEAF    75  NODE   379 ***************;
22304  +IF _ARB_BADF_ EQ 0 THEN DO;
22305  +
22306  +  _BRANCH_ = -1;
22307  +    IF  NOT MISSING(Tenure ) AND
22308  +                     1.5 <= Tenure  THEN DO;
22309  +     _BRANCH_ =    2;
22310  +    END;
22311  +  IF _BRANCH_ LT 0 THEN DO;
22312  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
22313  +  END;
22314  +  IF _BRANCH_ GT 0 THEN DO;
22315  +
22316  +    _BRANCH_ = -1;
22317  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
22318  +     %DMNORMIP( _ARBFMT_18);
22319  +      IF _ARBFMT_18 IN ('OTHERS' ,'MOBILE' ,'MOBILE PHONE' ) THEN DO;
22320  +       _BRANCH_ =    2;
22321  +      END;
22322  +
22323  +    IF _BRANCH_ GT 0 THEN DO;
22324  +       _ARB_F_ + -0.002830458;
22325  +      END;
22326  +    END;
22327  +  END;
22328  +
22329  +********** LEAF    76  NODE   381 ***************;
22330  +IF _ARB_BADF_ EQ 0 THEN DO;
22331  +
22332  +  _BRANCH_ = -1;
22333  +    IF  NOT MISSING(DaySinceLastOrder ) AND
22334  +    DaySinceLastOrder  <                  1.5 THEN DO;
22335  +     _BRANCH_ =    1;
22336  +    END;
22337  +
22338  +  IF _BRANCH_ GT 0 THEN DO;
22339  +     _ARB_F_ + -0.026371677;
22340  +    END;
22341  +  END;
22342  +
22343  +********** LEAF    77  NODE   383 ***************;
22344  +IF _ARB_BADF_ EQ 0 THEN DO;
22345  +
22346  +  _BRANCH_ = -1;
22347  +    IF  NOT MISSING(DaySinceLastOrder ) AND
22348  +                     1.5 <= DaySinceLastOrder  THEN DO;
22349  +     _BRANCH_ =    2;
22350  +    END;
22351  +  IF _BRANCH_ LT 0 THEN DO;
22352  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
22353  +  END;
22354  +  IF _BRANCH_ GT 0 THEN DO;
22355  +
22356  +    _BRANCH_ = -1;
22357  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
22358  +     %DMNORMIP( _ARBFMT_18);
22359  +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,
22360  +      'MOBILE PHONE' ) THEN DO;
22361  +       _BRANCH_ =    1;
22362  +      END;
22363  +    IF _BRANCH_ LT 0 THEN DO;
22364  +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
22365  +      ELSE IF _ARBFMT_18 NOTIN (
22366  +        'LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'MOBILE PHONE' ,'MOBILE' ,
22367  +        'FASHION'
22368  +         ) THEN _BRANCH_ = 1;
22369  +    END;
22370  +    IF _BRANCH_ GT 0 THEN DO;
22371  +       _ARB_F_ + 0.0193838304;
22372  +      END;
22373  +    END;
22374  +  END;
22375  +
22376  +********** LEAF    78  NODE   384 ***************;
22377  +IF _ARB_BADF_ EQ 0 THEN DO;
22378  +
22379  +  _BRANCH_ = -1;
22380  +    IF  NOT MISSING(DaySinceLastOrder ) AND
22381  +                     1.5 <= DaySinceLastOrder  THEN DO;
22382  +     _BRANCH_ =    2;
22383  +    END;
22384  +  IF _BRANCH_ LT 0 THEN DO;
22385  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
22386  +  END;
22387  +  IF _BRANCH_ GT 0 THEN DO;
22388  +
22389  +    _BRANCH_ = -1;
22390  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
22391  +     %DMNORMIP( _ARBFMT_18);
22392  +      IF _ARBFMT_18 IN ('MOBILE' ,'FASHION' ) THEN DO;
22393  +       _BRANCH_ =    2;
22394  +      END;
22395  +
22396  +    IF _BRANCH_ GT 0 THEN DO;
22397  +       _ARB_F_ + -0.010720235;
22398  +      END;
22399  +    END;
22400  +  END;
22401  +
22402  +********** LEAF    79  NODE   386 ***************;
22403  +IF _ARB_BADF_ EQ 0 THEN DO;
22404  +
22405  +  _BRANCH_ = -1;
22406  +  _ARBFMT_5 = PUT( Complain , $5.);
22407  +   %DMNORMIP( _ARBFMT_5);
22408  +    IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
22409  +     _BRANCH_ =    1;
22410  +    END;
22411  +
22412  +  IF _BRANCH_ GT 0 THEN DO;
22413  +     _ARB_F_ + -0.018720479;
22414  +    END;
22415  +  END;
22416  +
22417  +********** LEAF    80  NODE   388 ***************;
22418  +IF _ARB_BADF_ EQ 0 THEN DO;
22419  +
22420  +  _BRANCH_ = -1;
22421  +  _ARBFMT_5 = PUT( Complain , $5.);
22422  +   %DMNORMIP( _ARBFMT_5);
22423  +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
22424  +     _BRANCH_ =    2;
22425  +    END;
22426  +  IF _BRANCH_ LT 0 THEN DO;
22427  +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
22428  +    ELSE IF _ARBFMT_5 NOTIN (
22429  +      'TRUE' ,'FALSE'
22430  +       ) THEN _BRANCH_ = 2;
22431  +  END;
22432  +  IF _BRANCH_ GT 0 THEN DO;
22433  +
22434  +    _BRANCH_ = -1;
22435  +      IF  NOT MISSING(OrderAmountHikeFromlastYear ) AND
22436  +      OrderAmountHikeFromlastYear  <                 17.5 THEN DO;
22437  +       _BRANCH_ =    1;
22438  +      END;
22439  +    IF _BRANCH_ LT 0 THEN DO;
22440  +       IF MISSING( OrderAmountHikeFromlastYear  ) THEN _BRANCH_ = 1;
22441  +    END;
22442  +    IF _BRANCH_ GT 0 THEN DO;
22443  +       _ARB_F_ + 0.0054336542;
22444  +      END;
22445  +    END;
22446  +  END;
22447  +
22448  +********** LEAF    81  NODE   389 ***************;
22449  +IF _ARB_BADF_ EQ 0 THEN DO;
22450  +
22451  +  _BRANCH_ = -1;
22452  +  _ARBFMT_5 = PUT( Complain , $5.);
22453  +   %DMNORMIP( _ARBFMT_5);
22454  +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
22455  +     _BRANCH_ =    2;
22456  +    END;
22457  +  IF _BRANCH_ LT 0 THEN DO;
22458  +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
22459  +    ELSE IF _ARBFMT_5 NOTIN (
22460  +      'TRUE' ,'FALSE'
22461  +       ) THEN _BRANCH_ = 2;
22462  +  END;
22463  +  IF _BRANCH_ GT 0 THEN DO;
22464  +
22465  +    _BRANCH_ = -1;
22466  +      IF  NOT MISSING(OrderAmountHikeFromlastYear ) AND
22467  +                      17.5 <= OrderAmountHikeFromlastYear  THEN DO;
22468  +       _BRANCH_ =    2;
22469  +      END;
22470  +
22471  +    IF _BRANCH_ GT 0 THEN DO;
22472  +       _ARB_F_ + 0.0273346177;
22473  +      END;
22474  +    END;
22475  +  END;
22476  +
22477  +********** LEAF    82  NODE   391 ***************;
22478  +IF _ARB_BADF_ EQ 0 THEN DO;
22479  +
22480  +  _BRANCH_ = -1;
22481  +    IF  NOT MISSING(DaySinceLastOrder ) AND
22482  +    DaySinceLastOrder  <                  1.5 THEN DO;
22483  +     _BRANCH_ =    1;
22484  +    END;
22485  +
22486  +  IF _BRANCH_ GT 0 THEN DO;
22487  +     _ARB_F_ + -0.024608761;
22488  +    END;
22489  +  END;
22490  +
22491  +********** LEAF    83  NODE   393 ***************;
22492  +IF _ARB_BADF_ EQ 0 THEN DO;
22493  +
22494  +  _BRANCH_ = -1;
22495  +    IF  NOT MISSING(DaySinceLastOrder ) AND
22496  +                     1.5 <= DaySinceLastOrder  THEN DO;
22497  +     _BRANCH_ =    2;
22498  +    END;
22499  +  IF _BRANCH_ LT 0 THEN DO;
22500  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
22501  +  END;
22502  +  IF _BRANCH_ GT 0 THEN DO;
22503  +
22504  +    _BRANCH_ = -1;
22505  +      IF  NOT MISSING(SatisfactionScore ) AND
22506  +      SatisfactionScore  <                  2.5 THEN DO;
22507  +       _BRANCH_ =    1;
22508  +      END;
22509  +
22510  +    IF _BRANCH_ GT 0 THEN DO;
22511  +       _ARB_F_ + 0.0290495355;
22512  +      END;
22513  +    END;
22514  +  END;
22515  +
22516  +********** LEAF    84  NODE   394 ***************;
22517  +IF _ARB_BADF_ EQ 0 THEN DO;
22518  +
22519  +  _BRANCH_ = -1;
22520  +    IF  NOT MISSING(DaySinceLastOrder ) AND
22521  +                     1.5 <= DaySinceLastOrder  THEN DO;
22522  +     _BRANCH_ =    2;
22523  +    END;
22524  +  IF _BRANCH_ LT 0 THEN DO;
22525  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
22526  +  END;
22527  +  IF _BRANCH_ GT 0 THEN DO;
22528  +
22529  +    _BRANCH_ = -1;
22530  +      IF  NOT MISSING(SatisfactionScore ) AND
22531  +                       2.5 <= SatisfactionScore  THEN DO;
22532  +       _BRANCH_ =    2;
22533  +      END;
22534  +    IF _BRANCH_ LT 0 THEN DO;
22535  +       IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 2;
22536  +    END;
22537  +    IF _BRANCH_ GT 0 THEN DO;
22538  +       _ARB_F_ + 0.0008732502;
22539  +      END;
22540  +    END;
22541  +  END;
22542  +
22543  +********** LEAF    85  NODE   396 ***************;
22544  +IF _ARB_BADF_ EQ 0 THEN DO;
22545  +
22546  +  _BRANCH_ = -1;
22547  +  _ARBFMT_5 = PUT( Complain , $5.);
22548  +   %DMNORMIP( _ARBFMT_5);
22549  +    IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
22550  +     _BRANCH_ =    1;
22551  +    END;
22552  +
22553  +  IF _BRANCH_ GT 0 THEN DO;
22554  +     _ARB_F_ + -0.021108687;
22555  +    END;
22556  +  END;
22557  +
22558  +********** LEAF    86  NODE   398 ***************;
22559  +IF _ARB_BADF_ EQ 0 THEN DO;
22560  +
22561  +  _BRANCH_ = -1;
22562  +  _ARBFMT_5 = PUT( Complain , $5.);
22563  +   %DMNORMIP( _ARBFMT_5);
22564  +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
22565  +     _BRANCH_ =    2;
22566  +    END;
22567  +  IF _BRANCH_ LT 0 THEN DO;
22568  +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
22569  +    ELSE IF _ARBFMT_5 NOTIN (
22570  +      'TRUE' ,'FALSE'
22571  +       ) THEN _BRANCH_ = 2;
22572  +  END;
22573  +  IF _BRANCH_ GT 0 THEN DO;
22574  +
22575  +    _BRANCH_ = -1;
22576  +      IF  NOT MISSING(OrderAmountHikeFromlastYear ) AND
22577  +      OrderAmountHikeFromlastYear  <                 17.5 THEN DO;
22578  +       _BRANCH_ =    1;
22579  +      END;
22580  +    IF _BRANCH_ LT 0 THEN DO;
22581  +       IF MISSING( OrderAmountHikeFromlastYear  ) THEN _BRANCH_ = 1;
22582  +    END;
22583  +    IF _BRANCH_ GT 0 THEN DO;
22584  +       _ARB_F_ + 0.008182188;
22585  +      END;
22586  +    END;
22587  +  END;
22588  +
22589  +********** LEAF    87  NODE   399 ***************;
22590  +IF _ARB_BADF_ EQ 0 THEN DO;
22591  +
22592  +  _BRANCH_ = -1;
22593  +  _ARBFMT_5 = PUT( Complain , $5.);
22594  +   %DMNORMIP( _ARBFMT_5);
22595  +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
22596  +     _BRANCH_ =    2;
22597  +    END;
22598  +  IF _BRANCH_ LT 0 THEN DO;
22599  +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
22600  +    ELSE IF _ARBFMT_5 NOTIN (
22601  +      'TRUE' ,'FALSE'
22602  +       ) THEN _BRANCH_ = 2;
22603  +  END;
22604  +  IF _BRANCH_ GT 0 THEN DO;
22605  +
22606  +    _BRANCH_ = -1;
22607  +      IF  NOT MISSING(OrderAmountHikeFromlastYear ) AND
22608  +                      17.5 <= OrderAmountHikeFromlastYear  THEN DO;
22609  +       _BRANCH_ =    2;
22610  +      END;
22611  +
22612  +    IF _BRANCH_ GT 0 THEN DO;
22613  +       _ARB_F_ + 0.0282090133;
22614  +      END;
22615  +    END;
22616  +  END;
22617  +
22618  +********** LEAF    88  NODE   401 ***************;
22619  +IF _ARB_BADF_ EQ 0 THEN DO;
22620  +
22621  +  _BRANCH_ = -1;
22622  +  _ARBFMT_5 = PUT( Complain , $5.);
22623  +   %DMNORMIP( _ARBFMT_5);
22624  +    IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
22625  +     _BRANCH_ =    1;
22626  +    END;
22627  +
22628  +  IF _BRANCH_ GT 0 THEN DO;
22629  +     _ARB_F_ + -0.014816433;
22630  +    END;
22631  +  END;
22632  +
22633  +********** LEAF    89  NODE   403 ***************;
22634  +IF _ARB_BADF_ EQ 0 THEN DO;
22635  +
22636  +  _BRANCH_ = -1;
22637  +  _ARBFMT_5 = PUT( Complain , $5.);
22638  +   %DMNORMIP( _ARBFMT_5);
22639  +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
22640  +     _BRANCH_ =    2;
22641  +    END;
22642  +  IF _BRANCH_ LT 0 THEN DO;
22643  +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
22644  +    ELSE IF _ARBFMT_5 NOTIN (
22645  +      'TRUE' ,'FALSE'
22646  +       ) THEN _BRANCH_ = 2;
22647  +  END;
22648  +  IF _BRANCH_ GT 0 THEN DO;
22649  +
22650  +    _BRANCH_ = -1;
22651  +    _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
22652  +     %DMNORMIP( _ARBFMT_11);
22653  +      IF _ARBFMT_11 IN ('DEBIT CARD' ,'COD' ,'E WALLET' ) THEN DO;
22654  +       _BRANCH_ =    1;
22655  +      END;
22656  +    IF _BRANCH_ LT 0 THEN DO;
22657  +       IF MISSING( PreferredPaymentMode  ) THEN _BRANCH_ = 1;
22658  +      ELSE IF _ARBFMT_11 NOTIN (
22659  +        'DEBIT CARD' ,'COD' ,'E WALLET' ,'CREDIT CARD' ,'UPI'
22660  +         ) THEN _BRANCH_ = 1;
22661  +    END;
22662  +    IF _BRANCH_ GT 0 THEN DO;
22663  +       _ARB_F_ + 0.0057510063;
22664  +      END;
22665  +    END;
22666  +  END;
22667  +
22668  +********** LEAF    90  NODE   404 ***************;
22669  +IF _ARB_BADF_ EQ 0 THEN DO;
22670  +
22671  +  _BRANCH_ = -1;
22672  +  _ARBFMT_5 = PUT( Complain , $5.);
22673  +   %DMNORMIP( _ARBFMT_5);
22674  +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
22675  +     _BRANCH_ =    2;
22676  +    END;
22677  +  IF _BRANCH_ LT 0 THEN DO;
22678  +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
22679  +    ELSE IF _ARBFMT_5 NOTIN (
22680  +      'TRUE' ,'FALSE'
22681  +       ) THEN _BRANCH_ = 2;
22682  +  END;
22683  +  IF _BRANCH_ GT 0 THEN DO;
22684  +
22685  +    _BRANCH_ = -1;
22686  +    _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
22687  +     %DMNORMIP( _ARBFMT_11);
22688  +      IF _ARBFMT_11 IN ('CREDIT CARD' ,'UPI' ) THEN DO;
22689  +       _BRANCH_ =    2;
22690  +      END;
22691  +
22692  +    IF _BRANCH_ GT 0 THEN DO;
22693  +       _ARB_F_ + 0.0232857574;
22694  +      END;
22695  +    END;
22696  +  END;
22697  +
22698  +********** LEAF    91  NODE   406 ***************;
22699  +IF _ARB_BADF_ EQ 0 THEN DO;
22700  +
22701  +  _BRANCH_ = -1;
22702  +    IF  NOT MISSING(Tenure ) AND
22703  +    Tenure  <                  1.5 THEN DO;
22704  +     _BRANCH_ =    1;
22705  +    END;
22706  +
22707  +  IF _BRANCH_ GT 0 THEN DO;
22708  +     _ARB_F_ + -0.016363383;
22709  +    END;
22710  +  END;
22711  +
22712  +********** LEAF    92  NODE   408 ***************;
22713  +IF _ARB_BADF_ EQ 0 THEN DO;
22714  +
22715  +  _BRANCH_ = -1;
22716  +    IF  NOT MISSING(Tenure ) AND
22717  +                     1.5 <= Tenure  THEN DO;
22718  +     _BRANCH_ =    2;
22719  +    END;
22720  +  IF _BRANCH_ LT 0 THEN DO;
22721  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
22722  +  END;
22723  +  IF _BRANCH_ GT 0 THEN DO;
22724  +
22725  +    _BRANCH_ = -1;
22726  +      IF  NOT MISSING(Tenure ) AND
22727  +      Tenure  <                 10.5 THEN DO;
22728  +       _BRANCH_ =    1;
22729  +      END;
22730  +
22731  +    IF _BRANCH_ GT 0 THEN DO;
22732  +       _ARB_F_ + -0.002039926;
22733  +      END;
22734  +    END;
22735  +  END;
22736  +
22737  +********** LEAF    93  NODE   409 ***************;
22738  +IF _ARB_BADF_ EQ 0 THEN DO;
22739  +
22740  +  _BRANCH_ = -1;
22741  +    IF  NOT MISSING(Tenure ) AND
22742  +                     1.5 <= Tenure  THEN DO;
22743  +     _BRANCH_ =    2;
22744  +    END;
22745  +  IF _BRANCH_ LT 0 THEN DO;
22746  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
22747  +  END;
22748  +  IF _BRANCH_ GT 0 THEN DO;
22749  +
22750  +    _BRANCH_ = -1;
22751  +      IF  NOT MISSING(Tenure ) AND
22752  +                      10.5 <= Tenure  THEN DO;
22753  +       _BRANCH_ =    2;
22754  +      END;
22755  +    IF _BRANCH_ LT 0 THEN DO;
22756  +       IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
22757  +    END;
22758  +    IF _BRANCH_ GT 0 THEN DO;
22759  +       _ARB_F_ + 0.0257158679;
22760  +      END;
22761  +    END;
22762  +  END;
22763  +
22764  +********** LEAF    94  NODE   411 ***************;
22765  +IF _ARB_BADF_ EQ 0 THEN DO;
22766  +
22767  +  _BRANCH_ = -1;
22768  +    IF  NOT MISSING(DaySinceLastOrder ) AND
22769  +    DaySinceLastOrder  <                  1.5 THEN DO;
22770  +     _BRANCH_ =    1;
22771  +    END;
22772  +
22773  +  IF _BRANCH_ GT 0 THEN DO;
22774  +     _ARB_F_ + -0.026152183;
22775  +    END;
22776  +  END;
22777  +
22778  +********** LEAF    95  NODE   413 ***************;
22779  +IF _ARB_BADF_ EQ 0 THEN DO;
22780  +
22781  +  _BRANCH_ = -1;
22782  +    IF  NOT MISSING(DaySinceLastOrder ) AND
22783  +                     1.5 <= DaySinceLastOrder  THEN DO;
22784  +     _BRANCH_ =    2;
22785  +    END;
22786  +  IF _BRANCH_ LT 0 THEN DO;
22787  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
22788  +  END;
22789  +  IF _BRANCH_ GT 0 THEN DO;
22790  +
22791  +    _BRANCH_ = -1;
22792  +      IF  NOT MISSING(OrderCount ) AND
22793  +      OrderCount  <                  2.5 THEN DO;
22794  +       _BRANCH_ =    1;
22795  +      END;
22796  +    IF _BRANCH_ LT 0 THEN DO;
22797  +       IF MISSING( OrderCount  ) THEN _BRANCH_ = 1;
22798  +    END;
22799  +    IF _BRANCH_ GT 0 THEN DO;
22800  +       _ARB_F_ + 0.0191042232;
22801  +      END;
22802  +    END;
22803  +  END;
22804  +
22805  +********** LEAF    96  NODE   414 ***************;
22806  +IF _ARB_BADF_ EQ 0 THEN DO;
22807  +
22808  +  _BRANCH_ = -1;
22809  +    IF  NOT MISSING(DaySinceLastOrder ) AND
22810  +                     1.5 <= DaySinceLastOrder  THEN DO;
22811  +     _BRANCH_ =    2;
22812  +    END;
22813  +  IF _BRANCH_ LT 0 THEN DO;
22814  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
22815  +  END;
22816  +  IF _BRANCH_ GT 0 THEN DO;
22817  +
22818  +    _BRANCH_ = -1;
22819  +      IF  NOT MISSING(OrderCount ) AND
22820  +                       2.5 <= OrderCount  THEN DO;
22821  +       _BRANCH_ =    2;
22822  +      END;
22823  +
22824  +    IF _BRANCH_ GT 0 THEN DO;
22825  +       _ARB_F_ + -0.008734689;
22826  +      END;
22827  +    END;
22828  +  END;
22829  +
22830  +********** LEAF    97  NODE   416 ***************;
22831  +IF _ARB_BADF_ EQ 0 THEN DO;
22832  +
22833  +  _BRANCH_ = -1;
22834  +  _ARBFMT_5 = PUT( Complain , $5.);
22835  +   %DMNORMIP( _ARBFMT_5);
22836  +    IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
22837  +     _BRANCH_ =    1;
22838  +    END;
22839  +
22840  +  IF _BRANCH_ GT 0 THEN DO;
22841  +     _ARB_F_ + -0.016196053;
22842  +    END;
22843  +  END;
22844  +
22845  +********** LEAF    98  NODE   418 ***************;
22846  +IF _ARB_BADF_ EQ 0 THEN DO;
22847  +
22848  +  _BRANCH_ = -1;
22849  +  _ARBFMT_5 = PUT( Complain , $5.);
22850  +   %DMNORMIP( _ARBFMT_5);
22851  +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
22852  +     _BRANCH_ =    2;
22853  +    END;
22854  +  IF _BRANCH_ LT 0 THEN DO;
22855  +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
22856  +    ELSE IF _ARBFMT_5 NOTIN (
22857  +      'TRUE' ,'FALSE'
22858  +       ) THEN _BRANCH_ = 2;
22859  +  END;
22860  +  IF _BRANCH_ GT 0 THEN DO;
22861  +
22862  +    _BRANCH_ = -1;
22863  +    _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
22864  +     %DMNORMIP( _ARBFMT_11);
22865  +      IF _ARBFMT_11 IN ('DEBIT CARD' ,'CREDIT CARD' ) THEN DO;
22866  +       _BRANCH_ =    1;
22867  +      END;
22868  +    IF _BRANCH_ LT 0 THEN DO;
22869  +       IF MISSING( PreferredPaymentMode  ) THEN _BRANCH_ = 1;
22870  +      ELSE IF _ARBFMT_11 NOTIN (
22871  +        'DEBIT CARD' ,'CREDIT CARD' ,'COD' ,'E WALLET' ,'UPI'
22872  +         ) THEN _BRANCH_ = 1;
22873  +    END;
22874  +    IF _BRANCH_ GT 0 THEN DO;
22875  +       _ARB_F_ + 0.0178480375;
22876  +      END;
22877  +    END;
22878  +  END;
22879  +
22880  +********** LEAF    99  NODE   419 ***************;
22881  +IF _ARB_BADF_ EQ 0 THEN DO;
22882  +
22883  +  _BRANCH_ = -1;
22884  +  _ARBFMT_5 = PUT( Complain , $5.);
22885  +   %DMNORMIP( _ARBFMT_5);
22886  +    IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
22887  +     _BRANCH_ =    2;
22888  +    END;
22889  +  IF _BRANCH_ LT 0 THEN DO;
22890  +     IF MISSING( Complain  ) THEN _BRANCH_ = 2;
22891  +    ELSE IF _ARBFMT_5 NOTIN (
22892  +      'TRUE' ,'FALSE'
22893  +       ) THEN _BRANCH_ = 2;
22894  +  END;
22895  +  IF _BRANCH_ GT 0 THEN DO;
22896  +
22897  +    _BRANCH_ = -1;
22898  +    _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
22899  +     %DMNORMIP( _ARBFMT_11);
22900  +      IF _ARBFMT_11 IN ('COD' ,'E WALLET' ,'UPI' ) THEN DO;
22901  +       _BRANCH_ =    2;
22902  +      END;
22903  +
22904  +    IF _BRANCH_ GT 0 THEN DO;
22905  +       _ARB_F_ + -0.010180676;
22906  +      END;
22907  +    END;
22908  +  END;
22909  +
22910  +********** LEAF   100  NODE   421 ***************;
22911  +IF _ARB_BADF_ EQ 0 THEN DO;
22912  +
22913  +  _BRANCH_ = -1;
22914  +    IF  NOT MISSING(Tenure ) AND
22915  +    Tenure  <                  1.5 THEN DO;
22916  +     _BRANCH_ =    1;
22917  +    END;
22918  +
22919  +  IF _BRANCH_ GT 0 THEN DO;
22920  +     _ARB_F_ + -0.015250441;
22921  +    END;
22922  +  END;
22923  +
22924  +********** LEAF   101  NODE   423 ***************;
22925  +IF _ARB_BADF_ EQ 0 THEN DO;
22926  +
22927  +  _BRANCH_ = -1;
22928  +    IF  NOT MISSING(Tenure ) AND
22929  +                     1.5 <= Tenure  THEN DO;
22930  +     _BRANCH_ =    2;
22931  +    END;
22932  +  IF _BRANCH_ LT 0 THEN DO;
22933  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
22934  +  END;
22935  +  IF _BRANCH_ GT 0 THEN DO;
22936  +
22937  +    _BRANCH_ = -1;
22938  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
22939  +     %DMNORMIP( _ARBFMT_18);
22940  +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ) THEN DO;
22941  +       _BRANCH_ =    1;
22942  +      END;
22943  +    IF _BRANCH_ LT 0 THEN DO;
22944  +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
22945  +      ELSE IF _ARBFMT_18 NOTIN (
22946  +        'LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'MOBILE' ,'FASHION' ,
22947  +        'MOBILE PHONE'
22948  +         ) THEN _BRANCH_ = 1;
22949  +    END;
22950  +    IF _BRANCH_ GT 0 THEN DO;
22951  +       _ARB_F_ + 0.0284979795;
22952  +      END;
22953  +    END;
22954  +  END;
22955  +
22956  +********** LEAF   102  NODE   424 ***************;
22957  +IF _ARB_BADF_ EQ 0 THEN DO;
22958  +
22959  +  _BRANCH_ = -1;
22960  +    IF  NOT MISSING(Tenure ) AND
22961  +                     1.5 <= Tenure  THEN DO;
22962  +     _BRANCH_ =    2;
22963  +    END;
22964  +  IF _BRANCH_ LT 0 THEN DO;
22965  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
22966  +  END;
22967  +  IF _BRANCH_ GT 0 THEN DO;
22968  +
22969  +    _BRANCH_ = -1;
22970  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
22971  +     %DMNORMIP( _ARBFMT_18);
22972  +      IF _ARBFMT_18 IN ('MOBILE' ,'FASHION' ,'MOBILE PHONE' ) THEN DO;
22973  +       _BRANCH_ =    2;
22974  +      END;
22975  +
22976  +    IF _BRANCH_ GT 0 THEN DO;
22977  +       _ARB_F_ + -0.000702883;
22978  +      END;
22979  +    END;
22980  +  END;
22981  +
22982  +********** LEAF   103  NODE   428 ***************;
22983  +IF _ARB_BADF_ EQ 0 THEN DO;
22984  +
22985  +  _BRANCH_ = -1;
22986  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
22987  +   %DMNORMIP( _ARBFMT_8);
22988  +    IF _ARBFMT_8 IN ('SINGLE' ,'DIVORCED' ) THEN DO;
22989  +     _BRANCH_ =    1;
22990  +    END;
22991  +
22992  +  IF _BRANCH_ GT 0 THEN DO;
22993  +
22994  +    _BRANCH_ = -1;
22995  +      IF  NOT MISSING(SatisfactionScore ) AND
22996  +      SatisfactionScore  <                  3.5 THEN DO;
22997  +       _BRANCH_ =    1;
22998  +      END;
22999  +    IF _BRANCH_ LT 0 THEN DO;
23000  +       IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 1;
23001  +    END;
23002  +    IF _BRANCH_ GT 0 THEN DO;
23003  +       _ARB_F_ + -0.001998326;
23004  +      END;
23005  +    END;
23006  +  END;
23007  +
23008  +********** LEAF   104  NODE   429 ***************;
23009  +IF _ARB_BADF_ EQ 0 THEN DO;
23010  +
23011  +  _BRANCH_ = -1;
23012  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
23013  +   %DMNORMIP( _ARBFMT_8);
23014  +    IF _ARBFMT_8 IN ('SINGLE' ,'DIVORCED' ) THEN DO;
23015  +     _BRANCH_ =    1;
23016  +    END;
23017  +
23018  +  IF _BRANCH_ GT 0 THEN DO;
23019  +
23020  +    _BRANCH_ = -1;
23021  +      IF  NOT MISSING(SatisfactionScore ) AND
23022  +                       3.5 <= SatisfactionScore  THEN DO;
23023  +       _BRANCH_ =    2;
23024  +      END;
23025  +
23026  +    IF _BRANCH_ GT 0 THEN DO;
23027  +       _ARB_F_ + -0.034887053;
23028  +      END;
23029  +    END;
23030  +  END;
23031  +
23032  +********** LEAF   105  NODE   430 ***************;
23033  +IF _ARB_BADF_ EQ 0 THEN DO;
23034  +
23035  +  _BRANCH_ = -1;
23036  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
23037  +   %DMNORMIP( _ARBFMT_8);
23038  +    IF _ARBFMT_8 IN ('MARRIED' ) THEN DO;
23039  +     _BRANCH_ =    2;
23040  +    END;
23041  +  IF _BRANCH_ LT 0 THEN DO;
23042  +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
23043  +    ELSE IF _ARBFMT_8 NOTIN (
23044  +      'SINGLE' ,'DIVORCED' ,'MARRIED'
23045  +       ) THEN _BRANCH_ = 2;
23046  +  END;
23047  +  IF _BRANCH_ GT 0 THEN DO;
23048  +
23049  +    _BRANCH_ = -1;
23050  +      IF  NOT MISSING(CityTier ) AND
23051  +      CityTier  <                  1.5 THEN DO;
23052  +       _BRANCH_ =    1;
23053  +      END;
23054  +    IF _BRANCH_ LT 0 THEN DO;
23055  +       IF MISSING( CityTier  ) THEN _BRANCH_ = 1;
23056  +    END;
23057  +    IF _BRANCH_ GT 0 THEN DO;
23058  +       _ARB_F_ + 0.0228956566;
23059  +      END;
23060  +    END;
23061  +  END;
23062  +
23063  +********** LEAF   106  NODE   431 ***************;
23064  +IF _ARB_BADF_ EQ 0 THEN DO;
23065  +
23066  +  _BRANCH_ = -1;
23067  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
23068  +   %DMNORMIP( _ARBFMT_8);
23069  +    IF _ARBFMT_8 IN ('MARRIED' ) THEN DO;
23070  +     _BRANCH_ =    2;
23071  +    END;
23072  +  IF _BRANCH_ LT 0 THEN DO;
23073  +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
23074  +    ELSE IF _ARBFMT_8 NOTIN (
23075  +      'SINGLE' ,'DIVORCED' ,'MARRIED'
23076  +       ) THEN _BRANCH_ = 2;
23077  +  END;
23078  +  IF _BRANCH_ GT 0 THEN DO;
23079  +
23080  +    _BRANCH_ = -1;
23081  +      IF  NOT MISSING(CityTier ) AND
23082  +                       1.5 <= CityTier  THEN DO;
23083  +       _BRANCH_ =    2;
23084  +      END;
23085  +
23086  +    IF _BRANCH_ GT 0 THEN DO;
23087  +       _ARB_F_ + -0.000593644;
23088  +      END;
23089  +    END;
23090  +  END;
23091  +
23092  +********** LEAF   107  NODE   433 ***************;
23093  +IF _ARB_BADF_ EQ 0 THEN DO;
23094  +
23095  +  _BRANCH_ = -1;
23096  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
23097  +   %DMNORMIP( _ARBFMT_8);
23098  +    IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
23099  +     _BRANCH_ =    1;
23100  +    END;
23101  +
23102  +  IF _BRANCH_ GT 0 THEN DO;
23103  +     _ARB_F_ + -0.019059571;
23104  +    END;
23105  +  END;
23106  +
23107  +********** LEAF   108  NODE   435 ***************;
23108  +IF _ARB_BADF_ EQ 0 THEN DO;
23109  +
23110  +  _BRANCH_ = -1;
23111  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
23112  +   %DMNORMIP( _ARBFMT_8);
23113  +    IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
23114  +     _BRANCH_ =    2;
23115  +    END;
23116  +  IF _BRANCH_ LT 0 THEN DO;
23117  +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
23118  +    ELSE IF _ARBFMT_8 NOTIN (
23119  +      'SINGLE' ,'DIVORCED' ,'MARRIED'
23120  +       ) THEN _BRANCH_ = 2;
23121  +  END;
23122  +  IF _BRANCH_ GT 0 THEN DO;
23123  +
23124  +    _BRANCH_ = -1;
23125  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
23126  +     %DMNORMIP( _ARBFMT_18);
23127  +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ) THEN DO;
23128  +       _BRANCH_ =    1;
23129  +      END;
23130  +    IF _BRANCH_ LT 0 THEN DO;
23131  +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
23132  +      ELSE IF _ARBFMT_18 NOTIN (
23133  +        'LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'MOBILE' ,'FASHION' ,
23134  +        'MOBILE PHONE'
23135  +         ) THEN _BRANCH_ = 1;
23136  +    END;
23137  +    IF _BRANCH_ GT 0 THEN DO;
23138  +       _ARB_F_ + 0.0271280369;
23139  +      END;
23140  +    END;
23141  +  END;
23142  +
23143  +********** LEAF   109  NODE   436 ***************;
23144  +IF _ARB_BADF_ EQ 0 THEN DO;
23145  +
23146  +  _BRANCH_ = -1;
23147  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
23148  +   %DMNORMIP( _ARBFMT_8);
23149  +    IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
23150  +     _BRANCH_ =    2;
23151  +    END;
23152  +  IF _BRANCH_ LT 0 THEN DO;
23153  +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
23154  +    ELSE IF _ARBFMT_8 NOTIN (
23155  +      'SINGLE' ,'DIVORCED' ,'MARRIED'
23156  +       ) THEN _BRANCH_ = 2;
23157  +  END;
23158  +  IF _BRANCH_ GT 0 THEN DO;
23159  +
23160  +    _BRANCH_ = -1;
23161  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
23162  +     %DMNORMIP( _ARBFMT_18);
23163  +      IF _ARBFMT_18 IN ('MOBILE' ,'FASHION' ,'MOBILE PHONE' ) THEN DO;
23164  +       _BRANCH_ =    2;
23165  +      END;
23166  +
23167  +    IF _BRANCH_ GT 0 THEN DO;
23168  +       _ARB_F_ + 0.0016075676;
23169  +      END;
23170  +    END;
23171  +  END;
23172  +
23173  +********** LEAF   110  NODE   438 ***************;
23174  +IF _ARB_BADF_ EQ 0 THEN DO;
23175  +
23176  +  _BRANCH_ = -1;
23177  +    IF  NOT MISSING(SatisfactionScore ) AND
23178  +    SatisfactionScore  <                  2.5 THEN DO;
23179  +     _BRANCH_ =    1;
23180  +    END;
23181  +
23182  +  IF _BRANCH_ GT 0 THEN DO;
23183  +     _ARB_F_ + 0.0197051634;
23184  +    END;
23185  +  END;
23186  +
23187  +********** LEAF   111  NODE   440 ***************;
23188  +IF _ARB_BADF_ EQ 0 THEN DO;
23189  +
23190  +  _BRANCH_ = -1;
23191  +    IF  NOT MISSING(SatisfactionScore ) AND
23192  +                     2.5 <= SatisfactionScore  THEN DO;
23193  +     _BRANCH_ =    2;
23194  +    END;
23195  +  IF _BRANCH_ LT 0 THEN DO;
23196  +     IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 2;
23197  +  END;
23198  +  IF _BRANCH_ GT 0 THEN DO;
23199  +
23200  +    _BRANCH_ = -1;
23201  +    _ARBFMT_5 = PUT( Complain , $5.);
23202  +     %DMNORMIP( _ARBFMT_5);
23203  +      IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
23204  +       _BRANCH_ =    1;
23205  +      END;
23206  +
23207  +    IF _BRANCH_ GT 0 THEN DO;
23208  +       _ARB_F_ + -0.028790746;
23209  +      END;
23210  +    END;
23211  +  END;
23212  +
23213  +********** LEAF   112  NODE   441 ***************;
23214  +IF _ARB_BADF_ EQ 0 THEN DO;
23215  +
23216  +  _BRANCH_ = -1;
23217  +    IF  NOT MISSING(SatisfactionScore ) AND
23218  +                     2.5 <= SatisfactionScore  THEN DO;
23219  +     _BRANCH_ =    2;
23220  +    END;
23221  +  IF _BRANCH_ LT 0 THEN DO;
23222  +     IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 2;
23223  +  END;
23224  +  IF _BRANCH_ GT 0 THEN DO;
23225  +
23226  +    _BRANCH_ = -1;
23227  +    _ARBFMT_5 = PUT( Complain , $5.);
23228  +     %DMNORMIP( _ARBFMT_5);
23229  +      IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
23230  +       _BRANCH_ =    2;
23231  +      END;
23232  +    IF _BRANCH_ LT 0 THEN DO;
23233  +       IF MISSING( Complain  ) THEN _BRANCH_ = 2;
23234  +      ELSE IF _ARBFMT_5 NOTIN (
23235  +        'TRUE' ,'FALSE'
23236  +         ) THEN _BRANCH_ = 2;
23237  +    END;
23238  +    IF _BRANCH_ GT 0 THEN DO;
23239  +       _ARB_F_ + 0.0037262248;
23240  +      END;
23241  +    END;
23242  +  END;
23243  +
23244  +********** LEAF   113  NODE   445 ***************;
23245  +IF _ARB_BADF_ EQ 0 THEN DO;
23246  +
23247  +  _BRANCH_ = -1;
23248  +  _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
23249  +   %DMNORMIP( _ARBFMT_11);
23250  +    IF _ARBFMT_11 IN ('DEBIT CARD' ,'CREDIT CARD' ,'UPI' ) THEN DO;
23251  +     _BRANCH_ =    1;
23252  +    END;
23253  +  IF _BRANCH_ LT 0 THEN DO;
23254  +     IF MISSING( PreferredPaymentMode  ) THEN _BRANCH_ = 1;
23255  +    ELSE IF _ARBFMT_11 NOTIN (
23256  +      'DEBIT CARD' ,'CREDIT CARD' ,'UPI' ,'COD' ,'E WALLET'
23257  +       ) THEN _BRANCH_ = 1;
23258  +  END;
23259  +  IF _BRANCH_ GT 0 THEN DO;
23260  +
23261  +    _BRANCH_ = -1;
23262  +      IF  NOT MISSING(OrderAmountHikeFromlastYear ) AND
23263  +      OrderAmountHikeFromlastYear  <                 13.5 THEN DO;
23264  +       _BRANCH_ =    1;
23265  +      END;
23266  +
23267  +    IF _BRANCH_ GT 0 THEN DO;
23268  +       _ARB_F_ + -0.012555966;
23269  +      END;
23270  +    END;
23271  +  END;
23272  +
23273  +********** LEAF   114  NODE   446 ***************;
23274  +IF _ARB_BADF_ EQ 0 THEN DO;
23275  +
23276  +  _BRANCH_ = -1;
23277  +  _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
23278  +   %DMNORMIP( _ARBFMT_11);
23279  +    IF _ARBFMT_11 IN ('DEBIT CARD' ,'CREDIT CARD' ,'UPI' ) THEN DO;
23280  +     _BRANCH_ =    1;
23281  +    END;
23282  +  IF _BRANCH_ LT 0 THEN DO;
23283  +     IF MISSING( PreferredPaymentMode  ) THEN _BRANCH_ = 1;
23284  +    ELSE IF _ARBFMT_11 NOTIN (
23285  +      'DEBIT CARD' ,'CREDIT CARD' ,'UPI' ,'COD' ,'E WALLET'
23286  +       ) THEN _BRANCH_ = 1;
23287  +  END;
23288  +  IF _BRANCH_ GT 0 THEN DO;
23289  +
23290  +    _BRANCH_ = -1;
23291  +      IF  NOT MISSING(OrderAmountHikeFromlastYear ) AND
23292  +                      13.5 <= OrderAmountHikeFromlastYear  THEN DO;
23293  +       _BRANCH_ =    2;
23294  +      END;
23295  +    IF _BRANCH_ LT 0 THEN DO;
23296  +       IF MISSING( OrderAmountHikeFromlastYear  ) THEN _BRANCH_ = 2;
23297  +    END;
23298  +    IF _BRANCH_ GT 0 THEN DO;
23299  +       _ARB_F_ + 0.0145117621;
23300  +      END;
23301  +    END;
23302  +  END;
23303  +
23304  +********** LEAF   115  NODE   444 ***************;
23305  +IF _ARB_BADF_ EQ 0 THEN DO;
23306  +
23307  +  _BRANCH_ = -1;
23308  +  _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
23309  +   %DMNORMIP( _ARBFMT_11);
23310  +    IF _ARBFMT_11 IN ('COD' ,'E WALLET' ) THEN DO;
23311  +     _BRANCH_ =    2;
23312  +    END;
23313  +
23314  +  IF _BRANCH_ GT 0 THEN DO;
23315  +     _ARB_F_ + -0.02764378;
23316  +    END;
23317  +  END;
23318  +
23319  +********** LEAF   116  NODE   448 ***************;
23320  +IF _ARB_BADF_ EQ 0 THEN DO;
23321  +
23322  +  _BRANCH_ = -1;
23323  +    IF  NOT MISSING(DaySinceLastOrder ) AND
23324  +    DaySinceLastOrder  <                  1.5 THEN DO;
23325  +     _BRANCH_ =    1;
23326  +    END;
23327  +
23328  +  IF _BRANCH_ GT 0 THEN DO;
23329  +     _ARB_F_ + -0.020808921;
23330  +    END;
23331  +  END;
23332  +
23333  +********** LEAF   117  NODE   450 ***************;
23334  +IF _ARB_BADF_ EQ 0 THEN DO;
23335  +
23336  +  _BRANCH_ = -1;
23337  +    IF  NOT MISSING(DaySinceLastOrder ) AND
23338  +                     1.5 <= DaySinceLastOrder  THEN DO;
23339  +     _BRANCH_ =    2;
23340  +    END;
23341  +  IF _BRANCH_ LT 0 THEN DO;
23342  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
23343  +  END;
23344  +  IF _BRANCH_ GT 0 THEN DO;
23345  +
23346  +    _BRANCH_ = -1;
23347  +      IF  NOT MISSING(CityTier ) AND
23348  +      CityTier  <                  2.5 THEN DO;
23349  +       _BRANCH_ =    1;
23350  +      END;
23351  +    IF _BRANCH_ LT 0 THEN DO;
23352  +       IF MISSING( CityTier  ) THEN _BRANCH_ = 1;
23353  +    END;
23354  +    IF _BRANCH_ GT 0 THEN DO;
23355  +       _ARB_F_ + 0.0172120108;
23356  +      END;
23357  +    END;
23358  +  END;
23359  +
23360  +********** LEAF   118  NODE   451 ***************;
23361  +IF _ARB_BADF_ EQ 0 THEN DO;
23362  +
23363  +  _BRANCH_ = -1;
23364  +    IF  NOT MISSING(DaySinceLastOrder ) AND
23365  +                     1.5 <= DaySinceLastOrder  THEN DO;
23366  +     _BRANCH_ =    2;
23367  +    END;
23368  +  IF _BRANCH_ LT 0 THEN DO;
23369  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
23370  +  END;
23371  +  IF _BRANCH_ GT 0 THEN DO;
23372  +
23373  +    _BRANCH_ = -1;
23374  +      IF  NOT MISSING(CityTier ) AND
23375  +                       2.5 <= CityTier  THEN DO;
23376  +       _BRANCH_ =    2;
23377  +      END;
23378  +
23379  +    IF _BRANCH_ GT 0 THEN DO;
23380  +       _ARB_F_ + -0.009487986;
23381  +      END;
23382  +    END;
23383  +  END;
23384  +
23385  +********** LEAF   119  NODE   453 ***************;
23386  +IF _ARB_BADF_ EQ 0 THEN DO;
23387  +
23388  +  _BRANCH_ = -1;
23389  +    IF  NOT MISSING(SatisfactionScore ) AND
23390  +    SatisfactionScore  <                  2.5 THEN DO;
23391  +     _BRANCH_ =    1;
23392  +    END;
23393  +
23394  +  IF _BRANCH_ GT 0 THEN DO;
23395  +     _ARB_F_ + 0.0206199968;
23396  +    END;
23397  +  END;
23398  +
23399  +********** LEAF   120  NODE   455 ***************;
23400  +IF _ARB_BADF_ EQ 0 THEN DO;
23401  +
23402  +  _BRANCH_ = -1;
23403  +    IF  NOT MISSING(SatisfactionScore ) AND
23404  +                     2.5 <= SatisfactionScore  THEN DO;
23405  +     _BRANCH_ =    2;
23406  +    END;
23407  +  IF _BRANCH_ LT 0 THEN DO;
23408  +     IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 2;
23409  +  END;
23410  +  IF _BRANCH_ GT 0 THEN DO;
23411  +
23412  +    _BRANCH_ = -1;
23413  +    _ARBFMT_5 = PUT( Complain , $5.);
23414  +     %DMNORMIP( _ARBFMT_5);
23415  +      IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
23416  +       _BRANCH_ =    1;
23417  +      END;
23418  +
23419  +    IF _BRANCH_ GT 0 THEN DO;
23420  +       _ARB_F_ + -0.02580774;
23421  +      END;
23422  +    END;
23423  +  END;
23424  +
23425  +********** LEAF   121  NODE   456 ***************;
23426  +IF _ARB_BADF_ EQ 0 THEN DO;
23427  +
23428  +  _BRANCH_ = -1;
23429  +    IF  NOT MISSING(SatisfactionScore ) AND
23430  +                     2.5 <= SatisfactionScore  THEN DO;
23431  +     _BRANCH_ =    2;
23432  +    END;
23433  +  IF _BRANCH_ LT 0 THEN DO;
23434  +     IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 2;
23435  +  END;
23436  +  IF _BRANCH_ GT 0 THEN DO;
23437  +
23438  +    _BRANCH_ = -1;
23439  +    _ARBFMT_5 = PUT( Complain , $5.);
23440  +     %DMNORMIP( _ARBFMT_5);
23441  +      IF _ARBFMT_5 IN ('FALSE' ) THEN DO;
23442  +       _BRANCH_ =    2;
23443  +      END;
23444  +    IF _BRANCH_ LT 0 THEN DO;
23445  +       IF MISSING( Complain  ) THEN _BRANCH_ = 2;
23446  +      ELSE IF _ARBFMT_5 NOTIN (
23447  +        'TRUE' ,'FALSE'
23448  +         ) THEN _BRANCH_ = 2;
23449  +    END;
23450  +    IF _BRANCH_ GT 0 THEN DO;
23451  +       _ARB_F_ + 0.001333835;
23452  +      END;
23453  +    END;
23454  +  END;
23455  +
23456  +********** LEAF   122  NODE   460 ***************;
23457  +IF _ARB_BADF_ EQ 0 THEN DO;
23458  +
23459  +  _BRANCH_ = -1;
23460  +  _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
23461  +   %DMNORMIP( _ARBFMT_11);
23462  +    IF _ARBFMT_11 IN ('DEBIT CARD' ,'CREDIT CARD' ,'UPI' ) THEN DO;
23463  +     _BRANCH_ =    1;
23464  +    END;
23465  +  IF _BRANCH_ LT 0 THEN DO;
23466  +     IF MISSING( PreferredPaymentMode  ) THEN _BRANCH_ = 1;
23467  +    ELSE IF _ARBFMT_11 NOTIN (
23468  +      'DEBIT CARD' ,'CREDIT CARD' ,'UPI' ,'COD' ,'E WALLET'
23469  +       ) THEN _BRANCH_ = 1;
23470  +  END;
23471  +  IF _BRANCH_ GT 0 THEN DO;
23472  +
23473  +    _BRANCH_ = -1;
23474  +    _ARBFMT_12 = PUT( PreferredLoginDevice , $12.);
23475  +     %DMNORMIP( _ARBFMT_12);
23476  +      IF _ARBFMT_12 IN ('MOBILE PHONE' ) THEN DO;
23477  +       _BRANCH_ =    1;
23478  +      END;
23479  +    IF _BRANCH_ LT 0 THEN DO;
23480  +       IF MISSING( PreferredLoginDevice  ) THEN _BRANCH_ = 1;
23481  +      ELSE IF _ARBFMT_12 NOTIN (
23482  +        'MOBILE PHONE' ,'COMPUTER'
23483  +         ) THEN _BRANCH_ = 1;
23484  +    END;
23485  +    IF _BRANCH_ GT 0 THEN DO;
23486  +       _ARB_F_ + 0.0135776558;
23487  +      END;
23488  +    END;
23489  +  END;
23490  +
23491  +********** LEAF   123  NODE   461 ***************;
23492  +IF _ARB_BADF_ EQ 0 THEN DO;
23493  +
23494  +  _BRANCH_ = -1;
23495  +  _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
23496  +   %DMNORMIP( _ARBFMT_11);
23497  +    IF _ARBFMT_11 IN ('DEBIT CARD' ,'CREDIT CARD' ,'UPI' ) THEN DO;
23498  +     _BRANCH_ =    1;
23499  +    END;
23500  +  IF _BRANCH_ LT 0 THEN DO;
23501  +     IF MISSING( PreferredPaymentMode  ) THEN _BRANCH_ = 1;
23502  +    ELSE IF _ARBFMT_11 NOTIN (
23503  +      'DEBIT CARD' ,'CREDIT CARD' ,'UPI' ,'COD' ,'E WALLET'
23504  +       ) THEN _BRANCH_ = 1;
23505  +  END;
23506  +  IF _BRANCH_ GT 0 THEN DO;
23507  +
23508  +    _BRANCH_ = -1;
23509  +    _ARBFMT_12 = PUT( PreferredLoginDevice , $12.);
23510  +     %DMNORMIP( _ARBFMT_12);
23511  +      IF _ARBFMT_12 IN ('COMPUTER' ) THEN DO;
23512  +       _BRANCH_ =    2;
23513  +      END;
23514  +
23515  +    IF _BRANCH_ GT 0 THEN DO;
23516  +       _ARB_F_ + -0.010848169;
23517  +      END;
23518  +    END;
23519  +  END;
23520  +
23521  +********** LEAF   124  NODE   459 ***************;
23522  +IF _ARB_BADF_ EQ 0 THEN DO;
23523  +
23524  +  _BRANCH_ = -1;
23525  +  _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
23526  +   %DMNORMIP( _ARBFMT_11);
23527  +    IF _ARBFMT_11 IN ('COD' ,'E WALLET' ) THEN DO;
23528  +     _BRANCH_ =    2;
23529  +    END;
23530  +
23531  +  IF _BRANCH_ GT 0 THEN DO;
23532  +     _ARB_F_ + -0.022109909;
23533  +    END;
23534  +  END;
23535  +
23536  +********** LEAF   125  NODE   463 ***************;
23537  +IF _ARB_BADF_ EQ 0 THEN DO;
23538  +
23539  +  _BRANCH_ = -1;
23540  +    IF  NOT MISSING(DaySinceLastOrder ) AND
23541  +    DaySinceLastOrder  <                  1.5 THEN DO;
23542  +     _BRANCH_ =    1;
23543  +    END;
23544  +
23545  +  IF _BRANCH_ GT 0 THEN DO;
23546  +     _ARB_F_ + -0.016891096;
23547  +    END;
23548  +  END;
23549  +
23550  +********** LEAF   126  NODE   465 ***************;
23551  +IF _ARB_BADF_ EQ 0 THEN DO;
23552  +
23553  +  _BRANCH_ = -1;
23554  +    IF  NOT MISSING(DaySinceLastOrder ) AND
23555  +                     1.5 <= DaySinceLastOrder  THEN DO;
23556  +     _BRANCH_ =    2;
23557  +    END;
23558  +  IF _BRANCH_ LT 0 THEN DO;
23559  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
23560  +  END;
23561  +  IF _BRANCH_ GT 0 THEN DO;
23562  +
23563  +    _BRANCH_ = -1;
23564  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
23565  +     %DMNORMIP( _ARBFMT_18);
23566  +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'GROCERY' ,'MOBILE PHONE' )
23567  +        THEN DO;
23568  +       _BRANCH_ =    1;
23569  +      END;
23570  +    IF _BRANCH_ LT 0 THEN DO;
23571  +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
23572  +      ELSE IF _ARBFMT_18 NOTIN (
23573  +        'LAPTOP & ACCESSORY' ,'GROCERY' ,'MOBILE PHONE' ,'OTHERS' ,'MOBILE' ,
23574  +        'FASHION'
23575  +         ) THEN _BRANCH_ = 1;
23576  +    END;
23577  +    IF _BRANCH_ GT 0 THEN DO;
23578  +       _ARB_F_ + 0.0168076253;
23579  +      END;
23580  +    END;
23581  +  END;
23582  +
23583  +********** LEAF   127  NODE   466 ***************;
23584  +IF _ARB_BADF_ EQ 0 THEN DO;
23585  +
23586  +  _BRANCH_ = -1;
23587  +    IF  NOT MISSING(DaySinceLastOrder ) AND
23588  +                     1.5 <= DaySinceLastOrder  THEN DO;
23589  +     _BRANCH_ =    2;
23590  +    END;
23591  +  IF _BRANCH_ LT 0 THEN DO;
23592  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
23593  +  END;
23594  +  IF _BRANCH_ GT 0 THEN DO;
23595  +
23596  +    _BRANCH_ = -1;
23597  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
23598  +     %DMNORMIP( _ARBFMT_18);
23599  +      IF _ARBFMT_18 IN ('OTHERS' ,'MOBILE' ,'FASHION' ) THEN DO;
23600  +       _BRANCH_ =    2;
23601  +      END;
23602  +
23603  +    IF _BRANCH_ GT 0 THEN DO;
23604  +       _ARB_F_ + -0.009168328;
23605  +      END;
23606  +    END;
23607  +  END;
23608  +
23609  +********** LEAF   128  NODE   470 ***************;
23610  +IF _ARB_BADF_ EQ 0 THEN DO;
23611  +
23612  +  _BRANCH_ = -1;
23613  +    IF  NOT MISSING(CityTier ) AND
23614  +    CityTier  <                  1.5 THEN DO;
23615  +     _BRANCH_ =    1;
23616  +    END;
23617  +  IF _BRANCH_ LT 0 THEN DO;
23618  +     IF MISSING( CityTier  ) THEN _BRANCH_ = 1;
23619  +  END;
23620  +  IF _BRANCH_ GT 0 THEN DO;
23621  +
23622  +    _BRANCH_ = -1;
23623  +      IF  NOT MISSING(SatisfactionScore ) AND
23624  +      SatisfactionScore  <                  2.5 THEN DO;
23625  +       _BRANCH_ =    1;
23626  +      END;
23627  +
23628  +    IF _BRANCH_ GT 0 THEN DO;
23629  +       _ARB_F_ + 0.0309883967;
23630  +      END;
23631  +    END;
23632  +  END;
23633  +
23634  +********** LEAF   129  NODE   471 ***************;
23635  +IF _ARB_BADF_ EQ 0 THEN DO;
23636  +
23637  +  _BRANCH_ = -1;
23638  +    IF  NOT MISSING(CityTier ) AND
23639  +    CityTier  <                  1.5 THEN DO;
23640  +     _BRANCH_ =    1;
23641  +    END;
23642  +  IF _BRANCH_ LT 0 THEN DO;
23643  +     IF MISSING( CityTier  ) THEN _BRANCH_ = 1;
23644  +  END;
23645  +  IF _BRANCH_ GT 0 THEN DO;
23646  +
23647  +    _BRANCH_ = -1;
23648  +      IF  NOT MISSING(SatisfactionScore ) AND
23649  +                       2.5 <= SatisfactionScore  THEN DO;
23650  +       _BRANCH_ =    2;
23651  +      END;
23652  +    IF _BRANCH_ LT 0 THEN DO;
23653  +       IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 2;
23654  +    END;
23655  +    IF _BRANCH_ GT 0 THEN DO;
23656  +       _ARB_F_ + 0.0030938213;
23657  +      END;
23658  +    END;
23659  +  END;
23660  +
23661  +********** LEAF   130  NODE   469 ***************;
23662  +IF _ARB_BADF_ EQ 0 THEN DO;
23663  +
23664  +  _BRANCH_ = -1;
23665  +    IF  NOT MISSING(CityTier ) AND
23666  +                     1.5 <= CityTier  THEN DO;
23667  +     _BRANCH_ =    2;
23668  +    END;
23669  +
23670  +  IF _BRANCH_ GT 0 THEN DO;
23671  +     _ARB_F_ + -0.014449446;
23672  +    END;
23673  +  END;
23674  +
23675  +********** LEAF   131  NODE   473 ***************;
23676  +IF _ARB_BADF_ EQ 0 THEN DO;
23677  +
23678  +  _BRANCH_ = -1;
23679  +    IF  NOT MISSING(SatisfactionScore ) AND
23680  +    SatisfactionScore  <                  2.5 THEN DO;
23681  +     _BRANCH_ =    1;
23682  +    END;
23683  +
23684  +  IF _BRANCH_ GT 0 THEN DO;
23685  +     _ARB_F_ + 0.0198867532;
23686  +    END;
23687  +  END;
23688  +
23689  +********** LEAF   132  NODE   475 ***************;
23690  +IF _ARB_BADF_ EQ 0 THEN DO;
23691  +
23692  +  _BRANCH_ = -1;
23693  +    IF  NOT MISSING(SatisfactionScore ) AND
23694  +                     2.5 <= SatisfactionScore  THEN DO;
23695  +     _BRANCH_ =    2;
23696  +    END;
23697  +  IF _BRANCH_ LT 0 THEN DO;
23698  +     IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 2;
23699  +  END;
23700  +  IF _BRANCH_ GT 0 THEN DO;
23701  +
23702  +    _BRANCH_ = -1;
23703  +    _ARBFMT_8 = PUT( MaritalStatus , $8.);
23704  +     %DMNORMIP( _ARBFMT_8);
23705  +      IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
23706  +       _BRANCH_ =    1;
23707  +      END;
23708  +
23709  +    IF _BRANCH_ GT 0 THEN DO;
23710  +       _ARB_F_ + -0.029089438;
23711  +      END;
23712  +    END;
23713  +  END;
23714  +
23715  +********** LEAF   133  NODE   476 ***************;
23716  +IF _ARB_BADF_ EQ 0 THEN DO;
23717  +
23718  +  _BRANCH_ = -1;
23719  +    IF  NOT MISSING(SatisfactionScore ) AND
23720  +                     2.5 <= SatisfactionScore  THEN DO;
23721  +     _BRANCH_ =    2;
23722  +    END;
23723  +  IF _BRANCH_ LT 0 THEN DO;
23724  +     IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 2;
23725  +  END;
23726  +  IF _BRANCH_ GT 0 THEN DO;
23727  +
23728  +    _BRANCH_ = -1;
23729  +    _ARBFMT_8 = PUT( MaritalStatus , $8.);
23730  +     %DMNORMIP( _ARBFMT_8);
23731  +      IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
23732  +       _BRANCH_ =    2;
23733  +      END;
23734  +    IF _BRANCH_ LT 0 THEN DO;
23735  +       IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
23736  +      ELSE IF _ARBFMT_8 NOTIN (
23737  +        'SINGLE' ,'DIVORCED' ,'MARRIED'
23738  +         ) THEN _BRANCH_ = 2;
23739  +    END;
23740  +    IF _BRANCH_ GT 0 THEN DO;
23741  +       _ARB_F_ + 0.004386866;
23742  +      END;
23743  +    END;
23744  +  END;
23745  +
23746  +********** LEAF   134  NODE   478 ***************;
23747  +IF _ARB_BADF_ EQ 0 THEN DO;
23748  +
23749  +  _BRANCH_ = -1;
23750  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
23751  +   %DMNORMIP( _ARBFMT_8);
23752  +    IF _ARBFMT_8 IN ('SINGLE' ) THEN DO;
23753  +     _BRANCH_ =    1;
23754  +    END;
23755  +
23756  +  IF _BRANCH_ GT 0 THEN DO;
23757  +     _ARB_F_ + -0.014375143;
23758  +    END;
23759  +  END;
23760  +
23761  +********** LEAF   135  NODE   480 ***************;
23762  +IF _ARB_BADF_ EQ 0 THEN DO;
23763  +
23764  +  _BRANCH_ = -1;
23765  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
23766  +   %DMNORMIP( _ARBFMT_8);
23767  +    IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
23768  +     _BRANCH_ =    2;
23769  +    END;
23770  +  IF _BRANCH_ LT 0 THEN DO;
23771  +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
23772  +    ELSE IF _ARBFMT_8 NOTIN (
23773  +      'SINGLE' ,'DIVORCED' ,'MARRIED'
23774  +       ) THEN _BRANCH_ = 2;
23775  +  END;
23776  +  IF _BRANCH_ GT 0 THEN DO;
23777  +
23778  +    _BRANCH_ = -1;
23779  +      IF  NOT MISSING(OrderCount ) AND
23780  +      OrderCount  <                  2.5 THEN DO;
23781  +       _BRANCH_ =    1;
23782  +      END;
23783  +    IF _BRANCH_ LT 0 THEN DO;
23784  +       IF MISSING( OrderCount  ) THEN _BRANCH_ = 1;
23785  +    END;
23786  +    IF _BRANCH_ GT 0 THEN DO;
23787  +       _ARB_F_ + 0.0161057906;
23788  +      END;
23789  +    END;
23790  +  END;
23791  +
23792  +********** LEAF   136  NODE   481 ***************;
23793  +IF _ARB_BADF_ EQ 0 THEN DO;
23794  +
23795  +  _BRANCH_ = -1;
23796  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
23797  +   %DMNORMIP( _ARBFMT_8);
23798  +    IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
23799  +     _BRANCH_ =    2;
23800  +    END;
23801  +  IF _BRANCH_ LT 0 THEN DO;
23802  +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
23803  +    ELSE IF _ARBFMT_8 NOTIN (
23804  +      'SINGLE' ,'DIVORCED' ,'MARRIED'
23805  +       ) THEN _BRANCH_ = 2;
23806  +  END;
23807  +  IF _BRANCH_ GT 0 THEN DO;
23808  +
23809  +    _BRANCH_ = -1;
23810  +      IF  NOT MISSING(OrderCount ) AND
23811  +                       2.5 <= OrderCount  THEN DO;
23812  +       _BRANCH_ =    2;
23813  +      END;
23814  +
23815  +    IF _BRANCH_ GT 0 THEN DO;
23816  +       _ARB_F_ + -0.003839919;
23817  +      END;
23818  +    END;
23819  +  END;
23820  +
23821  +********** LEAF   137  NODE   483 ***************;
23822  +IF _ARB_BADF_ EQ 0 THEN DO;
23823  +
23824  +  _BRANCH_ = -1;
23825  +    IF  NOT MISSING(DaySinceLastOrder ) AND
23826  +    DaySinceLastOrder  <                  1.5 THEN DO;
23827  +     _BRANCH_ =    1;
23828  +    END;
23829  +
23830  +  IF _BRANCH_ GT 0 THEN DO;
23831  +     _ARB_F_ + -0.015186707;
23832  +    END;
23833  +  END;
23834  +
23835  +********** LEAF   138  NODE   485 ***************;
23836  +IF _ARB_BADF_ EQ 0 THEN DO;
23837  +
23838  +  _BRANCH_ = -1;
23839  +    IF  NOT MISSING(DaySinceLastOrder ) AND
23840  +                     1.5 <= DaySinceLastOrder  THEN DO;
23841  +     _BRANCH_ =    2;
23842  +    END;
23843  +  IF _BRANCH_ LT 0 THEN DO;
23844  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
23845  +  END;
23846  +  IF _BRANCH_ GT 0 THEN DO;
23847  +
23848  +    _BRANCH_ = -1;
23849  +      IF  NOT MISSING(CityTier ) AND
23850  +      CityTier  <                  1.5 THEN DO;
23851  +       _BRANCH_ =    1;
23852  +      END;
23853  +    IF _BRANCH_ LT 0 THEN DO;
23854  +       IF MISSING( CityTier  ) THEN _BRANCH_ = 1;
23855  +    END;
23856  +    IF _BRANCH_ GT 0 THEN DO;
23857  +       _ARB_F_ + 0.0137317634;
23858  +      END;
23859  +    END;
23860  +  END;
23861  +
23862  +********** LEAF   139  NODE   486 ***************;
23863  +IF _ARB_BADF_ EQ 0 THEN DO;
23864  +
23865  +  _BRANCH_ = -1;
23866  +    IF  NOT MISSING(DaySinceLastOrder ) AND
23867  +                     1.5 <= DaySinceLastOrder  THEN DO;
23868  +     _BRANCH_ =    2;
23869  +    END;
23870  +  IF _BRANCH_ LT 0 THEN DO;
23871  +     IF MISSING( DaySinceLastOrder  ) THEN _BRANCH_ = 2;
23872  +  END;
23873  +  IF _BRANCH_ GT 0 THEN DO;
23874  +
23875  +    _BRANCH_ = -1;
23876  +      IF  NOT MISSING(CityTier ) AND
23877  +                       1.5 <= CityTier  THEN DO;
23878  +       _BRANCH_ =    2;
23879  +      END;
23880  +
23881  +    IF _BRANCH_ GT 0 THEN DO;
23882  +       _ARB_F_ + -0.007895541;
23883  +      END;
23884  +    END;
23885  +  END;
23886  +
23887  +********** LEAF   140  NODE   488 ***************;
23888  +IF _ARB_BADF_ EQ 0 THEN DO;
23889  +
23890  +  _BRANCH_ = -1;
23891  +    IF  NOT MISSING(Tenure ) AND
23892  +    Tenure  <                  3.5 THEN DO;
23893  +     _BRANCH_ =    1;
23894  +    END;
23895  +
23896  +  IF _BRANCH_ GT 0 THEN DO;
23897  +     _ARB_F_ + -0.010570459;
23898  +    END;
23899  +  END;
23900  +
23901  +********** LEAF   141  NODE   490 ***************;
23902  +IF _ARB_BADF_ EQ 0 THEN DO;
23903  +
23904  +  _BRANCH_ = -1;
23905  +    IF  NOT MISSING(Tenure ) AND
23906  +                     3.5 <= Tenure  THEN DO;
23907  +     _BRANCH_ =    2;
23908  +    END;
23909  +  IF _BRANCH_ LT 0 THEN DO;
23910  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
23911  +  END;
23912  +  IF _BRANCH_ GT 0 THEN DO;
23913  +
23914  +    _BRANCH_ = -1;
23915  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
23916  +     %DMNORMIP( _ARBFMT_18);
23917  +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'FASHION' )
23918  +       THEN DO;
23919  +       _BRANCH_ =    1;
23920  +      END;
23921  +    IF _BRANCH_ LT 0 THEN DO;
23922  +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
23923  +      ELSE IF _ARBFMT_18 NOTIN (
23924  +        'LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'FASHION' ,'MOBILE' ,
23925  +        'MOBILE PHONE'
23926  +         ) THEN _BRANCH_ = 1;
23927  +    END;
23928  +    IF _BRANCH_ GT 0 THEN DO;
23929  +       _ARB_F_ + 0.0199654718;
23930  +      END;
23931  +    END;
23932  +  END;
23933  +
23934  +********** LEAF   142  NODE   491 ***************;
23935  +IF _ARB_BADF_ EQ 0 THEN DO;
23936  +
23937  +  _BRANCH_ = -1;
23938  +    IF  NOT MISSING(Tenure ) AND
23939  +                     3.5 <= Tenure  THEN DO;
23940  +     _BRANCH_ =    2;
23941  +    END;
23942  +  IF _BRANCH_ LT 0 THEN DO;
23943  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
23944  +  END;
23945  +  IF _BRANCH_ GT 0 THEN DO;
23946  +
23947  +    _BRANCH_ = -1;
23948  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
23949  +     %DMNORMIP( _ARBFMT_18);
23950  +      IF _ARBFMT_18 IN ('MOBILE' ,'MOBILE PHONE' ) THEN DO;
23951  +       _BRANCH_ =    2;
23952  +      END;
23953  +
23954  +    IF _BRANCH_ GT 0 THEN DO;
23955  +       _ARB_F_ + -0.005022658;
23956  +      END;
23957  +    END;
23958  +  END;
23959  +
23960  +********** LEAF   143  NODE   495 ***************;
23961  +IF _ARB_BADF_ EQ 0 THEN DO;
23962  +
23963  +  _BRANCH_ = -1;
23964  +  _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
23965  +   %DMNORMIP( _ARBFMT_11);
23966  +    IF _ARBFMT_11 IN ('DEBIT CARD' ,'CREDIT CARD' ,'UPI' ) THEN DO;
23967  +     _BRANCH_ =    1;
23968  +    END;
23969  +  IF _BRANCH_ LT 0 THEN DO;
23970  +     IF MISSING( PreferredPaymentMode  ) THEN _BRANCH_ = 1;
23971  +    ELSE IF _ARBFMT_11 NOTIN (
23972  +      'DEBIT CARD' ,'CREDIT CARD' ,'UPI' ,'COD' ,'E WALLET'
23973  +       ) THEN _BRANCH_ = 1;
23974  +  END;
23975  +  IF _BRANCH_ GT 0 THEN DO;
23976  +
23977  +    _BRANCH_ = -1;
23978  +      IF  NOT MISSING(SatisfactionScore ) AND
23979  +      SatisfactionScore  <                  3.5 THEN DO;
23980  +       _BRANCH_ =    1;
23981  +      END;
23982  +    IF _BRANCH_ LT 0 THEN DO;
23983  +       IF MISSING( SatisfactionScore  ) THEN _BRANCH_ = 1;
23984  +    END;
23985  +    IF _BRANCH_ GT 0 THEN DO;
23986  +       _ARB_F_ + 0.0223176826;
23987  +      END;
23988  +    END;
23989  +  END;
23990  +
23991  +********** LEAF   144  NODE   496 ***************;
23992  +IF _ARB_BADF_ EQ 0 THEN DO;
23993  +
23994  +  _BRANCH_ = -1;
23995  +  _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
23996  +   %DMNORMIP( _ARBFMT_11);
23997  +    IF _ARBFMT_11 IN ('DEBIT CARD' ,'CREDIT CARD' ,'UPI' ) THEN DO;
23998  +     _BRANCH_ =    1;
23999  +    END;
24000  +  IF _BRANCH_ LT 0 THEN DO;
24001  +     IF MISSING( PreferredPaymentMode  ) THEN _BRANCH_ = 1;
24002  +    ELSE IF _ARBFMT_11 NOTIN (
24003  +      'DEBIT CARD' ,'CREDIT CARD' ,'UPI' ,'COD' ,'E WALLET'
24004  +       ) THEN _BRANCH_ = 1;
24005  +  END;
24006  +  IF _BRANCH_ GT 0 THEN DO;
24007  +
24008  +    _BRANCH_ = -1;
24009  +      IF  NOT MISSING(SatisfactionScore ) AND
24010  +                       3.5 <= SatisfactionScore  THEN DO;
24011  +       _BRANCH_ =    2;
24012  +      END;
24013  +
24014  +    IF _BRANCH_ GT 0 THEN DO;
24015  +       _ARB_F_ + -0.009079693;
24016  +      END;
24017  +    END;
24018  +  END;
24019  +
24020  +********** LEAF   145  NODE   494 ***************;
24021  +IF _ARB_BADF_ EQ 0 THEN DO;
24022  +
24023  +  _BRANCH_ = -1;
24024  +  _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
24025  +   %DMNORMIP( _ARBFMT_11);
24026  +    IF _ARBFMT_11 IN ('COD' ,'E WALLET' ) THEN DO;
24027  +     _BRANCH_ =    2;
24028  +    END;
24029  +
24030  +  IF _BRANCH_ GT 0 THEN DO;
24031  +     _ARB_F_ + -0.021246542;
24032  +    END;
24033  +  END;
24034  +
24035  +********** LEAF   146  NODE   500 ***************;
24036  +IF _ARB_BADF_ EQ 0 THEN DO;
24037  +
24038  +  _BRANCH_ = -1;
24039  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
24040  +   %DMNORMIP( _ARBFMT_8);
24041  +    IF _ARBFMT_8 IN ('SINGLE' ,'DIVORCED' ) THEN DO;
24042  +     _BRANCH_ =    1;
24043  +    END;
24044  +
24045  +  IF _BRANCH_ GT 0 THEN DO;
24046  +
24047  +    _BRANCH_ = -1;
24048  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
24049  +     %DMNORMIP( _ARBFMT_18);
24050  +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'GROCERY' ) THEN DO;
24051  +       _BRANCH_ =    1;
24052  +      END;
24053  +
24054  +    IF _BRANCH_ GT 0 THEN DO;
24055  +       _ARB_F_ + 0.0101527861;
24056  +      END;
24057  +    END;
24058  +  END;
24059  +
24060  +********** LEAF   147  NODE   501 ***************;
24061  +IF _ARB_BADF_ EQ 0 THEN DO;
24062  +
24063  +  _BRANCH_ = -1;
24064  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
24065  +   %DMNORMIP( _ARBFMT_8);
24066  +    IF _ARBFMT_8 IN ('SINGLE' ,'DIVORCED' ) THEN DO;
24067  +     _BRANCH_ =    1;
24068  +    END;
24069  +
24070  +  IF _BRANCH_ GT 0 THEN DO;
24071  +
24072  +    _BRANCH_ = -1;
24073  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
24074  +     %DMNORMIP( _ARBFMT_18);
24075  +      IF _ARBFMT_18 IN ('OTHERS' ,'MOBILE' ,'FASHION' ,'MOBILE PHONE' ) THEN
24076  +        DO;
24077  +       _BRANCH_ =    2;
24078  +      END;
24079  +    IF _BRANCH_ LT 0 THEN DO;
24080  +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 2;
24081  +      ELSE IF _ARBFMT_18 NOTIN (
24082  +        'LAPTOP & ACCESSORY' ,'GROCERY' ,'OTHERS' ,'MOBILE' ,'FASHION' ,
24083  +        'MOBILE PHONE'
24084  +         ) THEN _BRANCH_ = 2;
24085  +    END;
24086  +    IF _BRANCH_ GT 0 THEN DO;
24087  +       _ARB_F_ + -0.019405315;
24088  +      END;
24089  +    END;
24090  +  END;
24091  +
24092  +********** LEAF   148  NODE   502 ***************;
24093  +IF _ARB_BADF_ EQ 0 THEN DO;
24094  +
24095  +  _BRANCH_ = -1;
24096  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
24097  +   %DMNORMIP( _ARBFMT_8);
24098  +    IF _ARBFMT_8 IN ('MARRIED' ) THEN DO;
24099  +     _BRANCH_ =    2;
24100  +    END;
24101  +  IF _BRANCH_ LT 0 THEN DO;
24102  +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
24103  +    ELSE IF _ARBFMT_8 NOTIN (
24104  +      'SINGLE' ,'DIVORCED' ,'MARRIED'
24105  +       ) THEN _BRANCH_ = 2;
24106  +  END;
24107  +  IF _BRANCH_ GT 0 THEN DO;
24108  +
24109  +    _BRANCH_ = -1;
24110  +      IF  NOT MISSING(Tenure ) AND
24111  +      Tenure  <                 13.5 THEN DO;
24112  +       _BRANCH_ =    1;
24113  +      END;
24114  +    IF _BRANCH_ LT 0 THEN DO;
24115  +       IF MISSING( Tenure  ) THEN _BRANCH_ = 1;
24116  +    END;
24117  +    IF _BRANCH_ GT 0 THEN DO;
24118  +       _ARB_F_ + 0.0050042769;
24119  +      END;
24120  +    END;
24121  +  END;
24122  +
24123  +********** LEAF   149  NODE   503 ***************;
24124  +IF _ARB_BADF_ EQ 0 THEN DO;
24125  +
24126  +  _BRANCH_ = -1;
24127  +  _ARBFMT_8 = PUT( MaritalStatus , $8.);
24128  +   %DMNORMIP( _ARBFMT_8);
24129  +    IF _ARBFMT_8 IN ('MARRIED' ) THEN DO;
24130  +     _BRANCH_ =    2;
24131  +    END;
24132  +  IF _BRANCH_ LT 0 THEN DO;
24133  +     IF MISSING( MaritalStatus  ) THEN _BRANCH_ = 2;
24134  +    ELSE IF _ARBFMT_8 NOTIN (
24135  +      'SINGLE' ,'DIVORCED' ,'MARRIED'
24136  +       ) THEN _BRANCH_ = 2;
24137  +  END;
24138  +  IF _BRANCH_ GT 0 THEN DO;
24139  +
24140  +    _BRANCH_ = -1;
24141  +      IF  NOT MISSING(Tenure ) AND
24142  +                      13.5 <= Tenure  THEN DO;
24143  +       _BRANCH_ =    2;
24144  +      END;
24145  +
24146  +    IF _BRANCH_ GT 0 THEN DO;
24147  +       _ARB_F_ + 0.03716596;
24148  +      END;
24149  +    END;
24150  +  END;
24151  +
24152  +********** LEAF   150  NODE   505 ***************;
24153  +IF _ARB_BADF_ EQ 0 THEN DO;
24154  +
24155  +  _BRANCH_ = -1;
24156  +    IF  NOT MISSING(Tenure ) AND
24157  +    Tenure  <                  1.5 THEN DO;
24158  +     _BRANCH_ =    1;
24159  +    END;
24160  +
24161  +  IF _BRANCH_ GT 0 THEN DO;
24162  +     _ARB_F_ + -0.01105639;
24163  +    END;
24164  +  END;
24165  +
24166  +********** LEAF   151  NODE   507 ***************;
24167  +IF _ARB_BADF_ EQ 0 THEN DO;
24168  +
24169  +  _BRANCH_ = -1;
24170  +    IF  NOT MISSING(Tenure ) AND
24171  +                     1.5 <= Tenure  THEN DO;
24172  +     _BRANCH_ =    2;
24173  +    END;
24174  +  IF _BRANCH_ LT 0 THEN DO;
24175  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
24176  +  END;
24177  +  IF _BRANCH_ GT 0 THEN DO;
24178  +
24179  +    _BRANCH_ = -1;
24180  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
24181  +     %DMNORMIP( _ARBFMT_18);
24182  +      IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'FASHION' )
24183  +       THEN DO;
24184  +       _BRANCH_ =    1;
24185  +      END;
24186  +    IF _BRANCH_ LT 0 THEN DO;
24187  +       IF MISSING( PreferedOrderCat  ) THEN _BRANCH_ = 1;
24188  +      ELSE IF _ARBFMT_18 NOTIN (
24189  +        'LAPTOP & ACCESSORY' ,'OTHERS' ,'GROCERY' ,'FASHION' ,'MOBILE' ,
24190  +        'MOBILE PHONE'
24191  +         ) THEN _BRANCH_ = 1;
24192  +    END;
24193  +    IF _BRANCH_ GT 0 THEN DO;
24194  +       _ARB_F_ + 0.0204893537;
24195  +      END;
24196  +    END;
24197  +  END;
24198  +
24199  +********** LEAF   152  NODE   508 ***************;
24200  +IF _ARB_BADF_ EQ 0 THEN DO;
24201  +
24202  +  _BRANCH_ = -1;
24203  +    IF  NOT MISSING(Tenure ) AND
24204  +                     1.5 <= Tenure  THEN DO;
24205  +     _BRANCH_ =    2;
24206  +    END;
24207  +  IF _BRANCH_ LT 0 THEN DO;
24208  +     IF MISSING( Tenure  ) THEN _BRANCH_ = 2;
24209  +  END;
24210  +  IF _BRANCH_ GT 0 THEN DO;
24211  +
24212  +    _BRANCH_ = -1;
24213  +    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
24214  +     %DMNORMIP( _ARBFMT_18);
24215  +      IF _ARBFMT_18 IN ('MOBILE' ,'MOBILE PHONE' ) THEN DO;
24216  +       _BRANCH_ =    2;
24217  +      END;
24218  +
24219  +    IF _BRANCH_ GT 0 THEN DO;
24220  +       _ARB_F_ + -0.010658659;
24221  +      END;
24222  +    END;
24223  +  END;
24224  +
24225  +_ARB_F_ = 2.0 * _ARB_F_;
24226  +IF _ARB_BADF_ NE 0 THEN P_Churnfalse  = 0.8316831683;
24227  +ELSE IF _ARB_F_ > 45.0 THEN P_Churnfalse  = 1.0;
24228  +ELSE IF _ARB_F_ < -45.0 THEN P_Churnfalse  = 0.0;
24229  +ELSE P_Churnfalse  = 1.0/(1.0 + EXP( - _ARB_F_));
24230  +P_Churntrue  = 1.0 - P_Churnfalse ;
24231  +*****  CREATE Q_: POSTERIORS WITHOUT PRIORS ****;
24232  +Q_Churntrue  = P_Churntrue ;
24233  +Q_Churnfalse  = P_Churnfalse ;
24234  +
24235  +*****  I_ AND U_ VARIABLES *******************;
24236  + DROP _ARB_I_ _ARB_IP_;
24237  + _ARB_IP_ = -1.0;
24238  + IF _ARB_IP_ + 1.0/32768.0 < P_Churntrue THEN DO;
24239  +   _ARB_IP_ = P_Churntrue ;
24240  +   _ARB_I_  = 1;
24241  +   END;
24242  + IF _ARB_IP_ + 1.0/32768.0 < P_Churnfalse THEN DO;
24243  +   _ARB_IP_ = P_Churnfalse ;
24244  +   _ARB_I_  = 2;
24245  +   END;
24246  + SELECT( _ARB_I_);
24247  +  WHEN( 1) DO;
24248  +    I_Churn  = 'TRUE' ;
24249  +    U_Churn  = 'true' ;
24250  +     END;
24251  +  WHEN( 2) DO;
24252  +    I_Churn  = 'FALSE' ;
24253  +    U_Churn  = 'false' ;
24254  +     END;
24255  +   END;
24256  +
24257  +*****  RESIDUALS R_ *************;
24258  +IF  F_Churn  NE 'TRUE'
24259  +AND F_Churn  NE 'FALSE'  THEN DO;
24260  +        R_Churntrue  = .;
24261  +        R_Churnfalse  = .;
24262  + END;
24263  + ELSE DO;
24264  +       R_Churntrue  =  -P_Churntrue ;
24265  +       R_Churnfalse  =  -P_Churnfalse ;
24266  +       SELECT( F_Churn  );
24267  +          WHEN( 'TRUE'  ) R_Churntrue  = R_Churntrue  +1;
24268  +          WHEN( 'FALSE'  ) R_Churnfalse  = R_Churnfalse  +1;
24269  +       END;
24270  + END;
24271  +
24272  +****************************************************************;
24273  +******          END OF DECISION TREE SCORING CODE         ******;
24274  +****************************************************************;
24275  +
NOTE: %INCLUDE (level 1) ending.
24276   run;
 
NOTE: DATA STEP view saved on file EMWS2.BOOST_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
24277   quit;
24278   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
 
NOTE: View EMWS2.BOOST_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
24280   proc sort data=WORK.EM_USER_REPORT;
24281   by ID VIEW;
24282   run;
 
NOTE: There were 1595 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 1595 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24283   *------------------------------------------------------------*;
24284   * Boost: Computing metadata for TRAIN data;
24285   *------------------------------------------------------------*;
 
NOTE: View EMWS2.BOOST_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
24693   data EMWS2.Boost_EMINFO;
24694   length TARGET KEY $32 DATA $43;
24695   input TARGET KEY DATA $;
24696   cards;
 
NOTE: The data set EMWS2.BOOST_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24700   run;
24701   proc sort data = EMWS2.Boost_EMINFO NOTHREADS;
24702   by TARGET KEY;
24703   run;
 
NOTE: There were 3 observations read from the data set EMWS2.BOOST_EMINFO.
NOTE: The data set EMWS2.BOOST_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS2.BOOST_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
NOTE: View EMWS2.BOOST_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
*------------------------------------------------------------*
* Report Log
Date:                January 07, 2024
Time:                02:03:06
*------------------------------------------------------------*
24727   data EMWS2.Boost_EMOUTFIT;
24728   set EMWS2.Boost_EMOUTFIT;
24729   length TargetLabel $200;
24730   label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
24731   run;
 
NOTE: Variable TargetLabel is uninitialized.
NOTE: There were 1 observations read from the data set EMWS2.BOOST_EMOUTFIT.
NOTE: The data set EMWS2.BOOST_EMOUTFIT has 1 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24732   proc sort data=EMWS2.Boost_EMREPORTFIT nothreads;
24733   by TARGET;
24734   run;
 
NOTE: There were 9 observations read from the data set EMWS2.BOOST_EMREPORTFIT.
NOTE: The data set EMWS2.BOOST_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
24735   %let _EMwarndup = 0;
24736   %let _EMtargetdup =;
24737   %let _EMASEtargetdup =;
24738   data _null_;
24739   set EMWS2.Boost_EMOUTFIT;
24740   if .<_ASE_<0.000001 then do;
24741   call symput('_EMwarndup', '1');
24742   call symput('_EMtargetdup', target);
24743   call symput('_EMASEtargetdup', put(_ASE_, best.));
24744   end;
24745   run;
 
NOTE: There were 1 observations read from the data set EMWS2.BOOST_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24746   %let EMEXCEPTIONSTRING=;
24747   *------------------------------------------------------------*;
24748   * REPORT: Boost;
24749   *------------------------------------------------------------*;
24750   %let EM_ACTION = REPORT;
24751   %let syscc = 0;
24752   %macro main;
24753
24754     filename temp catalog 'sashelp.emmodl.boost_macros.source';
24755     %include temp;
24756     filename temp;
24757
24758     %setProperties;
24759
24760     %if %upcase(&EM_ACTION) = CREATE %then %do;
24761       filename temp catalog 'sashelp.emmodl.boost_create.source';
24762       %include temp;
24763       filename temp;
24764
24765       %create;
24766     %end;
24767
24768      %else
24769      %if %upcase(&EM_ACTION) = TRAIN %then %do;
24770
24771          filename temp catalog 'sashelp.emmodl.boost_train.source';
24772          %include temp;
24773          filename temp;
24774          %train;
24775      %end;
24776
24777     %else
24778     %if %upcase(&EM_ACTION) = SCORE %then %do;
24779       filename temp catalog 'sashelp.emmodl.boost_score.source';
24780       %include temp;
24781       filename temp;
24782
24783       %score;
24784
24785     %end;
24786
24787     %else
24788     %if %upcase(&EM_ACTION) = REPORT %then %do;
24789
24790          filename temp catalog 'sashelp.emmodl.boost_report.source';
24791          %include temp;
24792          filename temp;
24793
24794          %report;
24795      %end;
24796
24797      %doendm:
24798   %mend main;
24799
24800   %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_MACROS.SOURCE.
24801  +
24802  +%macro SetProperties;
24803  +
24804  +     /* boost options */
24805  +     %em_checkmacro(name=EM_PROPERTY_ITERATIONS,   value=50, global=Y);
24806  +     %em_checkmacro(name=EM_PROPERTY_TRAINPROPORTION,   value=60, global=Y);
24807  +     %em_checkmacro(name=EM_PROPERTY_CATEGORICALBINS, value=30, global=Y);
24808  +     %em_checkmacro(name=EM_PROPERTY_INTERVALBINS, value=100, global=Y);
24809  +     %em_checkmacro(name=EM_PROPERTY_HUBER, value=NO, global=Y);
24810  +     %em_checkmacro(name=EM_PROPERTY_SEED,   value=12345, global=Y);
24811  +     %em_checkmacro(name=EM_PROPERTY_SHRINKAGE,   value=0.1, global=Y);
24812  +     %em_checkmacro(name=EM_PROPERTY_LEAFFRACTION,   value=0.1, global=Y);
24813  +     %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,   value=., global=Y);
24814  +     %em_checkmacro(name=EM_PROPERTY_NODESIZE,   value=20000, global=Y);
24815  +     %em_checkmacro(name=EM_PROPERTY_SUBSERIES,   value=BEST, global=Y);
24816  +     %em_checkmacro(name=EM_PROPERTY_ITERATIONNUM,   value=1, global=Y);
24817  +
24818  +     %em_checkmacro(name=EM_PROPERTY_PRECISION,    value=0, global=Y);
24819  +     %em_checkmacro(name=EM_PROPERTY_MISSING,      value=USEINSEARCH, global=Y);
24820  +     %em_checkmacro(name=EM_PROPERTY_MINCATSIZE, value=5, global=Y);
24821  +     %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,  value=2, global=Y);
24822  +     %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,   value=2, global=Y);
24823  +     %em_checkmacro(name=EM_PROPERTY_REUSEVAR,   value=1, global=Y);
24824  +     %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,   value=5000, global=Y);
24825  +     %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,   value=DISK, global=Y);
24826  +
24827  +     %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE, value=PROFIT, global=Y);
24828  +     %em_checkmacro(name=EM_PROPERTY_MEASURE, value=PROFIT, global=Y);
24829  +     %em_checkmacro(name=EM_PROPERTY_NSURRS, value=0, global=Y);
24830  +     %em_checkmacro(name=EM_PROPERTY_VARSELECTION, value=Y, global=Y);
24831  +
24832  +     %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE, value=N, global=Y);
24833  +     %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP, value=5, global=Y);
24834  +     %em_checkmacro(name=EM_PROPERTY_NUMPAIRIMP, value=0, global=Y);
24835  +
24836  +%mend SetProperties;
24837  +
24838  +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_REPORT.SOURCE.
24839  +%macro generateObsImportance;
24840  +
24841  +  %EM_GETNAME(key=MODEL, type=DATA);
24842  +  %EM_GETNAME(key=IMPORTANCE, type=DATA);
24843  +  %EM_GETNAME(key=OBSIMPFIT, type=DATA);
24844  +
24845  +  proc arbor proc=treeboost inmodel=&EM_USER_MODEL;
24846  +    importance data=&EM_IMPORT_DATA out=_NULL_ outfit=&EM_USER_OBSIMPFIT nvars=&EM_PROPERTY_NUMSINGLEIMP n2way=&EM_PROPERTY_NUMPAIRIMP;
24847  +  run;
24848  +  quit;
24849  +
24850  +%mend generateObsImportance;
24851  +
24852  +%macro report;
24853  +
24854  +  /* create observation based importance statistics */
24855  +  %EM_GETNAME(key=OBSIMPFIT, type=DATA);
24856  +
24857  +  %if &EM_PROPERTY_OBSIMPORTANCE eq Y %then %do;
24858  +     %generateObsImportance;
24859  +
24860  +     data &EM_USER_OBSIMPFIT;
24861  +       set &EM_USER_OBSIMPFIT;
24862  +       label _ASE_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgsquareerror_title, noquote))"
24863  +             _DFT_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dft, noquote))"
24864  +             _DIV_  = "%sysfunc(sasmsg(sashelp.dmine,  stat_div_vlabel , noquote))"
24865  +             _MAX_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_maxabserror_vlabel, noquote))"
24866  +             _MISC_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_misclassrate_title, noquote))"
24867  +             _NOBS_ = "%sysfunc(sasmsg(sashelp.dmine,  stat_nobs_vlabel, noquote))"
24868  +             _NW_   = "%sysfunc(sasmsg(sashelp.dmine,  rpt_nleaves_vlabel , noquote))"
24869  +             _RASE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_rootavgsqerror_vlabel, noquote))"
24870  +             _SSE_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_sumsqerror_vlabel, noquote))"
24871  +             _SUMW_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_sumw, noquote))"
24872  +       ;
24873  +     run;
24874  +  %end;
24875  +
24876  +  %else %do;
24877  +     %let exist_flag = %sysfunc(exist(&EM_USER_OBSIMPFIT, DATA));
24878  +     %if &exist_flag eq 1 %then %do;
24879  +        proc datasets lib=&EM_LIB nolist;
24880  +          delete &EM_NODEID._OBSIMPFIT;
24881  +        run;
24882  +        quit;
24883  +     %end;
24884  +  %end;
24885  +
24886  +  /* build reports based on observation importance */
24887  +  %em_report(key=OBSIMPFIT, viewtype=DATA, block=MODEL, DESCRIPTION=OBSIMPFIT, AUTODISPLAY=N);
24888  +
24889  +%mend report;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
24890   *------------------------------------------------------------*;
24891   * End REPORT: Boost;
24892   *------------------------------------------------------------*;
24893
 
24894   /* Reset EM Options */
24895   options formchar="|----|+|---+=|-/\<>*";
24896   options nocenter ls=256 ps=10000;
24897   goptions reset=all device=GIF NODISPLAY;
 
24898   proc sort data=WORK.EM_USER_REPORT;
24899   by ID VIEW;
24900   run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24901   proc sort data=EMWS2.Part_CMeta_TRAIN out=WORK.SUBSETINMETA;
24902   by NAME;
24903   run;
 
NOTE: There were 17 observations read from the data set EMWS2.PART_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 17 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24904   proc sort data=EMWS2.Boost_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
24905   by NAME;
24906   run;
 
NOTE: There were 17 observations read from the data set EMWS2.BOOST_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 17 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
24907   data WORK.ASSESS_META;
24908   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
24909   by NAME;
24910   run;
 
NOTE: There were 17 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 17 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 17 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24911   data EM_temp_assessMeta;
24912   set EMWS2.Boost_CMeta_TRAIN;
24913   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
24914   run;
 
NOTE: There were 10 observations read from the data set EMWS2.BOOST_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24915   data EM_temp_assessdata;
24916   set EMWS2.Boost_TRAIN(keep=
24917   F_Churn
24918   I_Churn
24919   P_Churnfalse
24920   P_Churntrue
24921   Q_Churnfalse
24922   Q_Churntrue
24923   R_Churnfalse
24924   R_Churntrue
24925   U_Churn
24926   _WARN_
24927   Churn
24928   );
24929   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS2.BOOST_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
NOTE: There were 3939 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 3939 observations read from the data set EMWS2.BOOST_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 3939 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
29210   data EM_temp_assessMeta;
29211   set EMWS2.Boost_CMeta_TRAIN;
29212   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
29213   run;
 
NOTE: There were 10 observations read from the data set EMWS2.BOOST_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29214   data EM_temp_assessdata;
29215   set EMWS2.Boost_VALIDATE(keep=
29216   F_Churn
29217   I_Churn
29218   P_Churnfalse
29219   P_Churntrue
29220   Q_Churnfalse
29221   Q_Churntrue
29222   R_Churnfalse
29223   R_Churntrue
29224   U_Churn
29225   _WARN_
29226   Churn
29227   );
29228   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS2.BOOST_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 1691 observations read from the data set EMWS2.PART_VALIDATE.
NOTE: There were 1691 observations read from the data set EMWS2.BOOST_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1691 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
33518   %let _cn = %sysfunc(getoption(CENTER));
33519   options nocenter;
33520   proc print data=EMWS2.Boost_EMREPORTFIT noobs label;
33521   var STAT LABEL TRAIN
33522   VALIDATE
33523   ;
33524   by TARGET TARGETLABEL;
33525   title9 ' ';
33526   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
33527   run;
 
NOTE: There were 9 observations read from the data set EMWS2.BOOST_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33528   title10;
33529   options &_cn;
 
33530   proc sort data=EMWS2.Boost_EMCLASSIFICATION nothreads;
33531   by DATAROLE TARGET TARGETLABEL;
33532   run;
 
NOTE: There were 8 observations read from the data set EMWS2.BOOST_EMCLASSIFICATION.
NOTE: The data set EMWS2.BOOST_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33533   %let _cn = %sysfunc(getoption(CENTER));
33534   options nocenter;
33535   proc print data=EMWS2.Boost_EMCLASSIFICATION noobs label;
33536   var from into pct_row pct_col count percent
33537   ;
33538   by DATAROLE TARGET TARGETLABEL;
33539   label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
33540   label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
33541   label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
33542   label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
33543   label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
33544   label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
33545   where _TYPE_='PREDICTION';
33546   title9 ' ';
33547   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
33548   run;
 
NOTE: There were 8 observations read from the data set EMWS2.BOOST_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
33549   title9;
33550   title10;
33551   options &_cn;
 
33552   %let _cn = %sysfunc(getoption(CENTER));
33553   options nocenter;
33554   data EMWS2.Boost_EMEVENTREPORT;
33555   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT TRUEEVENT
33555 !  8;
33556   label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
33556 ! TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
33556 ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
33556 ! FALSEEVENT
33557   = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
33557 ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
33557 ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
33558      "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
33559   FALSEEVENT=0;
33560   FALSENEVENT=0;
33561   TRUEEVENT=0;
33562   TRUENEVENT=0;
33563   set EMWS2.Boost_EMEVENTREPORT;
33564   run;
 
NOTE: There were 2 observations read from the data set EMWS2.BOOST_EMEVENTREPORT.
NOTE: The data set EMWS2.BOOST_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33565   proc print data=EMWS2.Boost_EMEVENTREPORT noobs label;
33566   title9 ' ';
33567   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
33568   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
33569   run;
 
NOTE: There were 2 observations read from the data set EMWS2.BOOST_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
33570   title10;
33571   options &_cn;
 
33572   proc datasets library=EMWS2 nolist;
33573   modify Boost_EMRANK;
33574   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
33575   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
33576   run;
 
NOTE: MODIFY was successful for EMWS2.BOOST_EMRANK.DATA.
33577   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33578   %let _cn = %sysfunc(getoption(CENTER));
33579   options nocenter;
33580   proc print data=EMWS2.Boost_EMRANK label noobs;
33581   var
33582   decile gain lift liftc resp respc N _meanP_;
33583   by
33584   notsorted DATAROLE
33585   notsorted TARGET
33586   notsorted TARGETLABEL
33587   ;
33588   title9 ' ';
33589   title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
33590   run;
 
NOTE: There were 40 observations read from the data set EMWS2.BOOST_EMRANK.
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33591   title10;
33592   options &_cn;
 
33593   proc datasets library=EMWS2 nolist;
33594   modify Boost_EMSCOREDIST;
33595   label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
33596   label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
33597   run;
 
NOTE: MODIFY was successful for EMWS2.BOOST_EMSCOREDIST.DATA.
33598   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
