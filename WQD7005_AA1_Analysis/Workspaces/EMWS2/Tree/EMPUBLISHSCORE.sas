****************************************************************;
******             DECISION TREE SCORING CODE             ******;
****************************************************************;
 
******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
LENGTH I_Churn  $    5;
LENGTH U_Churn  $    5;
LENGTH _WARN_  $    4;
 
******              LABELS FOR NEW VARIABLES              ******;
label _NODE_ = 'Node' ;
label _LEAF_ = 'Leaf' ;
label P_Churntrue = 'Predicted: Churn=true' ;
label P_Churnfalse = 'Predicted: Churn=false' ;
label Q_Churntrue = 'Unadjusted P: Churn=true' ;
label Q_Churnfalse = 'Unadjusted P: Churn=false' ;
label V_Churntrue = 'Validated: Churn=true' ;
label V_Churnfalse = 'Validated: Churn=false' ;
label I_Churn = 'Into: Churn' ;
label U_Churn = 'Unnormalized Into: Churn' ;
label _WARN_ = 'Warnings' ;
 
 
******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
LENGTH _ARBFMT_5 $      5; DROP _ARBFMT_5;
_ARBFMT_5 = ' '; /* Initialize to avoid warning. */
LENGTH _ARBFMT_11 $     11; DROP _ARBFMT_11;
_ARBFMT_11 = ' '; /* Initialize to avoid warning. */
LENGTH _ARBFMT_18 $     18; DROP _ARBFMT_18;
_ARBFMT_18 = ' '; /* Initialize to avoid warning. */
LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
LENGTH _ARBFMT_6 $      6; DROP _ARBFMT_6;
_ARBFMT_6 = ' '; /* Initialize to avoid warning. */
 
 
******             ASSIGN OBSERVATION TO NODE             ******;
IF  NOT MISSING(Tenure ) AND
  Tenure  <                  1.5 THEN DO;
  _ARBFMT_5 = PUT( Complain , $5.);
   %DMNORMIP( _ARBFMT_5);
  IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
    IF  NOT MISSING(DaySinceLastOrder ) AND
      DaySinceLastOrder  <                  1.5 THEN DO;
      _ARBFMT_8 = PUT( MaritalStatus , $8.);
       %DMNORMIP( _ARBFMT_8);
      IF _ARBFMT_8 IN ('MARRIED' ) THEN DO;
        IF  NOT MISSING(SatisfactionScore ) AND
          SatisfactionScore  <                  3.5 THEN DO;
          IF  NOT MISSING(OrderAmountHikeFromlastYear ) AND
            OrderAmountHikeFromlastYear  <                 12.5 THEN DO;
            _NODE_  =                   62;
            _LEAF_  =                    9;
            P_Churntrue  =                    1;
            P_Churnfalse  =                    0;
            Q_Churntrue  =                    1;
            Q_Churnfalse  =                    0;
            V_Churntrue  =                    1;
            V_Churnfalse  =                    0;
            I_Churn  = 'TRUE' ;
            U_Churn  = 'true' ;
            END;
          ELSE DO;
            _NODE_  =                   63;
            _LEAF_  =                   10;
            P_Churntrue  =     0.22222222222222;
            P_Churnfalse  =     0.77777777777777;
            Q_Churntrue  =     0.22222222222222;
            Q_Churnfalse  =     0.77777777777777;
            V_Churntrue  =                  0.4;
            V_Churnfalse  =                  0.6;
            I_Churn  = 'FALSE' ;
            U_Churn  = 'false' ;
            END;
          END;
        ELSE DO;
          _NODE_  =                   39;
          _LEAF_  =                   11;
          P_Churntrue  =     0.94736842105263;
          P_Churnfalse  =     0.05263157894736;
          Q_Churntrue  =     0.94736842105263;
          Q_Churnfalse  =     0.05263157894736;
          V_Churntrue  =                    1;
          V_Churnfalse  =                    0;
          I_Churn  = 'TRUE' ;
          U_Churn  = 'true' ;
          END;
        END;
      ELSE DO;
        _NODE_  =                   21;
        _LEAF_  =                   12;
        P_Churntrue  =     0.96078431372549;
        P_Churnfalse  =      0.0392156862745;
        Q_Churntrue  =     0.96078431372549;
        Q_Churnfalse  =      0.0392156862745;
        V_Churntrue  =     0.95833333333333;
        V_Churnfalse  =     0.04166666666666;
        I_Churn  = 'TRUE' ;
        U_Churn  = 'true' ;
        END;
      END;
    ELSE DO;
      _NODE_  =                   11;
      _LEAF_  =                   13;
      P_Churntrue  =     0.62068965517241;
      P_Churnfalse  =     0.37931034482758;
      Q_Churntrue  =     0.62068965517241;
      Q_Churnfalse  =     0.37931034482758;
      V_Churntrue  =     0.79787234042553;
      V_Churnfalse  =     0.20212765957446;
      I_Churn  = 'TRUE' ;
      U_Churn  = 'true' ;
      END;
    END;
  ELSE DO;
    _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
     %DMNORMIP( _ARBFMT_11);
    IF _ARBFMT_11 IN ('COD' ,'E WALLET' ) THEN DO;
      _ARBFMT_8 = PUT( MaritalStatus , $8.);
       %DMNORMIP( _ARBFMT_8);
      IF _ARBFMT_8 IN ('DIVORCED' ,'MARRIED' ) THEN DO;
        _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
         %DMNORMIP( _ARBFMT_18);
        IF _ARBFMT_18 IN ('LAPTOP & ACCESSORY' ) THEN DO;
          _NODE_  =                   33;
          _LEAF_  =                    3;
          P_Churntrue  =                    0;
          P_Churnfalse  =                    1;
          Q_Churntrue  =                    0;
          Q_Churnfalse  =                    1;
          V_Churntrue  =                    0;
          V_Churnfalse  =                    1;
          I_Churn  = 'FALSE' ;
          U_Churn  = 'false' ;
          END;
        ELSE DO;
          IF  NOT MISSING(CityTier ) AND
            CityTier  <                  1.5 THEN DO;
            _NODE_  =                   56;
            _LEAF_  =                    1;
            P_Churntrue  =     0.31578947368421;
            P_Churnfalse  =     0.68421052631578;
            Q_Churntrue  =     0.31578947368421;
            Q_Churnfalse  =     0.68421052631578;
            V_Churntrue  =                  0.4;
            V_Churnfalse  =                  0.6;
            I_Churn  = 'FALSE' ;
            U_Churn  = 'false' ;
            END;
          ELSE DO;
            _NODE_  =                   57;
            _LEAF_  =                    2;
            P_Churntrue  =                 0.85;
            P_Churnfalse  =                 0.15;
            Q_Churntrue  =                 0.85;
            Q_Churnfalse  =                 0.15;
            V_Churntrue  =                  0.9;
            V_Churnfalse  =                  0.1;
            I_Churn  = 'TRUE' ;
            U_Churn  = 'true' ;
            END;
          END;
        END;
      ELSE DO;
        IF  NOT MISSING(SatisfactionScore ) AND
          SatisfactionScore  <                  1.5 THEN DO;
          _NODE_  =                   34;
          _LEAF_  =                    4;
          P_Churntrue  =     0.28571428571428;
          P_Churnfalse  =     0.71428571428571;
          Q_Churntrue  =     0.28571428571428;
          Q_Churnfalse  =     0.71428571428571;
          V_Churntrue  =                    0;
          V_Churnfalse  =                    1;
          I_Churn  = 'FALSE' ;
          U_Churn  = 'false' ;
          END;
        ELSE DO;
          _NODE_  =                   35;
          _LEAF_  =                    5;
          P_Churntrue  =     0.92857142857142;
          P_Churnfalse  =     0.07142857142857;
          Q_Churntrue  =     0.92857142857142;
          Q_Churnfalse  =     0.07142857142857;
          V_Churntrue  =                 0.85;
          V_Churnfalse  =                 0.15;
          I_Churn  = 'TRUE' ;
          U_Churn  = 'true' ;
          END;
        END;
      END;
    ELSE DO;
      IF  NOT MISSING(DaySinceLastOrder ) AND
        DaySinceLastOrder  <                  1.5 THEN DO;
        _NODE_  =                   18;
        _LEAF_  =                    6;
        P_Churntrue  =                  0.5;
        P_Churnfalse  =                  0.5;
        Q_Churntrue  =                  0.5;
        Q_Churnfalse  =                  0.5;
        V_Churntrue  =                 0.54;
        V_Churnfalse  =                 0.46;
        I_Churn  = 'TRUE' ;
        U_Churn  = 'true' ;
        END;
      ELSE DO;
        IF  NOT MISSING(OrderCount ) AND
                           8.5 <= OrderCount  THEN DO;
          _NODE_  =                   37;
          _LEAF_  =                    8;
          P_Churntrue  =                    1;
          P_Churnfalse  =                    0;
          Q_Churntrue  =                    1;
          Q_Churnfalse  =                    0;
          V_Churntrue  =                    1;
          V_Churnfalse  =                    0;
          I_Churn  = 'TRUE' ;
          U_Churn  = 'true' ;
          END;
        ELSE DO;
          _NODE_  =                   36;
          _LEAF_  =                    7;
          P_Churntrue  =     0.23509933774834;
          P_Churnfalse  =     0.76490066225165;
          Q_Churntrue  =     0.23509933774834;
          Q_Churnfalse  =     0.76490066225165;
          V_Churntrue  =     0.26612903225806;
          V_Churnfalse  =     0.73387096774193;
          I_Churn  = 'FALSE' ;
          U_Churn  = 'false' ;
          END;
        END;
      END;
    END;
  END;
ELSE DO;
  _ARBFMT_5 = PUT( Complain , $5.);
   %DMNORMIP( _ARBFMT_5);
  IF _ARBFMT_5 IN ('TRUE' ) THEN DO;
    _ARBFMT_18 = PUT( PreferedOrderCat , $18.);
     %DMNORMIP( _ARBFMT_18);
    IF _ARBFMT_18 IN ('MOBILE' ,'MOBILE PHONE' ) THEN DO;
      _ARBFMT_12 = PUT( PreferredLoginDevice , $12.);
       %DMNORMIP( _ARBFMT_12);
      IF _ARBFMT_12 IN ('COMPUTER' ) THEN DO;
        _ARBFMT_6 = PUT( Gender , $6.);
         %DMNORMIP( _ARBFMT_6);
        IF _ARBFMT_6 IN ('FEMALE' ) THEN DO;
          _NODE_  =                   45;
          _LEAF_  =                   18;
          P_Churntrue  =     0.89473684210526;
          P_Churnfalse  =     0.10526315789473;
          Q_Churntrue  =     0.89473684210526;
          Q_Churnfalse  =     0.10526315789473;
          V_Churntrue  =                    1;
          V_Churnfalse  =                    0;
          I_Churn  = 'TRUE' ;
          U_Churn  = 'true' ;
          END;
        ELSE DO;
          _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
           %DMNORMIP( _ARBFMT_11);
          IF _ARBFMT_11 IN ('COD' ) THEN DO;
            _NODE_  =                   66;
            _LEAF_  =                   16;
            P_Churntrue  =                    1;
            P_Churnfalse  =                    0;
            Q_Churntrue  =                    1;
            Q_Churnfalse  =                    0;
            V_Churntrue  =                    1;
            V_Churnfalse  =                    0;
            I_Churn  = 'TRUE' ;
            U_Churn  = 'true' ;
            END;
          ELSE DO;
            _NODE_  =                   67;
            _LEAF_  =                   17;
            P_Churntrue  =     0.32608695652173;
            P_Churnfalse  =     0.67391304347826;
            Q_Churntrue  =     0.32608695652173;
            Q_Churnfalse  =     0.67391304347826;
            V_Churntrue  =     0.33333333333333;
            V_Churnfalse  =     0.66666666666666;
            I_Churn  = 'FALSE' ;
            U_Churn  = 'false' ;
            END;
          END;
        END;
      ELSE DO;
        _ARBFMT_11 = PUT( PreferredPaymentMode , $11.);
         %DMNORMIP( _ARBFMT_11);
        IF _ARBFMT_11 IN ('E WALLET' ) THEN DO;
          _NODE_  =                   43;
          _LEAF_  =                   15;
          P_Churntrue  =                    1;
          P_Churnfalse  =                    0;
          Q_Churntrue  =                    1;
          Q_Churnfalse  =                    0;
          V_Churntrue  =                    1;
          V_Churnfalse  =                    0;
          I_Churn  = 'TRUE' ;
          U_Churn  = 'true' ;
          END;
        ELSE DO;
          _NODE_  =                   42;
          _LEAF_  =                   14;
          P_Churntrue  =     0.18987341772151;
          P_Churnfalse  =     0.81012658227848;
          Q_Churntrue  =     0.18987341772151;
          Q_Churnfalse  =     0.81012658227848;
          V_Churntrue  =     0.29230769230769;
          V_Churnfalse  =      0.7076923076923;
          I_Churn  = 'FALSE' ;
          U_Churn  = 'false' ;
          END;
        END;
      END;
    ELSE DO;
      _NODE_  =                   13;
      _LEAF_  =                   19;
      P_Churntrue  =     0.09615384615384;
      P_Churnfalse  =     0.90384615384615;
      Q_Churntrue  =     0.09615384615384;
      Q_Churnfalse  =     0.90384615384615;
      V_Churntrue  =     0.08712121212121;
      V_Churnfalse  =     0.91287878787878;
      I_Churn  = 'FALSE' ;
      U_Churn  = 'false' ;
      END;
    END;
  ELSE DO;
    _NODE_  =                    7;
    _LEAF_  =                   20;
    P_Churntrue  =     0.04730617608409;
    P_Churnfalse  =      0.9526938239159;
    Q_Churntrue  =     0.04730617608409;
    Q_Churnfalse  =      0.9526938239159;
    V_Churntrue  =     0.03632694248234;
    V_Churnfalse  =     0.96367305751765;
    I_Churn  = 'FALSE' ;
    U_Churn  = 'false' ;
    END;
  END;
 
****************************************************************;
******          END OF DECISION TREE SCORING CODE         ******;
****************************************************************;
 
drop _LEAF_;
